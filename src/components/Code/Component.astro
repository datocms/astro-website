---
import { Code } from 'astro-expressive-code/components';

type Props = {
  code: string;
  language?: string;
  highlightLines?: number[];
  showLineNumbers?: boolean;
  theme?: 'catppuccin-frappe' | 'catppuccin-latte';
};

const { theme, code, language, highlightLines, showLineNumbers } = Astro.props;
---

{
  theme ? (
    <set-fancy-data-theme data-theme={theme}>
      <Code
        code={code}
        lang={language}
        mark={highlightLines?.map((line) => line + 1)}
        showLineNumbers={showLineNumbers}
      />
    </set-fancy-data-theme>
  ) : (
    <Code
      code={code}
      lang={language}
      mark={highlightLines?.map((line) => line + 1)}
      showLineNumbers={showLineNumbers}
    />
  )
}

<script>
  import { WebComponent } from '~/lib/WebComponent';

  window.customElements.define(
    'set-fancy-data-theme',
    class SetFancyDataTheme extends WebComponent {
      parsedCallback() {
        this.$('.expressive-code').setAttribute('data-theme', this.dataset?.theme!);
      }
    },
  );
</script>
