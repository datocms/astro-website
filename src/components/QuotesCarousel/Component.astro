---
import s from './style.module.css';
import type { FragmentOf } from 'gql.tada';
import { PartnerTestimonialQuotesCarouselFragment, ReviewQuotesCarouselFragment } from './graphql';
import { readFragment } from 'gql.tada';
import { ResponsiveImage } from '~/components/ResponsiveImage';
import { MaybeLink } from '~/components/links/MaybeLink';
import { InlineText } from '~/components/structuredText/InlineText';

interface Props {
  quotes: Array<
    | (FragmentOf<typeof PartnerTestimonialQuotesCarouselFragment> & {
        __typename: 'PartnerTestimonialRecord';
      })
    | (FragmentOf<typeof ReviewQuotesCarouselFragment> & {
        __typename: 'ReviewRecord';
      })
  >;
  animated?: boolean;
}

const { animated, quotes } = Astro.props;

function times(n: number): number[] {
  return Array.from({ length: n }, (_, i) => i);
}

const unmaskedQuotes = quotes.map((quote) =>
  quote.__typename === 'PartnerTestimonialRecord'
    ? readFragment(PartnerTestimonialQuotesCarouselFragment, quote)
    : readFragment(ReviewQuotesCarouselFragment, quote),
);
const repeatCount = animated ? (quotes.length / 4 > 1 ? 2 : 3) : 1;
---

<div class:list={[s.quotes, animated && s.isAnimated]} style={`--items-count: ${quotes.length}`}>
  <div class={s.quotesInner}>
    {
      times(repeatCount).map(() =>
        unmaskedQuotes.map((quote) =>
          quote.__typename === 'PartnerTestimonialRecord' ? (
            <MaybeLink
              href={quote.partner ? `/partners/${quote.partner.slug}` : undefined}
              class={s.root}
            >
              <div class={s.quote}>
                <InlineText data={quote.quote} />
              </div>

              <div class={s.content}>
                <ResponsiveImage pictureClass={s.image} data={quote.image.responsiveImage} />
                <div class={s.authorRole}>
                  <div class={s.name}>{quote.name}</div>
                  <div class={s.role}>
                    {quote.role} @ {quote.partner.name}
                  </div>
                </div>
              </div>
            </MaybeLink>
          ) : (
            <article class={s.root}>
              <div class={s.quote}>
                <InlineText data={quote.quote} />
              </div>

              <div class={s.content}>
                <ResponsiveImage pictureClass={s.image} data={quote.image.responsiveImage} />
                <div class={s.authorRole}>
                  <div class={s.name}>{quote.name}</div>
                  <div class={s.role}>{quote.role}</div>
                </div>
              </div>
            </article>
          ),
        ),
      )
    }
  </div>
</div>
