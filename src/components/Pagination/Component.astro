---
import { createPaginator } from '~/lib/paginator';
import s from './style.module.css';

interface Props {
  perPage?: number;
  currentPage: number;
  totalEntries: number;
  baseUrl: string;
  maxPagesToBeShown?: number;
}

const { perPage = 10, currentPage, totalEntries, baseUrl, maxPagesToBeShown = 7 } = Astro.props;

const paginator = createPaginator(perPage, maxPagesToBeShown);
const {
  pages: pageCount,
  firstPage: firstPage,
  hasPreviousPage: hasPreviousPage,
  hasNextPage: hasNextPage,
  previousPage: previousPage,
  nextPage: nextPage,
} = paginator(totalEntries, currentPage);

const getHref = (index: number) => `${baseUrl}/${index + 1}`;
---

{
  pageCount > 1 && (
    <div class={s.pagination}>
      <a href={getHref(previousPage - 1)} class:list={[s.button, !hasPreviousPage && s.disabled]}>
        &laquo; Previous
      </a>
      <ul class={s.links}>
        {Array.from({ length: pageCount }, (_, i) => (
          <li>
            <a
              href={getHref(firstPage + i - 1)}
              class:list={[s.linksItem, firstPage + i === currentPage && s.linkActive]}
            >
              {firstPage + i}
            </a>
          </li>
        ))}
      </ul>
      <a href={getHref(nextPage - 1)} class:list={[s.button, !hasNextPage && s.disabled]}>
        Next &raquo;
      </a>
    </div>
  )
}
