---
import { MaybeLink } from '~/components/links/MaybeLink';
import { ResponsiveImage } from '~/components/ResponsiveImage';
import s from './style.module.css';
import { type FragmentOf, readFragment } from '~/lib/datocms/graphql';
import { FeatureCardFragment } from './graphql';
import { buildUrlFromGql } from '~/lib/datocms/gqlUrlBuilder';
import { Text } from '../structuredText/Text';

interface Props {
  feature: FragmentOf<typeof FeatureCardFragment>;
}

const { feature } = Astro.props;

// Read unmasked block from fragment
const unmaskedBlock = readFragment(FeatureCardFragment, feature);
---

<MaybeLink
  href={unmaskedBlock.link && buildUrlFromGql(unmaskedBlock.link)}
  class:list={[s.feature, unmaskedBlock.highlight && s.isHighlighted]}
>
  {
    unmaskedBlock.highlight && (
      <div class={s.featureImage}>
        {unmaskedBlock.image && <ResponsiveImage data={unmaskedBlock.image.responsiveImage} />}
      </div>
    )
  }

  <article class={s.featureContent}>
    <div class={s.featureIcon}>
      <img src={unmaskedBlock.icon.url} height={30} width={30} />
    </div>
    <div class={s.featureText}>
      <h4 class={s.featureTitle}>{unmaskedBlock.title}</h4>
      <Text data={unmaskedBlock.description} />
    </div>
    {unmaskedBlock.link && <p class={s.featureLink}>Learn more</p>}
  </article>
</MaybeLink>
