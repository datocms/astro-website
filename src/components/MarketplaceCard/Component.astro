---
import s from './style.module.css';

type Props = {
  href: string;
  svgLogoUrl?: string;
  title: string;
  highlight?: string;
  badge?: { emoji: string; name: string };
  label?: unknown;
  boxed?: boolean;
  size?: 'small' | 'micro' | 'medium' | 'large';
  orientation?: 'horizontal' | 'vertical';
  class?: string;
};

const {
  class: className,
  href,
  title,
  svgLogoUrl,
  highlight,
  badge,
  label,
  boxed = true,
  size = 'medium',
  orientation = 'vertical',
} = Astro.props;
---

<a
  href={href}
  class:list={[s.card, className]}
  data-size={size}
  data-orientation={orientation}
  data-boxed={boxed}
>
  {
    highlight && (
      <div class={s.highlightBadge}>
        <span>{highlight}</span>
      </div>
    )
  }
  <div class={s.visualWrapper}>
    {
      Astro.slots.has('image') ? (
        <slot name="image" />
      ) : svgLogoUrl ? (
        <figure class={s.visualTechnology}>
          <img loading="lazy" class={s.technology} src={svgLogoUrl} />
        </figure>
      ) : null
    }
  </div>
  <article class={s.cardContent}>
    <h2 class={s.cardTitle}>{title}</h2>
    <p class={s.cardDescription}><slot /></p>
    {
      Astro.slots.has('image') && svgLogoUrl && (
        <div class={s.technologyAside}>
          <img loading="lazy" class={s.technology} src={svgLogoUrl} />
        </div>
      )
    }

    {
      (badge || label) && (
        <footer class={s.cardFooter}>
          {badge && (
            <div class={s.cardBadge}>
              <span class={s.cardBadgeEmoji}>{badge.emoji}</span>
              <span class={s.cardBadgeName}>{badge.name}</span>
            </div>
          )}
          {label && (
            <div class={s.cardLabel}>
              <span class={s.cardBadgeName}>{label}</span>
            </div>
          )}
        </footer>
      )
    }
  </article>
</a>
