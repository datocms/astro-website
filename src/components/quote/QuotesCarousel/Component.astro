---
import s from './style.module.css';
import type { FragmentOf } from 'gql.tada';
import { PartnerTestimonialQuoteFragment, ReviewQuoteFragment } from '../graphql';
import { SingleQuote } from '../SingleQuote';

interface Props {
  quotes: Array<
    | (FragmentOf<typeof PartnerTestimonialQuoteFragment> & {
        __typename: 'PartnerTestimonialRecord';
      })
    | (FragmentOf<typeof ReviewQuoteFragment> & {
        __typename: 'ReviewRecord';
      })
  >;
  animated?: boolean;
}

const { animated, quotes } = Astro.props;

function times(n: number): number[] {
  return Array.from({ length: n }, (_, i) => i);
}

const repeatCount = animated ? (quotes.length / 4 > 1 ? 2 : 3) : 1;
---

<div class:list={[s.quotes, animated && s.isAnimated]} style={`--items-count: ${quotes.length}`}>
  <div class={s.quotesInner}>
    {
      times(repeatCount).map(() =>
        quotes.map((quote) => <SingleQuote size="big" quote={quote} size="small" />),
      )
    }
  </div>
</div>
