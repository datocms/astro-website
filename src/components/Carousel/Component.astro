---
import s from './_style.module.css';
import { Svg } from '~/components/Svg';

type Props = {
  loop?: boolean;
  buttonsY?: string;
  removeButtons?: boolean;
  class?: string;
  viewportClass?: string;
  autoScroll?: boolean;
  stopOnInteraction?: boolean;
  stopOnMouseEnter?: boolean;
  dragDisable?: boolean;
};

const {
  loop = false,
  buttonsY = '50%',
  class: className,
  viewportClass,
  autoScroll,
  removeButtons,
  stopOnInteraction,
  stopOnMouseEnter,
  dragDisable,
} = Astro.props;
---

<embla-carousel
  data-autoscroll={autoScroll ? 'true' : undefined}
  data-loop={loop ? 'true' : undefined}
  data-stoponinteraction={stopOnInteraction ? 'true' : undefined}
  data-stoponmouseenter={stopOnMouseEnter ? 'true' : undefined}
  data-dragdisable={dragDisable ? 'true' : undefined}
>
  <div
    data-removebuttons={removeButtons ? 'true' : undefined}
    class:list={[s.embla, className]}
    style={removeButtons ? undefined : `--buttonsY: ${buttonsY}`}
  >
    <div class:list={[s.emblaViewport, viewportClass]} data-viewport>
      <div class={s.emblaContainer}>
        <slot />
      </div>
    </div>
    <button class={s.prevSlide} data-prev>
      <Svg name="icons/regular/angle-left" />
    </button>
    <button class={s.nextSlide} data-next>
      <Svg name="icons/regular/angle-right" />
    </button>
  </div>
</embla-carousel>

<script>
  import emblaCarousel, { type EmblaCarouselType } from 'embla-carousel';
  import autoScroll from 'embla-carousel-auto-scroll';
  import { WebComponent } from '~/lib/WebComponent';

  customElements.define(
    'embla-carousel',
    class EmblaCarousel extends WebComponent {
      api!: EmblaCarouselType;

      parsedCallback() {
        const node = this.$('[data-viewport]');
        const loop = this.dataset.loop === 'true';
        const prevButton = this.$('[data-prev]');
        const nextButton = this.$('[data-next]');
        const stopOnInteraction = this.dataset.stoponInteraction === 'true';
        const stopOnMouseEnter = this.dataset.stoponmouseenter === 'true';
        const dragDisable = this.dataset.dragdisable === 'true';

        this.api = emblaCarousel(
          node,
          {
            loop: loop,
            align: 'start',
            watchDrag: !dragDisable,
          },
          this.dataset.autoscroll
            ? [
                autoScroll({
                  playOnInit: true,
                  startDelay: 200,
                  speed: 1,
                  stopOnInteraction: stopOnInteraction,
                  stopOnMouseEnter: stopOnMouseEnter,
                }),
              ]
            : [],
        );

        this.on(prevButton, 'click', () => this.api.scrollPrev());
        this.on(nextButton, 'click', () => this.api.scrollNext());

        const update = () => {
          prevButton.toggleAttribute('disabled', !this.api.canScrollPrev());
          nextButton.toggleAttribute('disabled', !this.api.canScrollNext());
        };

        update();

        this.api.on('init', update);
        this.api.on('select', update);
      }

      disconnectedCallback() {
        super.disconnectedCallback();
        this.api.destroy();
      }
    },
  );
</script>
