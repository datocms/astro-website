---
import s from './style.module.css';
import { Svg } from '~/components/Svg';
import { DocCalloutFragment } from './graphql';
import type { FragmentOf } from 'gql.tada';
import { readFragment } from 'gql.tada';
import { Text } from '~/components/structuredText/Text';

interface Props {
  block: FragmentOf<typeof DocCalloutFragment>;
}

const { block: maskedBlock } = Astro.props;

const block = readFragment(DocCalloutFragment, maskedBlock);
---

<div
  class:list={[s.docCallout, s[`docCallout--${block.calloutType}`]]}
  data-type={block.calloutType}
>
  {
    block.title && (
      <div class={s.docCalloutTitle}>
        {block.calloutType === 'neutral' ? (
          <Svg name="icons/regular/info-circle" />
        ) : block.calloutType === 'warning' ? (
          <Svg name="icons/regular/exclamation-triangle" />
        ) : block.calloutType === 'positive' ? (
          <Svg name="icons/regular/smile" />
        ) : block.calloutType === 'protip' ? (
          <Svg name="icons/regular/wand-magic" />
        ) : null}{' '}
        <span>
          {block.calloutType === 'protip' && 'Pro tip: '}
          {block.title}
        </span>
      </div>
    )
  }
  <Text data={block.text} />
</div>
