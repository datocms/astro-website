---
import { ReactUiLiveExampleFragment } from './graphql';
import type { FragmentOf } from 'gql.tada';
import { readFragment } from 'gql.tada';
import { fetchReactUiExamples } from './utils';
import { Code } from '~/components/Code';
import { Markdown } from '@astropub/md';
import { Heading } from '~/components/Heading';
import { slugify } from '~/lib/slugify';

interface Props {
  block: FragmentOf<typeof ReactUiLiveExampleFragment>;
}

const { block } = Astro.props;

const examples = await fetchReactUiExamples();

const { componentName } = readFragment(ReactUiLiveExampleFragment, block);

const componentExamples = examples.filter((example) => example.componentName === componentName);
---

{
  componentExamples.map((example) => {
    // TODO: Maybe we can show the actual result?

    return (
      <Fragment>
        <Heading anchor={slugify(example.title)}>{example.title}</Heading>
        <Markdown of={example.description} />

        <Code language="js" code={example.code} />
      </Fragment>
    );
  })
}
