---
import { Seo, type TitleMetaLinkTag } from '@datocms/astro';
import { ClientRouter } from 'astro:transitions';
import './global.css';
import ProgressBar from './_ProgressBar.astro';
import { fetchFavicon } from './fetchFavicon';

type Props = {
  seo: TitleMetaLinkTag[];
};

const { seo } = Astro.props;

const result = await fetchFavicon(Astro);
---

<!doctype html>
<html lang="en" transition:animate="none">
  <head>
    <style id="css-layers" is:inline>
      @layer reset, prose;
    </style>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <Seo data={[...result._site.faviconMetaTags, ...seo]} />
    <link rel="alternate" type="application/rss+xml" title="DatoCMS Blog" href="/blog.xml" />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="DatoCMS Product Changelog"
      href="/product-changelog.xml"
    />
    <script is:inline src="/landing-pages/cookieConsent.js" async></script>
    <slot name="head" />
    <ClientRouter />
    <ProgressBar />
  </head>
  <body>
    <slot />
  </body>
</html>

<script>
  import { getCookie, setCookie } from '~/lib/cookies';

  const urlParams = new URLSearchParams(window.location.search);
  const source = urlParams.get('utm_source');

  if (source) {
    const medium = urlParams.get('utm_medium');
    const campaign = urlParams.get('utm_campaign');
    const cookieContent = JSON.stringify({ source, medium, campaign });

    setCookie('latestDatoUtm', cookieContent, 365);

    if (!getCookie('datoUtm')) {
      setCookie('datoUtm', cookieContent, 365);
    }
  }

  function ensureCssLayersFirst() {
    const head = document.head;
    const cssLayersStyle = head.querySelector('style#css-layers');

    if (cssLayersStyle && head.firstChild !== cssLayersStyle) {
      // Remove the style tag from its current position
      head.removeChild(cssLayersStyle);

      // Insert it as the first child of head
      head.insertBefore(cssLayersStyle, head.firstChild);
    }
  }

  // With Astro Transitions, sometimes the new <styles> will be inserted BEFORE our
  // CSS layers ordering directive, breaking the styles.

  ensureCssLayersFirst();

  const observer = new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type === 'childList' && mutation.target === document.head) {
        ensureCssLayersFirst();
      }
    }
  });

  observer.observe(document.head, {
    childList: true,
  });

  document.addEventListener('astro:page-load', () => {
    if ('posthog' in window) {
      (window as any).posthog.capture('$pageview');
    }
  });

  document.addEventListener('astro:before-swap', () => {
    if ('posthog' in window) {
      (window as any).posthog.capture('$pageleave');
    }
  });
</script>
