---
import s from './style.module.css';
import { Hero } from '~/components/Hero';
import { Image } from '~/components/blocks/Image';
import { InternalVideo } from '~/components/blocks/InternalVideo';
import { Layout } from '~/layouts/Layout';
import { Pagination } from '~/components/Pagination';
import { Prose } from '~/components/Prose';
import { Space } from '~/components/Space';
import { Text } from '~/components/structuredText/Text';
import { Wrapper } from '~/components/Wrapper';
import { executeQuery } from '~/lib/datocms/executeQuery';
import { formatDate } from '~/lib/formatDate';
import { notFoundResponse } from '~/lib/notFoundResponse';
import { query } from '../../pages/product-updates/_graphql';
import { withAllComponents } from '~/lib/datocms/structuredText';

export interface Props {
  pageIndex?: string;
}

const { pageIndex } = Astro.props;

const currentPage = pageIndex ? parseInt(pageIndex) : 1;
const perPage = 10;

const { page, posts, _allChangelogEntriesMeta } = await executeQuery(Astro, query, {
  variables: {
    limit: perPage,
    offset: currentPage * perPage - perPage,
  },
});

const totalEntries = _allChangelogEntriesMeta.count;

// if (currentPage === 1) {
//   return Astro.redirect('/product-updates');
// }

if (!posts || !page) {
  return notFoundResponse();
}
---

<Layout additionalSeo={page._seoMetaTags}>
  <Wrapper>
    <Hero>
      <Fragment slot="title"><mark>Product Updates</mark></Fragment>
      <Fragment slot="subtitle">
        DatoCMS changelog for new features and general improvements
      </Fragment>
    </Hero>
  </Wrapper>
  <Wrapper>
    <Space bottom={2}>
      {
        posts.map((post) => (
          <article class={s.post}>
            <div class={s.categories}>
              {post.categories.map((cat) => (
                <span class={s.category} style={{ backgroundColor: cat.color?.hex }}>
                  {cat.name}
                </span>
              ))}
            </div>

            <h2 class={s.title}>
              <a href={`/product-updates/${post.slug}`}>{post.title}</a>
            </h2>

            <div class={s.info}>{formatDate(post._firstPublishedAt!)}</div>

            <Prose>
              <div class={s.body}>
                <Text
                  data={post.content}
                  blockComponents={withAllComponents(post.content!.blocks, {
                    InternalVideoRecord: InternalVideo,
                    ImageRecord: Image,
                  })}
                />
              </div>
            </Prose>
          </article>
        ))
      }
    </Space>
    <Pagination
      perPage={perPage}
      currentPage={currentPage}
      totalEntries={totalEntries}
      baseUrl="/product-updates/p"
    />
  </Wrapper>
</Layout>
