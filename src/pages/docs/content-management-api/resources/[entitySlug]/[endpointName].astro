---
import { ContentPlusToc } from '~/components/docs/ContentPlusToc';
import { DraftModeQueryListener } from '~/components/DraftModeQueryListener';
import { findGroup, GroupLayout } from '~/layouts/docs/GroupLayout';
import { notFoundResponse } from '~/lib/notFoundResponse';
import { Prose } from '~/components/docs/Prose';
import { buildSidebarItems } from '~/components/docs/cma/buildSidebarItems';
import { findEntity } from '~/components/docs/cma/findEntity';
import { EndpointDescriptionWithExamples } from '~/components/docs/cma/EndpointDescriptionWithExamples';
import { JsExample } from '~/components/docs/cma/JsExample';
import { fetchRestClientEndpointInfo } from '~/components/docs/cma/fetchRestClientEndpointInfo';

const sidebarItems = await buildSidebarItems(Astro.params.entitySlug!);
const entity = await findEntity(Astro.params.entitySlug!);

const restClientEndpointInfo = await fetchRestClientEndpointInfo(
  Astro.params.entitySlug!,
  Astro.params.endpointName!,
);

const result = await findGroup(Astro, 'content-management-api');

if (!result || !entity || !restClientEndpointInfo) {
  return notFoundResponse();
}

const [group, queryListenerProps] = result;

const endpoint = entity.links!.find((endpoint) => endpoint.rel === Astro.params.endpointName);

if (!endpoint) {
  return notFoundResponse();
}

const description = endpoint.documentation?.javascript?.description || endpoint.description;

const examples = endpoint?.documentation?.javascript?.examples || [];
---

<GroupLayout group={group} additionalSeo={[]} additionalSidebarItems={sidebarItems}>
  <ContentPlusToc tocGroups={[]}>
    <Fragment slot="kicker">Content Management API > {entity.title}</Fragment>
    <Fragment slot="title">{endpoint.title}</Fragment>

    <Prose>
      {
        description && (
          <EndpointDescriptionWithExamples
            entity={entity}
            endpoint={endpoint}
            restClientEndpointInfo={restClientEndpointInfo}
            description={description}
            examples={examples}
            exampleComponent={JsExample}
          />
        )
      }
    </Prose>

    <JsExample
      entity={entity}
      endpoint={endpoint}
      restClientEndpointInfo={restClientEndpointInfo}
    />
  </ContentPlusToc>
</GroupLayout>

{queryListenerProps.map((props) => <DraftModeQueryListener {...props} />)}
