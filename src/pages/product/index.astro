---
import Layout from '~/layouts/Layout.astro';
import { Bullets } from '~/components/Bullets';
import { Button } from '~/components/Button';
import { DraftModeQueryListener } from '~/components/DraftModeQueryListener';
import { Flag } from '~/components/Flag';
import { Hero } from '~/components/Hero';
import { HighlightStructuredText } from '~/components/HighlightStructuredText';
import { IntegrationsBanner } from '~/components/IntegrationsBanner';
// import { QuotesCarousel } from '~/components/QuotesCarousel';
import { ResponsiveImage } from '~/components/ResponsiveImage';
import { Space } from '~/components/Space';
import { Wrapper } from '~/components/Wrapper';
import { executeQuery } from '~/lib/datocms/executeQuery';
import { notFoundResponse } from '~/lib/notFoundResponse';
import { query } from './_graphql';
import s from './_style.module.css';
import { Icon } from 'astro-icon/components';
import { FeatureCard } from '~/components/FeatureCard';

const { integrations, page } = await executeQuery(Astro, query);

if (!page || !integrations) {
  return notFoundResponse();
}

// const quotes = page.quotes.filter((quote) => quote.__typename === 'PartnerTestimonialRecord');
const developerFeatures = page.features.filter((f) => f.featureGroup === 'developers');
const marketersFeatures = page.features.filter((f) => f.featureGroup === 'marketers');
---

<Layout>
  <Wrapper>
    <Hero
      title="The Headless CMS that gets out of the way"
      subtitle="DatoCMS is about giving you the tools to do what you need, without the fuss. It's straightforward, it's reliable, and it lets you deliver digital projects fast, with confidence."
    >
      <div class={s.buttonContainer}>
        <Button fs="big" as="a" href="https://dashboard.datocms.com/signup">Try it for free</Button>
        <Button fs="big" as="a" s="invert" href="/contact">Contact sales</Button>
      </div>
    </Hero>
  </Wrapper>

  {
    page.pillars.map((pillar, index) => {
      return (
        <div class={s.flagContainer}>
          <Flag kicker={pillar.theme} flip={index % 2 === 0} style="bad" hideDot>
            <div slot="visual">
              <ResponsiveImage data={pillar.image.responsiveImage} />
            </div>
            <div slot="title">
              <HighlightStructuredText data={pillar.title} />
            </div>
            <article>
              {pillar.pillarCallout}
              <Bullets
                items={[pillar.capability1, pillar.capability2, pillar.capability3]}
                icon={'regular/check'}
                style="bad"
              />
            </article>
          </Flag>
        </div>
      );
    })
  }

  <IntegrationsBanner
    title="Extensible and integrable by design"
    bubbles={integrations
      .filter((i) =>
        ['ci', 'static-generator', 'language', 'cdn', 'framework'].includes(
          i.integrationType.slug as string,
        ),
      )
      .slice(0, 30)
      .map((integration) =>
        integration.squareLogo ? integration.squareLogo.url : integration.logo.url,
      )}
  >
    <p>
      Being a API-first <a href="/">headless CMS</a>, <strong>
        DatoCMS easily integrates with any third-party platform or service
      </strong>. DatoCMS is considered to be the best CMS for developers because it offers some of
      the best tools in the market: plugins, webhooks, templates and SDKs to get you started in no
      time. Check them out on our <a
        href="https://github.com/datocms/"
        target="_blank"
        rel="noreferrer"
      >
        official Github page
      </a>
    </p>
  </IntegrationsBanner>

  <div class={s.testimonials}>
    <h2 class={s.title}>What our customers say...</h2>
    <Space top={2} bottom={3}>
      <!-- <QuotesCarousel quotes={quotes} animated={true} /> -->
    </Space>
  </div>

  <div class={s.featuresWrapper}>
    <h2 class={s.featureSectionTitle}>...and the features they love!</h2>

    <div class={s.featureGroupHeading}>
      <figure class={s.featureGroupIcon}>
        <Icon name="illustrations/developers-2" />
      </figure>
      <h3 class={s.featureGroupTitle}>For developers</h3>
    </div>
    <div data-developers class={s.featuresContainer}>
      {
        developerFeatures.map((feature) => {
          return <FeatureCard feature={feature} />;
        })
      }
    </div>

    <div class={s.featureGroupHeading}>
      <figure class={s.featureGroupIcon}>
        <Icon name="illustrations/content-editors" />
      </figure>
      <h3 class={s.featureGroupTitle}>For marketers</h3>
    </div>
    <div class={s.featuresContainer}>
      {
        marketersFeatures.map((feature) => {
          return <FeatureCard feature={feature} />;
        })
      }
    </div>
  </div>

  <DraftModeQueryListener query={query} />
</Layout>
