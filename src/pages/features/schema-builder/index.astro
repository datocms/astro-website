---
import { CalloutCard } from '~/components/CalloutCard';
import { DraftModeQueryListener } from '~/components/DraftModeQueryListener';
import { Flag } from '~/components/Flag';
import { Hero } from '~/components/Hero';
import { Image } from 'astro:assets';
import { Layout } from '~/layouts/Layout';
import { SingleQuote } from '~/components/quote/SingleQuote';
import { Space } from '~/components/Space';
import { TitleStripWithContent } from '~/components/TitleStripWithContent';
import { Wrapper } from '~/components/Wrapper';
import { avoidAstroTypeCheckBug, notFoundResponse } from '~/lib/notFoundResponse';
import { executeQuery } from '~/lib/datocms/executeQuery';
import { overrideSeo, seoDescription, seoGeneratedCard, seoTitle } from '~/lib/datocms/seo';
import { query } from './_graphql';

const variables = { slug: Astro.url.pathname.split('/').pop()! };
const { page } = await executeQuery(Astro, query, { variables });

if (!page) {
  avoidAstroTypeCheckBug(notFoundResponse);
  return notFoundResponse();
}
---

<Layout
  seo={overrideSeo(
    page._seoMetaTags,
    seoTitle('Schema Builder - Visual Content Modeling for Headless CMS'),
    seoDescription(
      'Build flexible content structures with DatoCMS visual schema builder. Define models, blocks, and custom fields with instant GraphQL and REST APIs. No code required.',
    ),
    seoGeneratedCard(Astro, {
      title: 'Schema Builder',
      excerpt: 'Define your content structure on your terms with models, blocks, and plugins.',
    }),
  )}
>
  <Hero>
    <Fragment slot="kicker">Schema builder</Fragment>
    <Fragment slot="title">
      Define your content <mark>on your terms</mark>
    </Fragment>
    <Fragment slot="subtitle">
      Build without compromises with an intuitive no-code schema builder, using models, blocks, and
      plugins. Your structure. Your way.
    </Fragment>
  </Hero>

  <Flag>
    <Fragment slot="visual">
      <Image
        src="https://www.datocms-assets.com/205/1759393738-foundation.png"
        inferSize
        alt="Schema"
        style="width: 100%; height: auto;"
      />
    </Fragment>
    <Fragment slot="kicker"> Visual schema editor for content modeling </Fragment>
    <Fragment slot="title"> Lay the foundation of your content the right way </Fragment>
    <p>
      The Schema Builder helps you define the core build of your content architecture using models,
      blocks, and plugins, determining how your content is organized and accessed.
    </p>
    <p>Changes apply instantly across the API. No code, no rebuilds.</p>
  </Flag>

  <Flag>
    <Fragment slot="visual">
      <Image
        src="https://www.datocms-assets.com/205/1759393738-scructure.png"
        inferSize
        alt="Models"
        style="width: 100%; height: auto;"
      />
    </Fragment>
    <Fragment slot="kicker"> Create your schema with models </Fragment>
    <Fragment slot="title"> Establish the right structure with Models & Fields </Fragment>
    <p>
      Models are your core content types, like posts, pages, or products, built using fields from
      20+ options like strings, assets, SEO, and JSON for any data type.
    </p>
    <p>
      Group fields, control presentation, and reorder them easily. The schema you define here powers
      both, the API and UI, instantly.
    </p>
  </Flag>

  <Space top={1} bottom={3}>
    <Wrapper>
      <CalloutCard
        title="Psst: Feeling uninspired or just getting started with Headless CMS?"
        ctaLink="/marketplace/recipes"
        illustration="svg/illustrations/live-4"
        asLink
      >
        <Fragment slot="text">
          We put together a few super common models that most website projects have. Think blog
          post, author, landing page, and so on. Check out the Recipes in the Marketplace to find a
          starting point to see how schema building works!
        </Fragment>
      </CalloutCard>
    </Wrapper>
  </Space>

  <Flag>
    <Fragment slot="visual">
      <Image
        src="https://www.datocms-assets.com/205/1759393738-blocks.png"
        inferSize
        alt="Blocks"
        style="width: 100%; height: auto;"
      />
    </Fragment>
    <Fragment slot="kicker">Enrich it with Dynamic content structures</Fragment>
    <Fragment slot="title"> Improve flexibility and content integrity with Blocks </Fragment>
    <p>
      Blocks are dynamic, flexible, and repeatable structures like CTAs, quotes, and sliders, that
      you can embed inside your records.
    </p>
    <p>
      You can intersperse text and blocks in Structured Text fields, or give editors a drag-and-drop
      page builder experience by combining blocks using the Modular Content field.
    </p>
  </Flag>

  <Flag>
    <Fragment slot="visual">
      <Image
        src="https://www.datocms-assets.com/205/1759393738-custom.png"
        inferSize
        alt="Plugin Fields"
        style="width: 100%; height: auto;"
      />
    </Fragment>
    <Fragment slot="kicker"> And then supercharge it with plugins </Fragment>
    <Fragment slot="title"> Take it a step further with custom capabilities. </Fragment>
    <p>
      Need a field to map geolocation data in real time? Or a different layout to let editors pick
      and choose from a product grid?
    </p>
    <p>
      You can add new field types via the Plugin SDK, either with community plugins or build your
      own! They run inside the schema builder, fully integrated.
    </p>
  </Flag>

  <Space top={1} bottom={3}>
    <Wrapper>
      <CalloutCard
        title="Plugins? In a Headless CMS"
        ctaLink="/marketplace/plugins"
        illustration="svg/illustrations/developers-1"
        asLink
      >
        <Fragment slot="text">
          Understandable. If the wordâ€™s giving you WP PTSD, then you can relax ðŸ˜… We prefer to
          encourage plugins as fields for specific use-cases like star ratings or product pickers to
          avoid clunking up the CMS with 1000s of niche features.
        </Fragment>
      </CalloutCard>
    </Wrapper>
  </Space>

  <Space bottom={3}>
    <TitleStripWithContent stripHeight="full">
      <Fragment slot="kicker"> Good to go from the get go </Fragment>
      <Fragment slot="title"> Get ready to ship. Instantly. </Fragment>
      <Fragment slot="subtitle">
        All your schema changes are instantly available across the UI and the API. Let your editors
        get back to work while you continue querying and building right away.
      </Fragment>
    </TitleStripWithContent>
  </Space>

  <Flag>
    <Fragment slot="visual">
      <Image
        src="https://www.datocms-assets.com/205/1759393738-breaking-changes.png"
        inferSize
        alt="Envs"
        style="width: 100%; height: auto;"
      />
    </Fragment>
    <Fragment slot="kicker"> Safe schema changes with environments </Fragment>
    <Fragment slot="title"> Shamelessly built for breaking (changes) </Fragment>
    <p>
      Test schema updates in isolated environments to add, remove, or rename fields without
      affecting your primary environment or production project.
    </p>
    <p>
      Control UI visibility and validation rules per field, make all the breaking changes you need,
      and merge changes when ready, without blocking your editors.
    </p>
  </Flag>

  <Flag>
    <Fragment slot="visual">
      <Image
        src="https://www.datocms-assets.com/205/1759393738-apis.png"
        inferSize
        alt="GraphQL"
        style="width: 100%; height: auto;"
      />
    </Fragment>
    <Fragment slot="kicker"> Instant GraphQL and REST APIs </Fragment>
    <Fragment slot="title"> Query everything, everywhere, all at once </Fragment>
    <p>
      Your schema defines your API in real time, with everything instantly available via the GraphQL
      Content Delivery API.
    </p>
    <p>
      Want to make changes programmatically? Ping the REST Content Management API. Want to test
      queries? Use the GraphQL API Explorer. Need even more integration? Try our React, Vue, Svelte,
      and Astro SDKs, to name a few.
    </p>
  </Flag>

  {
    page.quote && (
      <Wrapper>
        <Space top={3} bottom={3}>
          <SingleQuote quote={page.quote} />
        </Space>
      </Wrapper>
    )
  }

  <Flag>
    <Fragment slot="visual">
      <Image
        src="https://www.datocms-assets.com/205/1759393738-dx-ux.png"
        inferSize
        alt="Great DX"
        style="width: 100%; height: auto;"
      />
    </Fragment>
    <Fragment slot="kicker"> Great DX, without any sacrifice on the UX </Fragment>
    <Fragment slot="title"> Loved by 1000s of teams globally for a reason. </Fragment>
    <p>
      Developers can update the schema visually without writing migrations or redeploying
      environments.
    </p>
    <p>
      Editors get clean, structured interfaces tailored to each model and block, with no clutter or
      ambiguity.
    </p>
    <p>Everything just works. No sync issues. No bottlenecks.</p>
  </Flag>

  <DraftModeQueryListener query={query} variables={variables} />
</Layout>
