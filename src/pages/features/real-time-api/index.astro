---
import RealtimeUpdatesDemo from '~/components/featureAnimations/RealtimeUpdatesDemo';
import { Bullets } from '~/components/Bullets';
import { Button } from '~/components/Button';
import { Flag } from '~/components/Flag';
import { Hero } from '~/components/Hero';
import { Layout } from '~/layouts/Layout';
import { SingleQuote } from '~/components/quote/SingleQuote';
import { Space } from '~/components/Space';
import { Svg } from '~/components/Svg';
import { TitleStripWithContent } from '~/components/TitleStripWithContent';
import { VideoPlayer } from '~/components/VideoPlayer';
import { avoidAstroTypeCheckBug, notFoundResponse } from '~/lib/notFoundResponse';
import { executeQuery } from '~/lib/datocms/executeQuery';
import { query } from './_graphql';
import { Wrapper } from '~/components/Wrapper';
import { DraftModeQueryListener } from '~/components/DraftModeQueryListener';

const variables = { slug: Astro.url.pathname.split('/').pop()! };
const { page } = await executeQuery(Astro, query, { variables });

if (!page || !page.video) {
  avoidAstroTypeCheckBug(notFoundResponse);
  return notFoundResponse();
}
---

<Layout additionalSeo={page._seoMetaTags}>
  <Hero>
    <Fragment slot="kicker">Real-time API</Fragment>
    <Fragment slot="title">
      Real-time edits, on your <mark>production website</mark>
    </Fragment>
    <Fragment slot="subtitle">
      Say goodbye to dedicated preview servers. Thanks to <strong>our real-time API</strong>, you
      will completely change the way you work and interact with your content
      <strong> with just a couple of lines of code on your frontend website. </strong>
    </Fragment>
  </Hero>

  <TitleStripWithContent>
    <Fragment slot="kicker">Real-time API + content preview</Fragment>
    <Fragment slot="title">Preview changes as they get authored, no refresh needed</Fragment>
    <Fragment slot="subtitle">
      <p>
        Instead of the API consumer only getting the new data upon their next query, with
        <strong>DatoCMS&apos;s Real-time Updates, new data is instantly pushed to them</strong>.
      </p>
    </Fragment>
    <VideoPlayer data={page.video} autoPlay={true} />
  </TitleStripWithContent>

  {
    page.quote && (
      <Wrapper>
        <Space top={3} bottom={3}>
          <SingleQuote quote={page.quote} />
        </Space>
      </Wrapper>
    )
  }

  <Flag>
    <Fragment slot="visual">
      <RealtimeUpdatesDemo client:load />
    </Fragment>
    <Fragment slot="kicker">Live real-time API </Fragment>
    <Fragment slot="title">Need to <mark>cover live events</mark> as they happen?</Fragment>
    <p>
      The same API used to preview draft content can also be applied to offer
      <strong> real-time updates to your website's final visitors </strong>. Our infrastructure can <strong
        >easily handle thousands of live users</strong
      > with multiple updates per minute.
    </p>
    <p>
      <Button
        as="a"
        fs="small"
        p="small"
        s="invert"
        href="/marketplace/starters/next-js-event-coverage-liveblog"
        title="Next.js real-time"
      >
        Try the Live-blog demo for Next.js
      </Button>
    </p>
  </Flag>

  <Flag style="good">
    <Fragment slot="visual">
      <Svg name="svg/illustrations/live" />
    </Fragment>
    <Fragment slot="kicker">Real-time GraphQL API</Fragment>
    <Fragment slot="title">
      GraphQL and Server-Sent Events, to deliver the <strong>best developer ergonomic</strong>
    </Fragment>
    <p>
      The Real-time Updates API uses <em>Server-Sent Events</em>, which is a protocol supported
      natively from all modern browsers, to
      <strong>transform your regular GraphQL into streaming subscriptions</strong>. Using our React
      and Vue libraries you can <strong>get started in literally seconds</strong>.
    </p>
  </Flag>

  <Flag style="good">
    <Fragment slot="visual">
      <Svg name="svg/illustrations/zen" />
    </Fragment>
    <Fragment slot="kicker">APIs + Worldwide CDN</Fragment>
    <Fragment slot="title">
      A complete set of <mark>smart, modern APIs</mark>
    </Fragment>
    <p>
      DatoCMS does not only offer a powerful real-time API but a full coordinated suite of different <strong
        >APIs and tools</strong
      > to work seamlessly with the three fundamental blocks of content: <strong
        >text, images and video</strong
      >. Everything is built on CDN,
      <strong>optimized for speed and scalability</strong>.
    </p>
    <article>
      <Bullets style="good">
        <li>
          <Svg name="icons/regular/check" />
          <a href="/features/images-api" title="Images API">
            <span>Images API</span>
          </a>
        </li>
        <li>
          <Svg name="icons/regular/check" />
          <a href="/features/video-api" title="Video API">
            <span>Video API</span>
          </a>
        </li>
        <li>
          <Svg name="icons/regular/check" />
          <a href="/features/worldwide-cdn" title="Fastest headless CMS CDN">
            <span>Worldwide CDN</span>
          </a>
        </li>
        <li>
          <Svg name="icons/regular/check" />
          <a href="/features/headless-cms-graphql" title="Headless CMS GraphQL">
            <span>Content GraphQL API</span>
          </a>
        </li>
      </Bullets>
    </article>
  </Flag>

  <DraftModeQueryListener query={query} variables={variables} />
</Layout>
