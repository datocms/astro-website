"""Record of type üè¢ About Home  (about_page)"""
type AboutPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seoField: SeoField
  updatedAt: DateTime!
}

union AcademyChapterModelContentBlocksField = ImageRecord | InternalVideoRecord | TableRecord

type AcademyChapterModelContentField {
  blocks: [AcademyChapterModelContentBlocksField!]!
  links: [String!]!
  value: JsonField!
}

input AcademyChapterModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  content: StructuredTextFilter
  seo: SeoFilter
  yoastAnalysis: JsonFilter
  title: StringFilter
  slug: SlugFilter
  OR: [AcademyChapterModelFilter]
  AND: [AcademyChapterModelFilter]
}

enum AcademyChapterModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type üìù Academy Chapter (academy_chapter)"""
type AcademyChapterRecord implements RecordInterface {
  _allReferencingAcademyCourses(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenAcademyCourseAndAcademyChapter

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: AcademyCourseModelFilter
    orderBy: [AcademyCourseModelOrderBy] = [position_ASC]
  ): [AcademyCourseRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingAcademyCoursesMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenAcademyCourseAndAcademyChapter

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: AcademyCourseModelFilter
  ): CollectionMetadata!
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: AcademyChapterModelContentField!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  slug: String!
  title: String!
  updatedAt: DateTime!
  yoastAnalysis: JsonField
}

"""Linking fields"""
enum AcademyCourseModelFieldsReferencingAcademyChapterModel {
  academyCourse_chapters
}

input AcademyCourseModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  introduction: StructuredTextFilter
  chapters: LinksFilter
  illustration: StringFilter
  name: StringFilter
  slug: SlugFilter
  OR: [AcademyCourseModelFilter]
  AND: [AcademyCourseModelFilter]
}

type AcademyCourseModelIntroductionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

enum AcademyCourseModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  illustration_ASC
  illustration_DESC
  name_ASC
  name_DESC
}

"""Record of type üè´ Academy Course (academy_course)"""
type AcademyCourseRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  chapters: [AcademyChapterRecord!]!
  createdAt: DateTime!
  id: ItemId!
  illustration: String!
  introduction: AcademyCourseModelIntroductionField!
  name: String!
  position: IntType
  slug: String!
  updatedAt: DateTime!
}

"""Record of type üéì Academy Home (academy_page)"""
type AcademyPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
}

enum AgencyProgramWorkflowStage {
  editMode
  reviewRequested
  readyForPublication
}

"""Specifies how to filter by stage"""
input AgencyProgramWorkflowStageFilter {
  """Search the record with the specified stage"""
  eq: AgencyProgramWorkflowStage

  """Exclude the record with the specified stage"""
  neq: AgencyProgramWorkflowStage

  """Search records with the specified stagees"""
  in: [AgencyProgramWorkflowStage!]

  """Search records without the specified stagees"""
  notIn: [AgencyProgramWorkflowStage!]
}

input AuthorModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  avatar: FileFilter
  name: StringFilter
  slug: SlugFilter
  OR: [AuthorModelFilter]
  AND: [AuthorModelFilter]
}

enum AuthorModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
}

"""Record of type ‚úçÔ∏è Author (author)"""
type AuthorRecord implements RecordInterface {
  _allReferencingBlogPosts(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenBlogPostAndAuthor

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: BlogPostModelFilter
    orderBy: [BlogPostModelOrderBy] = [_updatedAt_DESC]
  ): [BlogPostRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingBlogPostsMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenBlogPostAndAuthor

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: BlogPostModelFilter
  ): CollectionMetadata!
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  avatar: ImageFileField!
  createdAt: DateTime!
  id: ItemId!
  name: String!
  slug: String!
  updatedAt: DateTime!
}

input BadgeModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  emoji: StringFilter
  name: StringFilter
  OR: [BadgeModelFilter]
  AND: [BadgeModelFilter]
}

enum BadgeModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  emoji_ASC
  emoji_DESC
  name_ASC
  name_DESC
}

"""Record of type ‚ú® Badge (badge)"""
type BadgeRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  emoji: String!
  id: ItemId!
  name: String!
  updatedAt: DateTime!
}

union BlogPostModelContentBlocksField = CodesandboxEmbedBlockRecord | CtaButtonRecord | DemoRecord | ImageRecord | InternalVideoRecord | MultipleDemosBlockRecord | QuestionAnswerRecord | ShowcaseProjectBlockRecord | TableRecord | TutorialVideoRecord | VideoRecord

type BlogPostModelContentField {
  blocks: [BlogPostModelContentBlocksField!]!
  links: [BlogPostModelContentLinksField!]!
  value: JsonField!
}

"""Specify nested blocks fields conditions"""
input BlogPostModelContentFieldBlocksConditions {
  demo: DemoModelFilter
  image: ImageModelFilter
  questionAnswer: QuestionAnswerModelFilter
  multipleDemosBlock: MultipleDemosBlockModelFilter
  internalVideo: InternalVideoModelFilter
  video: VideoModelFilter
  codesandboxEmbedBlock: CodesandboxEmbedBlockModelFilter
  ctaButton: CtaButtonModelFilter
  tutorialVideo: TutorialVideoModelFilter
  showcaseProjectBlock: ShowcaseProjectBlockModelFilter
  table: TableModelFilter
}

"""Specify how to filter based on this field's blocks"""
input BlogPostModelContentFieldBlocksFilter {
  """
  Filter records containing at least one block matching the specified conditions
  """
  any: BlogPostModelContentFieldBlocksConditions

  """Filter records containing at least one block of any kind or not"""
  exists: BooleanType

  """Filter records containing at least one block of specified type or not"""
  containsAny: BlogPostModelContentFieldBlocksPresence
}

"""Specify nested blocks types presence"""
input BlogPostModelContentFieldBlocksPresence {
  demo: BooleanType
  image: BooleanType
  questionAnswer: BooleanType
  multipleDemosBlock: BooleanType
  internalVideo: BooleanType
  video: BooleanType
  codesandboxEmbedBlock: BooleanType
  ctaButton: BooleanType
  tutorialVideo: BooleanType
  showcaseProjectBlock: BooleanType
  table: BooleanType
}

"""Specify how to filter this specific Structured Text field instance"""
input BlogPostModelContentFieldFilter {
  """Filter records based on this field value"""
  value: StructuredTextFilter

  """Filter records based on this field blocks"""
  blocks: BlogPostModelContentFieldBlocksFilter
}

union BlogPostModelContentLinksField = BlogPostRecord | ChangelogEntryRecord

type BlogPostModelExcerptField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Linking fields"""
enum BlogPostModelFieldsReferencingAuthorModel {
  blogPost_author
}

"""Linking fields"""
enum BlogPostModelFieldsReferencingShowcaseProjectModel {
  blogPost_content
  blogPost_content__showcaseProjectBlock_showcaseProjects
}

"""Linking fields"""
enum BlogPostModelFieldsReferencingUserGuidesEpisodeModel {
  blogPost_content
  blogPost_content__tutorialVideo_tutorials
}

input BlogPostModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  yoastAnalysis: JsonFilter
  content: BlogPostModelContentFieldFilter
  excerpt: StructuredTextFilter
  seoSettings: SeoFilter
  author: LinksFilter
  seoH1: StringFilter
  canonicalUrl: StringFilter
  title: StringFilter
  slug: SlugFilter
  coverImage: FileFilter
  OR: [BlogPostModelFilter]
  AND: [BlogPostModelFilter]
}

enum BlogPostModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  seoH1_ASC
  seoH1_DESC
  canonicalUrl_ASC
  canonicalUrl_DESC
  title_ASC
  title_DESC
}

"""Record of type üìù Blog Post (blog_post)"""
type BlogPostRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  author: [AuthorRecord!]!
  canonicalUrl: String
  content: BlogPostModelContentField!
  coverImage: ImageFileField
  createdAt: DateTime!
  excerpt: BlogPostModelExcerptField!
  id: ItemId!
  seoH1: String
  seoSettings: SeoField
  slug: String!
  title: String!
  updatedAt: DateTime!
  yoastAnalysis: JsonField
}

"""Record of type üì∞ Blog Home (blog)"""
type BlogRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
}

"""Specifies how to filter Boolean fields"""
input BooleanFilter {
  """Search for records with an exact match"""
  eq: BooleanType
}

"""Represents `true` or `false` values."""
scalar BooleanType

input ChangelogCategoryModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  name: StringFilter
  color: ColorFilter
  OR: [ChangelogCategoryModelFilter]
  AND: [ChangelogCategoryModelFilter]
}

enum ChangelogCategoryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
}

"""Record of type üîñ Product Update Category (changelog_category)"""
type ChangelogCategoryRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  color: ColorField!
  createdAt: DateTime!
  id: ItemId!
  name: String!
  position: IntType
  updatedAt: DateTime!
}

union ChangelogEntryModelContentBlocksField = ImageRecord | InternalVideoRecord

type ChangelogEntryModelContentField {
  blocks: [ChangelogEntryModelContentBlocksField!]!
  links: [String!]!
  value: JsonField!
}

input ChangelogEntryModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  showInBlog: BooleanFilter
  content: StructuredTextFilter
  categories: LinksFilter
  seo: SeoFilter
  title: StringFilter
  slug: SlugFilter
  OR: [ChangelogEntryModelFilter]
  AND: [ChangelogEntryModelFilter]
}

enum ChangelogEntryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  showInBlog_ASC
  showInBlog_DESC
  title_ASC
  title_DESC
}

"""Record of type üìù Changelog entry (changelog_entry)"""
type ChangelogEntryRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  categories: [ChangelogCategoryRecord!]!
  content: ChangelogEntryModelContentField!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  showInBlog: BooleanType!
  slug: String!
  title: String!
  updatedAt: DateTime!
}

"""Record of type üÜï Product Updates Home (changelog)"""
type ChangelogRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
}

input CloneButtonFormModelFilter {
  id: ItemIdFilter
  OR: [CloneButtonFormModelFilter]
  AND: [CloneButtonFormModelFilter]
}

"""Block of type Clone Button Form (clone_button_form)"""
type CloneButtonFormRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
}

type CodeExcerptBlockModelContentField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input CodeExcerptBlockModelFilter {
  id: ItemIdFilter
  code: TextFilter
  language: StringFilter
  githubPackageName: StringFilter
  githubRepoTitle: StringFilter
  OR: [CodeExcerptBlockModelFilter]
  AND: [CodeExcerptBlockModelFilter]
}

type CodeExcerptBlockModelTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type üíª Code excerpt block (code_excerpt_block)"""
type CodeExcerptBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  code(
    """Process content as markdown"""
    markdown: Boolean
  ): String!
  content: CodeExcerptBlockModelContentField
  createdAt: DateTime!
  githubPackageName: String
  githubRepoTitle: String
  id: ItemId!
  language: String!
  title: CodeExcerptBlockModelTitleField!
  updatedAt: DateTime!
}

input CodesandboxEmbedBlockModelFilter {
  id: ItemIdFilter
  slug: StringFilter
  preview: FileFilter
  OR: [CodesandboxEmbedBlockModelFilter]
  AND: [CodesandboxEmbedBlockModelFilter]
}

"""Block of type CodeSandbox embed (codesandbox_embed_block)"""
type CodesandboxEmbedBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  preview: ImageFileField!
  slug: String!
  updatedAt: DateTime!
}

type CollectionMetadata {
  count: IntType!
}

enum ColorBucketType {
  red
  orange
  pink
  cyan
  purple
  blue
  yellow
  green
  brown
  grey
  white
  black
}

type ColorField {
  alpha: IntType!
  blue: IntType!
  cssRgb: String!
  green: IntType!
  hex: String!
  red: IntType!
}

"""Specifies how to filter Color fields"""
input ColorFilter {
  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

input ContinentModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  code: StringFilter
  name: StringFilter
  OR: [ContinentModelFilter]
  AND: [ContinentModelFilter]
}

enum ContinentModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  code_ASC
  code_DESC
  name_ASC
  name_DESC
}

"""Record of type üåç Continent (continent)"""
type ContinentRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  code: String!
  createdAt: DateTime!
  id: ItemId!
  name: String!
  updatedAt: DateTime!
}

input CountryModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  coordinates: LatLonFilter
  continent: LinkFilter
  code: StringFilter
  name: StringFilter
  capital: StringFilter
  emoji: StringFilter
  OR: [CountryModelFilter]
  AND: [CountryModelFilter]
}

enum CountryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  code_ASC
  code_DESC
  name_ASC
  name_DESC
  capital_ASC
  capital_DESC
  emoji_ASC
  emoji_DESC
}

"""Record of type üó∫ Country (country)"""
type CountryRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  capital: String!
  code: String!
  continent: ContinentRecord!
  coordinates: LatLonField!
  createdAt: DateTime!
  emoji: String!
  id: ItemId!
  name: String!
  updatedAt: DateTime!
}

"""Specifies how to filter by creation datetime"""
input CreatedAtFilter {
  """
  Filter records with a value that's strictly greater than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gt: DateTime

  """
  Filter records with a value that's less than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lt: DateTime

  """
  Filter records with a value that's greater than or equal to than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gte: DateTime

  """
  Filter records with a value that's less or equal than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lte: DateTime

  """
  Filter records with a value that's within the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  eq: DateTime

  """
  Filter records with a value that's outside the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  neq: DateTime

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

input CtaButtonModelFilter {
  id: ItemIdFilter
  text: StringFilter
  url: StringFilter
  OR: [CtaButtonModelFilter]
  AND: [CtaButtonModelFilter]
}

"""Block of type CTA Button (cta_button)"""
type CtaButtonRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  text: String!
  updatedAt: DateTime!
  url: String!
}

scalar CustomData

input CustomerModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  logo: FileFilter
  name: StringFilter
  OR: [CustomerModelFilter]
  AND: [CustomerModelFilter]
}

enum CustomerModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
}

"""Record of type üë®‚Äçüíº Customer (customer)"""
type CustomerRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  logo: FileField!
  name: String!
  position: IntType
  updatedAt: DateTime!
}

"""Record of type üì∞ Customer Stories Index (customer_stories_index)"""
type CustomerStoriesIndexRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
}

union CustomerStoryModelContentBlocksField = CodesandboxEmbedBlockRecord | CtaButtonRecord | DemoRecord | ImageRecord | InternalVideoRecord | MultipleDemosBlockRecord | QuestionAnswerRecord | ShowcaseProjectBlockRecord | TableRecord | TutorialVideoRecord | VideoRecord

type CustomerStoryModelContentField {
  blocks: [CustomerStoryModelContentBlocksField!]!
  links: [CustomerStoryModelContentLinksField!]!
  value: JsonField!
}

"""Specify nested blocks fields conditions"""
input CustomerStoryModelContentFieldBlocksConditions {
  demo: DemoModelFilter
  image: ImageModelFilter
  questionAnswer: QuestionAnswerModelFilter
  multipleDemosBlock: MultipleDemosBlockModelFilter
  internalVideo: InternalVideoModelFilter
  video: VideoModelFilter
  codesandboxEmbedBlock: CodesandboxEmbedBlockModelFilter
  ctaButton: CtaButtonModelFilter
  tutorialVideo: TutorialVideoModelFilter
  showcaseProjectBlock: ShowcaseProjectBlockModelFilter
  table: TableModelFilter
}

"""Specify how to filter based on this field's blocks"""
input CustomerStoryModelContentFieldBlocksFilter {
  """
  Filter records containing at least one block matching the specified conditions
  """
  any: CustomerStoryModelContentFieldBlocksConditions

  """Filter records containing at least one block of any kind or not"""
  exists: BooleanType

  """Filter records containing at least one block of specified type or not"""
  containsAny: CustomerStoryModelContentFieldBlocksPresence
}

"""Specify nested blocks types presence"""
input CustomerStoryModelContentFieldBlocksPresence {
  demo: BooleanType
  image: BooleanType
  questionAnswer: BooleanType
  multipleDemosBlock: BooleanType
  internalVideo: BooleanType
  video: BooleanType
  codesandboxEmbedBlock: BooleanType
  ctaButton: BooleanType
  tutorialVideo: BooleanType
  showcaseProjectBlock: BooleanType
  table: BooleanType
}

"""Specify how to filter this specific Structured Text field instance"""
input CustomerStoryModelContentFieldFilter {
  """Filter records based on this field value"""
  value: StructuredTextFilter

  """Filter records based on this field blocks"""
  blocks: CustomerStoryModelContentFieldBlocksFilter
}

union CustomerStoryModelContentLinksField = BlogPostRecord | ChangelogEntryRecord

type CustomerStoryModelExcerptField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Linking fields"""
enum CustomerStoryModelFieldsReferencingShowcaseProjectModel {
  customerStory_content
  customerStory_content__showcaseProjectBlock_showcaseProjects
}

"""Linking fields"""
enum CustomerStoryModelFieldsReferencingUserGuidesEpisodeModel {
  customerStory_content
  customerStory_content__tutorialVideo_tutorials
}

input CustomerStoryModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  people: LinksFilter
  coverImage: FileFilter
  yoastAnalysis: JsonFilter
  seoSettings: SeoFilter
  excerpt: StructuredTextFilter
  title: StringFilter
  seoH1: StringFilter
  canonicalUrl: StringFilter
  slug: SlugFilter
  content: CustomerStoryModelContentFieldFilter
  OR: [CustomerStoryModelFilter]
  AND: [CustomerStoryModelFilter]
}

enum CustomerStoryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
  seoH1_ASC
  seoH1_DESC
  canonicalUrl_ASC
  canonicalUrl_DESC
}

"""Record of type üíÅ Customer Story (customer_story)"""
type CustomerStoryRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  canonicalUrl: String
  content: CustomerStoryModelContentField!
  coverImage: FileField
  createdAt: DateTime!
  excerpt: CustomerStoryModelExcerptField!
  id: ItemId!
  people: [PersonRecord!]!
  seoH1: String
  seoSettings: SeoField
  slug: String!
  title: String!
  updatedAt: DateTime!
  yoastAnalysis: JsonField
}

"""A ISO 8601 compliant datetime value"""
scalar DateTime

"""Specifies how to filter DateTime fields"""
input DateTimeFilter {
  """
  Filter records with a value that's strictly greater than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gt: DateTime

  """
  Filter records with a value that's less than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lt: DateTime

  """
  Filter records with a value that's greater than or equal to than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gte: DateTime

  """
  Filter records with a value that's less or equal than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lte: DateTime

  """
  Filter records with a value that's within the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  eq: DateTime

  """
  Filter records with a value that's outside the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  neq: DateTime

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

input DemoModelFilter {
  id: ItemIdFilter
  demo: LinkFilter
  OR: [DemoModelFilter]
  AND: [DemoModelFilter]
}

"""Block of type Try our Demo (demo)"""
type DemoRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  demo: TemplateDemoRecord!
  id: ItemId!
  updatedAt: DateTime!
}

input DeployButtonFormModelFilter {
  id: ItemIdFilter
  OR: [DeployButtonFormModelFilter]
  AND: [DeployButtonFormModelFilter]
}

"""Block of type Deploy Button Form (deploy_button_form)"""
type DeployButtonFormRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
}

"""Block of type üìå Topic (differences_on_topic)"""
type DifferencesOnTopicRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  differences: [ProductDifferenceRecord!]!
  id: ItemId!
  topic: String!
  updatedAt: DateTime!
}

input DocCalloutModelFilter {
  id: ItemIdFilter
  calloutType: StringFilter
  title: StringFilter
  OR: [DocCalloutModelFilter]
  AND: [DocCalloutModelFilter]
}

type DocCalloutModelTextField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type Doc Callout (doc_callout)"""
type DocCalloutRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  calloutType: String!
  createdAt: DateTime!
  id: ItemId!
  text: DocCalloutModelTextField!
  title: String
  updatedAt: DateTime!
}

input DocFeedbackModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  email: StringFilter
  positiveReaction: BooleanFilter
  notes: TextFilter
  url: StringFilter
  OR: [DocFeedbackModelFilter]
  AND: [DocFeedbackModelFilter]
}

enum DocFeedbackModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  email_ASC
  email_DESC
  positiveReaction_ASC
  positiveReaction_DESC
  url_ASC
  url_DESC
}

"""Record of type ‚úèÔ∏è Doc Feedback (doc_feedback)"""
type DocFeedbackRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  email: String
  id: ItemId!
  notes(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  positiveReaction: BooleanType!
  updatedAt: DateTime!
  url: String!
}

"""Linking fields"""
enum DocGroupModelFieldsReferencingDocPageModel {
  docGroup_pages
  docGroup_pages__docGroupPage_page
  docGroup_pages__docGroupSection_pages__docGroupPage_page
}

input DocGroupModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  parent: ParentFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  techStarterKit: LinkFilter
  pages: DocGroupModelPagesFieldFilter
  slug: SlugFilter
  name: StringFilter
  OR: [DocGroupModelFilter]
  AND: [DocGroupModelFilter]
}

enum DocGroupModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
}

union DocGroupModelPagesField = DocGroupPageRecord | DocGroupSectionRecord

"""Specify nested blocks fields conditions"""
input DocGroupModelPagesFieldBlocksConditions {
  docGroupPage: DocGroupPageModelFilter
  docGroupSection: DocGroupSectionModelFilter
}

"""Specify nested blocks types presence"""
input DocGroupModelPagesFieldBlocksPresence {
  docGroupPage: BooleanType
  docGroupSection: BooleanType
}

"""Specify how to filter this specific Modular Content field instance"""
input DocGroupModelPagesFieldFilter {
  """
  Filter records containing at least one block matching the specified conditions
  """
  any: DocGroupModelPagesFieldBlocksConditions

  """Filter records containing at least one block of any kind or not"""
  exists: BooleanType

  """Filter records containing at least one block of specified type or not"""
  containsAny: DocGroupModelPagesFieldBlocksPresence
}

input DocGroupPageModelFilter {
  id: ItemIdFilter
  page: LinkFilter
  OR: [DocGroupPageModelFilter]
  AND: [DocGroupPageModelFilter]
}

"""Block of type Doc Group Page (doc_group_page)"""
type DocGroupPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  page: DocPageRecord!
  updatedAt: DateTime!
}

"""Record of type üìö Doc Group (doc_group)"""
type DocGroupRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  children: [DocGroupRecord!]!
  createdAt: DateTime!
  id: ItemId!
  name: String!
  pages: [DocGroupModelPagesField!]!
  parent: DocGroupRecord
  position: IntType
  slug: String!
  techStarterKit: TemplateDemoRecord
  updatedAt: DateTime!
}

input DocGroupSectionModelFilter {
  id: ItemIdFilter
  title: StringFilter
  OR: [DocGroupSectionModelFilter]
  AND: [DocGroupSectionModelFilter]
}

"""Block of type Doc Group Section (doc_group_section)"""
type DocGroupSectionRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  pages: [DocGroupPageRecord!]!
  title: String!
  updatedAt: DateTime!
}

union DocPageModelContentBlocksField = CloneButtonFormRecord | DemoRecord | DeployButtonFormRecord | DocCalloutRecord | ImageRecord | InternalVideoRecord | MultipleDemosBlockRecord | PluginSdkHookGroupRecord | ReactUiLiveExampleRecord | TableRecord | TutorialVideoRecord

type DocPageModelContentField {
  blocks: [DocPageModelContentBlocksField!]!
  links: [String!]!
  value: JsonField!
}

"""Specify nested blocks fields conditions"""
input DocPageModelContentFieldBlocksConditions {
  cloneButtonForm: CloneButtonFormModelFilter
  deployButtonForm: DeployButtonFormModelFilter
  demo: DemoModelFilter
  image: ImageModelFilter
  multipleDemosBlock: MultipleDemosBlockModelFilter
  internalVideo: InternalVideoModelFilter
  pluginSdkHookGroup: PluginSdkHookGroupModelFilter
  docCallout: DocCalloutModelFilter
  reactUiLiveExample: ReactUiLiveExampleModelFilter
  tutorialVideo: TutorialVideoModelFilter
  table: TableModelFilter
}

"""Specify how to filter based on this field's blocks"""
input DocPageModelContentFieldBlocksFilter {
  """
  Filter records containing at least one block matching the specified conditions
  """
  any: DocPageModelContentFieldBlocksConditions

  """Filter records containing at least one block of any kind or not"""
  exists: BooleanType

  """Filter records containing at least one block of specified type or not"""
  containsAny: DocPageModelContentFieldBlocksPresence
}

"""Specify nested blocks types presence"""
input DocPageModelContentFieldBlocksPresence {
  cloneButtonForm: BooleanType
  deployButtonForm: BooleanType
  demo: BooleanType
  image: BooleanType
  multipleDemosBlock: BooleanType
  internalVideo: BooleanType
  pluginSdkHookGroup: BooleanType
  docCallout: BooleanType
  reactUiLiveExample: BooleanType
  tutorialVideo: BooleanType
  table: BooleanType
}

"""Specify how to filter this specific Structured Text field instance"""
input DocPageModelContentFieldFilter {
  """Filter records based on this field value"""
  value: StructuredTextFilter

  """Filter records based on this field blocks"""
  blocks: DocPageModelContentFieldBlocksFilter
}

"""Linking fields"""
enum DocPageModelFieldsReferencingUserGuidesEpisodeModel {
  docPage_content
  docPage_content__tutorialVideo_tutorials
}

input DocPageModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  content: DocPageModelContentFieldFilter
  slug: SlugFilter
  seo: SeoFilter
  title: StringFilter
  OR: [DocPageModelFilter]
  AND: [DocPageModelFilter]
}

enum DocPageModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type üìù Doc page (doc_page)"""
type DocPageRecord implements RecordInterface {
  _allReferencingDocGroups(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenDocGroupAndDocPage

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: DocGroupModelFilter
    orderBy: [DocGroupModelOrderBy] = [position_ASC]
  ): [DocGroupRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingDocGroupsMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenDocGroupAndDocPage

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: DocGroupModelFilter
  ): CollectionMetadata!
  _allReferencingFeaturesIndices(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenFeaturesIndexAndDocPage

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: FeaturesIndexModelFilter
    orderBy: [FeaturesIndexModelOrderBy] = [_updatedAt_DESC]
  ): [FeaturesIndexRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingFeaturesIndicesMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenFeaturesIndexAndDocPage

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: FeaturesIndexModelFilter
  ): CollectionMetadata!
  _allReferencingProductOverviews(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenProductOverviewAndDocPage

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ProductOverviewModelFilter
    orderBy: [ProductOverviewModelOrderBy] = [_updatedAt_DESC]
  ): [ProductOverviewRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingProductOverviewsMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenProductOverviewAndDocPage

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ProductOverviewModelFilter
  ): CollectionMetadata!
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: DocPageModelContentField!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  slug: String!
  title: String!
  updatedAt: DateTime!
}

"""Record of type üìñ Docs Home (docs_page)"""
type DocsPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
}

union EnterpriseAppModelContentBlocksField = ImageRecord | InternalVideoRecord | VideoRecord

type EnterpriseAppModelContentField {
  blocks: [EnterpriseAppModelContentBlocksField!]!
  links: [String!]!
  value: JsonField!
}

input EnterpriseAppModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  gallery: GalleryFilter
  seo: SeoFilter
  logo: FileFilter
  content: StructuredTextFilter
  description: StringFilter
  shortDescription: StringFilter
  slug: SlugFilter
  title: StringFilter
  OR: [EnterpriseAppModelFilter]
  AND: [EnterpriseAppModelFilter]
}

enum EnterpriseAppModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  description_ASC
  description_DESC
  shortDescription_ASC
  shortDescription_DESC
  title_ASC
  title_DESC
}

"""Record of type üè¢ Enterprise app (enterprise_app)"""
type EnterpriseAppRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: EnterpriseAppModelContentField!
  createdAt: DateTime!
  description: String
  gallery: [FileField!]!
  id: ItemId!
  logo: FileField!
  position: IntType
  seo: SeoField
  shortDescription: String
  slug: String!
  title: String!
  updatedAt: DateTime!
}

input ExpertiseAreaModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  name: StringFilter
  slug: SlugFilter
  OR: [ExpertiseAreaModelFilter]
  AND: [ExpertiseAreaModelFilter]
}

enum ExpertiseAreaModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
}

"""Record of type üë®‚Äçüéì Expertise Area (expertise_area)"""
type ExpertiseAreaRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  name: String!
  slug: String!
  updatedAt: DateTime!
}

type FaqModelAnswerField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input FaqModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  answer: StructuredTextFilter
  question: StringFilter
  OR: [FaqModelFilter]
  AND: [FaqModelFilter]
}

enum FaqModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  question_ASC
  question_DESC
}

"""Record of type ‚ùì FAQ (faq)"""
type FaqRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  answer: FaqModelAnswerField!
  createdAt: DateTime!
  id: ItemId!
  position: IntType
  question: String!
  updatedAt: DateTime!
}

enum FaviconType {
  icon
  appleTouchIcon
  msApplication
}

type FeatureHighlightCardModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type üíñ Feature highlight card (feature_highlight_card)"""
type FeatureHighlightCardRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  cardType: String!
  createdAt: DateTime!
  description: FeatureHighlightCardModelDescriptionField
  id: ItemId!
  image: FileField
  links: [FeatureLinkRecord!]!
  title: String!
  updatedAt: DateTime!
}

union FeatureLinkModelContentField = BlogPostRecord | ChangelogEntryRecord | DocPageRecord | EnterpriseAppRecord | FeatureRecord | HostingAppRecord | PluginRecord | TemplateDemoRecord | UserGuidesEpisodeRecord

"""Block of type üîó Feature link (feature_link)"""
type FeatureLinkRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: FeatureLinkModelContentField!
  createdAt: DateTime!
  id: ItemId!
  linkTitle: String!
  updatedAt: DateTime!
}

input FeatureModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  video3: FileFilter
  yoastAnalysis: JsonFilter
  video2: FileFilter
  quote2: LinkFilter
  seoH1: StringFilter
  githubUrl: StringFilter
  seo: SeoFilter
  quote: LinkFilter
  video: FileFilter
  slug: SlugFilter
  OR: [FeatureModelFilter]
  AND: [FeatureModelFilter]
}

enum FeatureModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  seoH1_ASC
  seoH1_DESC
  githubUrl_ASC
  githubUrl_DESC
}

union FeatureModelQuote2Field = PartnerTestimonialRecord | ReviewRecord

union FeatureModelQuoteField = PartnerTestimonialRecord | ReviewRecord

"""Record of type ‚≠ê Ô∏èFeature (feature)"""
type FeatureRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  githubUrl: String
  id: ItemId!
  quote: FeatureModelQuoteField
  quote2: FeatureModelQuote2Field
  seo: SeoField
  seoH1: String
  slug: String!
  updatedAt: DateTime!
  video: VideoFileField
  video2: VideoFileField
  video3: VideoFileField
  yoastAnalysis: JsonField
}

type FeatureRegularCardModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type üóÇÔ∏è Feature regular card (feature_regular_card)"""
type FeatureRegularCardRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  badge: String
  createdAt: DateTime!
  description: FeatureRegularCardModelDescriptionField
  id: ItemId!
  image: ImageFileField
  links: [FeatureLinkRecord!]!
  title: String!
  updatedAt: DateTime!
}

union FeaturesIndexModelContentIntegrityBlocksField = FeatureRegularCardRecord | TestimonialCardRecord

union FeaturesIndexModelCoreFeaturesBlocksField = FeatureRegularCardRecord | TestimonialCardRecord

union FeaturesIndexModelDeveloperExperienceBlocksField = FeatureRegularCardRecord | TestimonialCardRecord

union FeaturesIndexModelEditorExperienceBlocksField = FeatureRegularCardRecord | TestimonialCardRecord

union FeaturesIndexModelExtensibilityBlocksField = FeatureRegularCardRecord | TestimonialCardRecord

"""Linking fields"""
enum FeaturesIndexModelFieldsReferencingDocPageModel {
  featuresIndex_contentIntegrityBlocks
  featuresIndex_contentIntegrityBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_coreFeaturesBlocks
  featuresIndex_coreFeaturesBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_developerExperienceBlocks
  featuresIndex_developerExperienceBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_editorExperienceBlocks
  featuresIndex_editorExperienceBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_extensibilityBlocks
  featuresIndex_extensibilityBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_governanceAndComplianceBlocks
  featuresIndex_governanceAndComplianceBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_highlightCards
  featuresIndex_highlightCards__featureHighlightCard_links__featureLink_content
  featuresIndex_imageVideoManagementBlocks
  featuresIndex_imageVideoManagementBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_localizationBlocks
  featuresIndex_localizationBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_securityAndInfrastructureBlocks
  featuresIndex_securityAndInfrastructureBlocks__featureRegularCard_links__featureLink_content
}

"""Linking fields"""
enum FeaturesIndexModelFieldsReferencingUserGuidesEpisodeModel {
  featuresIndex_contentIntegrityBlocks
  featuresIndex_contentIntegrityBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_coreFeaturesBlocks
  featuresIndex_coreFeaturesBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_developerExperienceBlocks
  featuresIndex_developerExperienceBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_editorExperienceBlocks
  featuresIndex_editorExperienceBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_extensibilityBlocks
  featuresIndex_extensibilityBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_governanceAndComplianceBlocks
  featuresIndex_governanceAndComplianceBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_highlightCards
  featuresIndex_highlightCards__featureHighlightCard_links__featureLink_content
  featuresIndex_imageVideoManagementBlocks
  featuresIndex_imageVideoManagementBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_localizationBlocks
  featuresIndex_localizationBlocks__featureRegularCard_links__featureLink_content
  featuresIndex_securityAndInfrastructureBlocks
  featuresIndex_securityAndInfrastructureBlocks__featureRegularCard_links__featureLink_content
}

input FeaturesIndexModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  subtitle: StructuredTextFilter
  title: StructuredTextFilter
  readability: JsonFilter
  seo: SeoFilter
  heroImageLeft: FileFilter
  heroImageRight: FileFilter
  OR: [FeaturesIndexModelFilter]
  AND: [FeaturesIndexModelFilter]
}

union FeaturesIndexModelGovernanceAndComplianceBlocksField = FeatureRegularCardRecord | TestimonialCardRecord

union FeaturesIndexModelImageVideoManagementBlocksField = FeatureRegularCardRecord | TestimonialCardRecord

union FeaturesIndexModelLocalizationBlocksField = FeatureRegularCardRecord | TestimonialCardRecord

enum FeaturesIndexModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
}

union FeaturesIndexModelSecurityAndInfrastructureBlocksField = FeatureRegularCardRecord | TestimonialCardRecord

type FeaturesIndexModelSubtitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type FeaturesIndexModelTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Record of type üóÑÔ∏è Features index (features_index)"""
type FeaturesIndexRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  contentIntegrityBlocks: [FeaturesIndexModelContentIntegrityBlocksField!]!
  coreFeaturesBlocks: [FeaturesIndexModelCoreFeaturesBlocksField!]!
  createdAt: DateTime!
  developerExperienceBlocks: [FeaturesIndexModelDeveloperExperienceBlocksField!]!
  editorExperienceBlocks: [FeaturesIndexModelEditorExperienceBlocksField!]!
  extensibilityBlocks: [FeaturesIndexModelExtensibilityBlocksField!]!
  governanceAndComplianceBlocks: [FeaturesIndexModelGovernanceAndComplianceBlocksField!]!
  heroImageLeft: ImageFileField!
  heroImageRight: ImageFileField!
  highlightCards: [FeatureHighlightCardRecord!]!
  id: ItemId!
  imageVideoManagementBlocks: [FeaturesIndexModelImageVideoManagementBlocksField!]!
  localizationBlocks: [FeaturesIndexModelLocalizationBlocksField!]!
  readability: JsonField
  securityAndInfrastructureBlocks: [FeaturesIndexModelSecurityAndInfrastructureBlocksField!]!
  seo: SeoField
  subtitle: FeaturesIndexModelSubtitleField
  title: FeaturesIndexModelTitleField!
  updatedAt: DateTime!
}

type FileField implements FileFieldInterface {
  _createdAt: DateTime!

  """
  The DatoCMS URL where you can edit this entity. To use this field, you need to set a X-Base-Editing-Url header in the request
  """
  _editingUrl: String
  _updatedAt: DateTime!
  alt(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  author: String
  basename: String!
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """Maximum image dimension (defaults to 24px)"""
    size: Int! = 24

    """Image quality (defaults to 70%)"""
    quality: Int! = 70

    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String
  blurhash: String
  colors: [ColorField!]!
  copyright: String
  customData(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomData!
  exifInfo: CustomData!
  filename: String!
  focalPoint(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): focalPoint
  format: String!
  height: IntType
  id: UploadId!
  md5: String!
  mimeType: String!
  notes: String
  responsiveImage(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams

    """Specify a custom `sizes` attribute for the image"""
    sizes: String

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ResponsiveImage
  size: IntType!
  smartTags: [String!]!
  tags: [String!]!
  thumbhash: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  url(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String!
  video: UploadVideoField
  width: IntType
}

interface FileFieldInterface {
  _createdAt: DateTime!

  """
  The DatoCMS URL where you can edit this entity. To use this field, you need to set a X-Base-Editing-Url header in the request
  """
  _editingUrl: String
  _updatedAt: DateTime!
  alt(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  author: String
  basename: String!
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """Maximum image dimension (defaults to 24px)"""
    size: Int! = 24

    """Image quality (defaults to 70%)"""
    quality: Int! = 70

    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String
  blurhash: String
  colors: [ColorField!]!
  copyright: String
  customData(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomData!
  exifInfo: CustomData!
  filename: String!
  focalPoint(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): focalPoint
  format: String!
  height: IntType
  id: UploadId!
  md5: String!
  mimeType: String!
  notes: String
  responsiveImage(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams

    """Specify a custom `sizes` attribute for the image"""
    sizes: String

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ResponsiveImage
  size: IntType!
  smartTags: [String!]!
  tags: [String!]!
  thumbhash: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  url(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String!
  video: UploadVideoField
  width: IntType
}

"""Specifies how to filter Single-file/image fields"""
input FileFilter {
  """
  Search for records with an exact match. The specified value must be an Upload ID
  """
  eq: UploadId

  """
  Exclude records with an exact match. The specified value must be an Upload ID
  """
  neq: UploadId

  """Filter records that have one of the specified uploads"""
  in: [UploadId]

  """Filter records that do not have one of the specified uploads"""
  notIn: [UploadId]

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""
Represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar FloatType

"""Specifies how to filter Multiple files/images field"""
input GalleryFilter {
  """
  Search for records with an exact match. The specified values must be Upload IDs
  """
  eq: [UploadId]

  """
  Filter records that have all of the specified uploads. The specified values must be Upload IDs
  """
  allIn: [UploadId]

  """
  Filter records that have one of the specified uploads. The specified values must be Upload IDs
  """
  anyIn: [UploadId]

  """
  Filter records that do not have any of the specified uploads. The specified values must be Upload IDs
  """
  notIn: [UploadId]

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

type GlobalSeoField {
  facebookPageUrl: String
  fallbackSeo: SeoField
  siteName: String
  titleSuffix: String
  twitterAccount: String
}

type GlossaryEntryModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input GlossaryEntryModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  description: StructuredTextFilter
  title: StringFilter
  url: StringFilter
  OR: [GlossaryEntryModelFilter]
  AND: [GlossaryEntryModelFilter]
}

enum GlossaryEntryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
  url_ASC
  url_DESC
}

"""Record of type üìö Glossary Entry (glossary_entry)"""
type GlossaryEntryRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  description: GlossaryEntryModelDescriptionField!
  id: ItemId!
  title: String!
  updatedAt: DateTime!
  url: String
}

"""Record of type üìö Glossary Home (glossary_page)"""
type GlossaryPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
}

input GraphqlDemoBlockModelFilter {
  id: ItemIdFilter
  OR: [GraphqlDemoBlockModelFilter]
  AND: [GraphqlDemoBlockModelFilter]
}

"""Block of type GraphQL Demo (graphql_demo_block)"""
type GraphqlDemoBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
}

"""Record of type üè† Home page (home_page)"""
type HomePageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
  yoastAnalysis: JsonField
}

union HostingAppModelContentBlocksField = ImageRecord | InternalVideoRecord | VideoRecord

type HostingAppModelContentField {
  blocks: [HostingAppModelContentBlocksField!]!
  links: [String!]!
  value: JsonField!
}

input HostingAppModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  content: StructuredTextFilter
  logo: FileFilter
  title: StringFilter
  seo: SeoFilter
  gallery: GalleryFilter
  description: StringFilter
  shortDescription: StringFilter
  slug: SlugFilter
  OR: [HostingAppModelFilter]
  AND: [HostingAppModelFilter]
}

enum HostingAppModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  shortDescription_ASC
  shortDescription_DESC
}

"""Record of type üåê Hosting/CI app (hosting_app)"""
type HostingAppRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: HostingAppModelContentField!
  createdAt: DateTime!
  description: String
  gallery: [FileField!]!
  id: ItemId!
  logo: FileField!
  position: IntType
  seo: SeoField
  shortDescription: String
  slug: String!
  title: String!
  updatedAt: DateTime!
}

"""Record of type üì∞ How to DatoCMS Index (how_to_datocms_index)"""
type HowToDatocmsIndexRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
}

type ImageFileField implements FileFieldInterface {
  _createdAt: DateTime!

  """
  The DatoCMS URL where you can edit this entity. To use this field, you need to set a X-Base-Editing-Url header in the request
  """
  _editingUrl: String
  _updatedAt: DateTime!
  alt(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  author: String
  basename: String!
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """Maximum image dimension (defaults to 24px)"""
    size: Int! = 24

    """Image quality (defaults to 70%)"""
    quality: Int! = 70

    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String
  blurhash: String
  colors: [ColorField!]!
  copyright: String
  customData(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomData!
  exifInfo: CustomData!
  filename: String!
  focalPoint(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): focalPoint!
  format: String!
  height: IntType!
  id: UploadId!
  md5: String!
  mimeType: String!
  notes: String
  responsiveImage(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams

    """Specify a custom `sizes` attribute for the image"""
    sizes: String

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ResponsiveImage!
  size: IntType!
  smartTags: [String!]!
  tags: [String!]!
  thumbhash: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  url(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String!
  video: UploadVideoField
  width: IntType!
}

input ImageModelFilter {
  id: ItemIdFilter
  frameless: BooleanFilter
  image: FileFilter
  OR: [ImageModelFilter]
  AND: [ImageModelFilter]
}

"""Block of type üåÖ Image (image)"""
type ImageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  frameless: BooleanType!
  id: ItemId!
  image: FileField!
  updatedAt: DateTime!
}

type ImageTitleFileField implements FileFieldInterface {
  _createdAt: DateTime!

  """
  The DatoCMS URL where you can edit this entity. To use this field, you need to set a X-Base-Editing-Url header in the request
  """
  _editingUrl: String
  _updatedAt: DateTime!
  alt(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  author: String
  basename: String!
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """Maximum image dimension (defaults to 24px)"""
    size: Int! = 24

    """Image quality (defaults to 70%)"""
    quality: Int! = 70

    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String
  blurhash: String
  colors: [ColorField!]!
  copyright: String
  customData(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomData!
  exifInfo: CustomData!
  filename: String!
  focalPoint(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): focalPoint!
  format: String!
  height: IntType!
  id: UploadId!
  md5: String!
  mimeType: String!
  notes: String
  responsiveImage(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams

    """Specify a custom `sizes` attribute for the image"""
    sizes: String

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ResponsiveImage!
  size: IntType!
  smartTags: [String!]!
  tags: [String!]!
  thumbhash: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String!
  url(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String!
  video: UploadVideoField
  width: IntType!
}

type ImageTransformationsBlockModelContentField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input ImageTransformationsBlockModelFilter {
  id: ItemIdFilter
  OR: [ImageTransformationsBlockModelFilter]
  AND: [ImageTransformationsBlockModelFilter]
}

type ImageTransformationsBlockModelTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""
Block of type Image transformations block (image_transformations_block)
"""
type ImageTransformationsBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: ImageTransformationsBlockModelContentField
  createdAt: DateTime!
  id: ItemId!
  title: ImageTransformationsBlockModelTitleField!
  updatedAt: DateTime!
}

input ImgixParams {
  """
  Aspect Ratio
  
  Specifies an aspect ratio to maintain when resizing and cropping the image
  
  Depends on: `fit=crop`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/size/ar)
  """
  ar: String

  """
  Automatic
  
  Applies automatic enhancements to images.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/auto)
  """
  auto: [ImgixParamsAuto!]

  """
  Background Removal Fallback
  
  Overrides default fallback behavior for bg-remove failures.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/background/bg-remove)
  """
  bgRemoveFallback: BooleanType

  """
  Background Removal
  
  Removes background from image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/background/bg-remove)
  """
  bgRemove: BooleanType

  """
  Background Removal Fallback
  
  Overrides default fallback behavior for bg-replace failures.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/background/bg-replace)
  """
  bgReplaceFallback: BooleanType

  """
  Background Replacement Negative Prompt
  
  Provides a negative text suggestion for background replacement.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/background/bg-replace-neg-prompt)
  """
  bgReplaceNegPrompt: String

  """
  Background Replacement
  
  Replaces background from image using a string based prompt.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/background/bg-replace)
  """
  bgReplace: String

  """
  Background Color
  
  Colors the background of padded and partially-transparent images.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/bg)
  """
  bg: String

  """
  Blend Align
  
  Changes the blend alignment relative to the parent image.
  
  Depends on: `blend`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend-align)
  """
  blendAlign: [ImgixParamsBlendAlign!]

  """
  Blend Alpha
  
  Changes the alpha of the blend image.
  
  Depends on: `blend`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend-alpha)
  """
  blendAlpha: IntType

  """
  Blend Color
  
  Specifies a color to use when applying the blend.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend-color)
  """
  blendColor: String

  """
  Blend Crop
  
  Specifies the type of crop for blend images.
  
  Depends on: `blend`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend-crop)
  """
  blendCrop: [ImgixParamsBlendCrop!]

  """
  Blend Fit
  
  Specifies the fit mode for blend images.
  
  Depends on: `blend`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend-fit)
  """
  blendFit: ImgixParamsBlendFit

  """
  Blend Height
  
  Adjusts the height of the blend image.
  
  Depends on: `blend`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend-h)
  """
  blendH: FloatType

  """
  Blend Mode
  
  Sets the blend mode for a blend image.
  
  Depends on: `blend`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend-mode)
  """
  blendMode: ImgixParamsBlendMode

  """
  Blend Padding
  
  Applies padding to the blend image.
  
  Depends on: `blend`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend-pad)
  """
  blendPad: IntType

  """
  Blend Size
  
  Adjusts the size of the blend image.
  
  Depends on: `blend`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend-size)
  """
  blendSize: ImgixParamsBlendSize

  """
  Blend Width
  
  Adjusts the width of the blend image.
  
  Depends on: `blend`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend-w)
  """
  blendW: FloatType

  """
  Blend X Position
  
  Adjusts the x-offset of the blend image relative to its parent.
  
  Depends on: `blend`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend-x)
  """
  blendX: IntType

  """
  Blend Y Position
  
  Adjusts the y-offset of the blend image relative to its parent.
  
  Depends on: `blend`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend-y)
  """
  blendY: IntType

  """
  Blend
  
  Specifies the location of the blend image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/blending/blend)
  """
  blend: String

  """
  Gaussian Blur
  
  Applies a gaussian blur to an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/stylize/blur)
  """
  blur: IntType

  """
  Border Bottom
  
  Sets bottom border of an image.
  
  Depends on: `border`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/border-and-padding/border-bottom)
  """
  borderBottom: IntType

  """
  Border Left
  
  Sets left border of an image.
  
  Depends on: `border`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/border-and-padding/border-left)
  """
  borderLeft: IntType

  """
  Inner Border Radius
  
  Sets the inner radius of the image's border in pixels.
  
  Depends on: `border`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/border-and-padding/border-radius-inner)
  """
  borderRadiusInner: String

  """
  Outer Border Radius
  
  Sets the outer radius of the image's border in pixels.
  
  Depends on: `border`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/border-and-padding/border-radius)
  """
  borderRadius: String

  """
  Border Right
  
  Sets right border of an image.
  
  Depends on: `border`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/border-and-padding/border-right)
  """
  borderRight: IntType

  """
  Border Top
  
  Sets top border of an image.
  
  Depends on: `border`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/border-and-padding/border-top)
  """
  borderTop: IntType

  """
  Border Size & Color
  
  Applies a border to an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/border-and-padding/border)
  """
  border: String

  """
  Brightness
  
  Adjusts the brightness of the source image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/bri)
  """
  bri: IntType

  """
  Client Hints
  
  Sets one or more Client-Hints headers
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/format/ch)
  """
  ch: [ImgixParamsCh!]

  """
  Chroma Subsampling
  
  Specifies the output chroma subsampling rate.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/format/chromasub)
  """
  chromasub: IntType

  """
  Color Quantization
  
  Limits the number of unique colors in an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/format/colorquant)
  """
  colorquant: IntType

  """
  Palette Color Count
  
  Specifies how many colors to include in a palette-extraction response.
  
  Depends on: `palette`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/color-palette/colors)
  """
  colors: IntType

  """
  Contrast
  
  Adjusts the contrast of the source image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/con)
  """
  con: IntType

  """
  Mask Corner Radius
  
  Specifies the radius value for a rounded corner mask.
  
  Depends on: `mask=corners`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/mask/corner-radius)
  """
  cornerRadius: String

  """
  Crop Mode
  
  Specifies how to crop an image.
  
  Depends on: `fit=crop`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/size/crop)
  """
  crop: [ImgixParamsCrop!]

  """
  Color Space
  
  Specifies the color space of the output image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/format/cs)
  """
  cs: ImgixParamsCs

  """
  Download
  
  Forces a URL to use send-file in its response.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/format/dl)
  """
  dl: String

  """
  Dots Per Inch
  
  Sets the DPI value in the EXIF header.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/format/dpi)
  """
  dpi: IntType

  """
  Device Pixel Ratio
  
  Adjusts the device-pixel ratio of the output image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/dpr)
  """
  dpr: FloatType

  """
  Duotone Alpha
  
  Changes the alpha of the duotone effect atop the source image.
  
  Depends on: `duotone`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/stylize/duotone-alpha)
  """
  duotoneAlpha: IntType

  """
  Duotone
  
  Applies a duotone effect to the source image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/stylize/duotone)
  """
  duotone: String

  """
  Exposure
  
  Adjusts the exposure of the output image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/exp)
  """
  exp: IntType

  """
  Url Expiration Timestamp
  
  A Unix timestamp specifying a UTC time. Requests made to this URL after that time will output a 404 status code.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/expires)
  """
  expires: IntType

  """
  Face Index
  
  Selects a face to crop to.
  
  Depends on: `fit=facearea`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/face-detection/faceindex)
  """
  faceindex: IntType

  """
  Face Padding
  
  Adjusts padding around a selected face.
  
  Depends on: `fit=facearea`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/face-detection/facepad)
  """
  facepad: FloatType

  """
  Json Face Data
  
  Specifies that face data should be included in output when combined with `fm=json`.
  
  Depends on: `fm=json`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/face-detection/faces)
  """
  faces: IntType

  """
  Fill Color
  
  Sets the fill color for images with additional space created by the fit setting
  
  Depends on: `fill=solid`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-color)
  """
  fillColor: String

  """
  Fill Generative Fallback
  
  Sets the fallback behavior for generative fill.
  
  Depends on: `fit=fill`, `fill=gen`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gen-fallback)
  """
  fillGenFallback: BooleanType

  """
  Fill Generative Negative Prompt
  
  Provides a negative text suggestion to the generative fill parameter. Used to reduce the probability of a subject, detail, or object appearing in generative output.
  
  Depends on: `fit=fill`, `fill=gen`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gen-neg-prompt)
  """
  fillGenNegPrompt: String

  """
  Fill Generative Position
  
  Sets the position of the Origin Image in relation to the generative fill.
  
  Depends on: `fit=fill`, `fill=gen`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gen-pos)
  """
  fillGenPos: [ImgixParamsFillGenPos!]

  """
  Fill Generative Prompt
  
  Provides a text suggestion to the generative fill parameter.
  
  Depends on: `fit=fill`, `fill=gen`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gen-prompt)
  """
  fillGenPrompt: String

  """
  Fill Generative Seed
  
  Sets the generative seed value. Used to generate similar outputs from different prompts.
  
  Depends on: `fit=fill`, `fill=gen`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gen-seed)
  """
  fillGenSeed: IntType

  """
  Fill Gradient Color Space
  
  Defines the color space as linear, sRGB, Oklab, HSL, or LCH for gradient color interpolation
  
  Depends on: `fit=fill`, `fill=gradient`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gradient-cs)
  """
  fillGradientCs: ImgixParamsFillGradientCs

  """
  Fill Gradient Linear Direction
  
  The fill-gradient-linear-direction specifies the gradient's direction, flowing towards the bottom, top, right, or left
  
  Depends on: `fit=fill`, `fill=gen`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gradient-linear-direction)
  """
  fillGradientLinearDirection: [ImgixParamsFillGradientLinearDirection!]

  """
  Fill Gradient Linear
  
  Blends a gradient between two colors, {color1} and {color2}, along a straight path
  
  Depends on: `fit=fill`, `fill=gradient`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gradient-linear)
  """
  fillGradientLinear: String

  """
  Fill Gradient Radial Radius
  
  Parameter defines the radial gradient's radius as pixels or a percentage (0.0-1.0) of the image's smallest dimension
  
  Depends on: `fit=fill`, `fill=gradient`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gradient-radial-radius)
  """
  fillGradientRadialRadius: String

  """
  Fill Gradient Radial X
  
  Specifies the location of the radial gradient's center along the x-axis, using either a pixel value or a floating point percentage (ranging from 0.0 to 1.0) of the image's width
  
  Depends on: `fit=fill`, `fill=gradient`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gradient-radial-x)
  """
  fillGradientRadialX: FloatType

  """
  Fill Gradient Radial Y
  
  Parameter sets the radial gradient's center on the y-axis, using pixels or a 0.0 to 1.0 percentage of the image's height
  
  Depends on: `fit=fill`, `fill=gradient`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gradient-radial-y)
  """
  fillGradientRadialY: FloatType

  """
  Fill Gradient Radial
  
  The fill-gradient-radial parameter creates a circular gradient transitioning from a central color (Color1) to an outer color (Color2)
  
  Depends on: `fit=fill`, `fill=gradient`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gradient-radial)
  """
  fillGradientRadial: String

  """
  Fill Gradient Type
  
  Specifies if a gradient is radial (circular) or linear (straight)
  
  Depends on: `fit=fill`, `fill=gradient`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill-gradient-type)
  """
  fillGradientType: ImgixParamsFillGradientType

  """
  Fill Mode
  
  Determines how to fill in additional space created by the fit setting
  
  Depends on: `fit`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/fill)
  """
  fill: ImgixParamsFill

  """
  Resize Fit Mode
  
  Specifies how to map the source image to the output image dimensions.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/size/fit)
  """
  fit: ImgixParamsFit

  """
  Flip Axis
  
  Flips an image on a specified axis.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/rotation/flip)
  """
  flip: ImgixParamsFlip

  """
  Output Format
  
  Changes the format of the output image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/format/fm)
  """
  fm: ImgixParamsFm

  """
  Focal Point Debug
  
  Displays crosshairs identifying the location of the set focal point
  
  Depends on: `fit=crop`, `crop=focalpoint`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/focalpoint-crop/fp-debug)
  """
  fpDebug: BooleanType

  """
  Focal Point X Position
  
  Sets the relative horizontal value for the focal point of an image
  
  Depends on: `fit=crop`, `crop=focalpoint`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/focalpoint-crop/fp-x)
  """
  fpX: FloatType

  """
  Focal Point Y Position
  
  Sets the relative vertical value for the focal point of an image
  
  Depends on: `fit=crop`, `crop=focalpoint`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/focalpoint-crop/fp-y)
  """
  fpY: FloatType

  """
  Focal Point Zoom
  
  Sets the relative zoom value for the focal point of an image
  
  Depends on: `fit=crop`, `crop=focalpoint`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/focalpoint-crop/fp-z)
  """
  fpZ: FloatType

  """
  Frames Per Second
  
  Specifies the framerate of the generated image.
  """
  fps: IntType

  """
  Frame Selection
  
  Specifies the frame of an animated image to use.
  """
  frame: String

  """
  Gamma
  
  Adjusts the gamma of the source image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/gam)
  """
  gam: IntType

  """
  Animated Gif Quality
  
  Specifies the quality of the animated gif. The higher the value, the better more compression is applied.
  
  Depends on: `fm=gif`
  """
  gifQ: IntType

  """
  Grid Colors
  
  Sets grid colors for the transparency checkerboard grid.
  
  Depends on: `transparency`
  """
  gridColors: String

  """
  Grid Size
  
  Sets grid size for the transparency checkerboard grid.
  
  Depends on: `transparency`
  """
  gridSize: IntType

  """
  Image Height
  
  Adjusts the height of the output image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/size/h)
  """
  h: FloatType

  """
  Highlight
  
  Adjusts the highlights of the source image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/high)
  """
  high: IntType

  """
  Halftone
  
  Applies a half-tone effect to the source image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/stylize/htn)
  """
  htn: IntType

  """
  Hue Shift
  
  Adjusts the hue of the source image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/hue)
  """
  hue: IntType

  """
  Frame Interval
  
  Displays every Nth frame starting with the first frame.
  """
  interval: IntType

  """
  Invert
  
  Inverts the colors on the source image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/invert)
  """
  invert: BooleanType

  """
  Iptc Passthrough
  
  Determine if IPTC data should be passed for JPEG images.
  """
  iptc: ImgixParamsIptc

  """
  Jpg Progressive
  
  Specifies whether or not a jpg/jpeg uses progressive (true) or baseline (false)
  """
  jpgProgressive: BooleanType

  """
  Animation Loop Count
  
  Specifies the number of times an animated image should repeat. A value of 0 means infinite looping.
  """
  loop: IntType

  """
  Lossless Compression
  
  Specifies that the output image should be a lossless variant.
  
  Depends on: `fm=webp`, `fm=jxr`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/format/lossless)
  """
  lossless: BooleanType

  """
  Watermark Alignment Mode
  
  Changes the watermark alignment relative to the parent image.
  
  Depends on: `mark`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark-align)
  """
  markAlign: [ImgixParamsMarkAlign!]

  """
  Watermark Alpha
  
  Changes the alpha of the watermark image.
  
  Depends on: `mark`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark-alpha)
  """
  markAlpha: IntType

  """
  Watermark Base Url
  
  Changes base URL of the watermark image.
  
  Depends on: `mark`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark-base)
  """
  markBase: String

  """
  Watermark Fit Mode
  
  Specifies the fit mode for watermark images.
  
  Depends on: `mark`, `markw`, `markh`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark-fit)
  """
  markFit: ImgixParamsMarkFit

  """
  Watermark Height
  
  Adjusts the height of the watermark image.
  
  Depends on: `mark`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark-h)
  """
  markH: FloatType

  """
  Watermark Padding
  
  Applies padding to the watermark image.
  
  Depends on: `mark`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark-pad)
  """
  markPad: IntType

  """
  Watermark Rotation
  
  Rotates a watermark or tiled watermarks by a specified number of degrees.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark-rot)
  """
  markRot: FloatType

  """
  Watermark Scale
  
  Adjusts the scale of the watermark image.
  
  Depends on: `mark`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark-scale)
  """
  markScale: IntType

  """
  Watermark Tile
  
  Adds tiled watermark.
  
  Depends on: `mark`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark-tile)
  """
  markTile: ImgixParamsMarkTile

  """
  Watermark Width
  
  Adjusts the width of the watermark image.
  
  Depends on: `mark`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark-w)
  """
  markW: FloatType

  """
  Watermark X Position
  
  Adjusts the x-offset of the watermark image relative to its parent.
  
  Depends on: `mark`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark-x)
  """
  markX: IntType

  """
  Watermark Y Position
  
  Adjusts the y-offset of the watermark image relative to its parent.
  
  Depends on: `mark`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark-y)
  """
  markY: IntType

  """
  Watermark Image Url
  
  Specifies the location of the watermark image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/watermark/mark)
  """
  mark: String

  """
  Mask Background Color
  
  Colors the background of the transparent mask area of images
  
  Depends on: `mask`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/mask/mask-bg)
  """
  maskBg: String

  """
  Mask Type
  
  Defines the type of mask and specifies the URL if that type is selected.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/mask)
  """
  mask: String

  """
  Maximum Height
  
  Specifies the maximum height of the output image in pixels.
  
  Depends on: `fit=crop`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/size/max-height)
  """
  maxH: IntType

  """
  Maximum Width
  
  Specifies the maximum width of the output image in pixels.
  
  Depends on: `fit=crop`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/size/max-width)
  """
  maxW: IntType

  """
  Minimum Height
  
  Specifies the minimum height of the output image in pixels.
  
  Depends on: `fit=crop`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/size/min-height)
  """
  minH: IntType

  """
  Minimum Width
  
  Specifies the minimum width of the output image in pixels.
  
  Depends on: `fit=crop`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/size/min-width)
  """
  minW: IntType

  """
  Monochrome
  
  Applies a monochrome effect to the source image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/stylize/monochrome)
  """
  monochrome: String

  """
  Noise Reduction Bound
  
  Reduces the noise in an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/noise-reduction/nr)
  """
  nr: IntType

  """
  Noise Reduction Sharpen
  
  Provides a threshold by which to sharpen an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/noise-reduction/nrs)
  """
  nrs: IntType

  """
  Orientation
  
  Changes the image orientation.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/rotation/orient)
  """
  orient: IntType

  """
  Padding Bottom
  
  Sets bottom padding of an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/border-and-padding/pad-bottom)
  """
  padBottom: IntType

  """
  Padding Left
  
  Sets left padding of an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/border-and-padding/pad-left)
  """
  padLeft: IntType

  """
  Padding Right
  
  Sets right padding of an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/border-and-padding/pad-right)
  """
  padRight: IntType

  """
  Padding Top
  
  Sets top padding of an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/border-and-padding/pad-top)
  """
  padTop: IntType

  """
  Padding
  
  Pads an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/border-and-padding/pad)
  """
  pad: IntType

  """
  Pdf Page Number
  
  Selects a page from a PDF for display.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/pdf/page)
  """
  page: IntType

  """
  Color Palette Extraction
  
  Specifies an output format for palette-extraction.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/color-palette/palette)
  """
  palette: ImgixParamsPalette

  """
  Pdf Annotation
  
  Enables or disables PDF annotation.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/pdf/pdf-annotation)
  """
  pdfAnnotation: BooleanType

  """
  Css Prefix
  
  Specifies a CSS prefix for all classes in palette-extraction.
  
  Depends on: `palette=css`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/color-palette/prefix)
  """
  prefix: String

  """
  Pixellate
  
  Applies a pixelation effect to an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/stylize/px)
  """
  px: IntType

  """
  Output Quality
  
  Adjusts the quality of an output image.
  
  Depends on: `fm=jpg`, `fm=pjpg`, `fm=webp`, `fm=jxr`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/format/q)
  """
  q: IntType

  """
  Source Rectangle Region
  
  Crops an image to a specified rectangle.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/size/rect)
  """
  rect: String

  """
  Reverse
  
  Reverses the frame order on the source animation.
  """
  reverse: BooleanType

  """
  Rotation
  
  Rotates an image by a specified number of degrees.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/rotation/rot)
  """
  rot: FloatType

  """
  Saturation
  
  Adjusts the saturation of an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/sat)
  """
  sat: IntType

  """
  Sepia Tone
  
  Applies a sepia effect to an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/stylize/sepia)
  """
  sepia: IntType

  """
  Shadow
  
  Adjusts the highlights of the source image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/shad)
  """
  shad: FloatType

  """
  Sharpen
  
  Adjusts the sharpness of the source image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/sharp)
  """
  sharp: FloatType

  """
  Frame Skip
  
  Skips every Nth frame starting with the first frame.
  """
  skip: IntType

  """
  Sanitize Svg
  
  Specifies whether to sanitize an SVG.
  """
  svgSanitize: BooleanType

  """
  Transparency
  
  Adds checkerboard behind images which support transparency.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/fill/transparency)
  """
  transparency: ImgixParamsTransparency

  """
  Trim Color
  
  Specifies a trim color on a trim operation.
  
  Depends on: `trim=color`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/trim/trim-color)
  """
  trimColor: String

  """
  Trim Mean Difference
  
  Specifies the mean difference on a trim operation.
  
  Depends on: `trim=auto`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/trim/trim-md)
  """
  trimMd: FloatType

  """
  Trim Padding
  
  Pads the area of the source image before trimming.
  
  Depends on: `trim`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/trim/trim-pad)
  """
  trimPad: IntType

  """
  Trim Standard Deviation
  
  Specifies the standard deviation on a trim operation.
  
  Depends on: `trim=auto`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/trim/trim-sd)
  """
  trimSd: FloatType

  """
  Trim Tolerance
  
  Specifies the tolerance on a trim operation.
  
  Depends on: `trim=color`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/trim/trim-tol)
  """
  trimTol: FloatType

  """
  Trim Image
  
  Trims the source image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/trim/trim)
  """
  trim: ImgixParamsTrim

  """
  Text Align
  
  Sets the vertical and horizontal alignment of rendered text relative to the base image.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-align)
  """
  txtAlign: [ImgixParamsTxtAlign!]

  """
  Text Clipping Mode
  
  Sets the clipping properties of rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-clip)
  """
  txtClip: [ImgixParamsTxtClip!]

  """
  Text Color
  
  Specifies the color of rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-color)
  """
  txtColor: String

  """
  Text Fit Mode
  
  Specifies the fit approach for rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-fit)
  """
  txtFit: ImgixParamsTxtFit

  """
  Text Font
  
  Selects a font for rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-font)
  """
  txtFont: String

  """
  Text Leading
  
  Sets the leading (line spacing) for rendered text. Only works on the multi-line text endpoint.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/typesetting/txt-lead)
  """
  txtLead: IntType

  """
  Text Outline Color
  
  Specifies a text outline color.
  
  Depends on: `txt`, `txtline`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-line-color)
  """
  txtLineColor: String

  """
  Text Outline
  
  Outlines the rendered text with a specified color.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-line)
  """
  txtLine: IntType

  """
  Text Padding
  
  Specifies the padding (in device-independent pixels) between a textbox and the edges of the base image.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-pad)
  """
  txtPad: IntType

  """
  Text Shadow
  
  Applies a shadow to rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-shad)
  """
  txtShad: FloatType

  """
  Text Font Size
  
  Sets the font size of rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-size)
  """
  txtSize: IntType

  """
  Text Tracking
  
  Sets the tracking (letter spacing) for rendered text. Only works on the multi-line text endpoint.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/typesetting/txt-track)
  """
  txtTrack: IntType

  """
  Text Width
  
  Sets the width of rendered text.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-width)
  """
  txtWidth: IntType

  """
  Text X Position
  
  Sets the horizontal (x) position of the text in pixels relative to the left edge of the base image.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-x)
  """
  txtX: IntType

  """
  Text Y Position
  
  Sets the vertical (y) position of the text in pixels relative to the top edge of the base image.
  
  Depends on: `txt`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt-y)
  """
  txtY: IntType

  """
  Text String
  
  Sets the text string to render.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/text/txt)
  """
  txt: String

  """
  Super Resolution Fallback
  
  Overrides default fallback behavior for super resolution failures
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/super-resolution/upscale-fallback)
  """
  upscaleFallback: BooleanType

  """
  Super Resolution
  
  Uses generative AI fill to upscale low resolution images.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/rendering/super-resolution/upscale)
  """
  upscale: BooleanType

  """
  Unsharp Mask
  
  Sharpens the source image using an unsharp mask.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/usm)
  """
  usm: IntType

  """
  Unsharp Mask Radius
  
  Specifies the radius for an unsharp mask operation.
  
  Depends on: `usm`
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/usmrad)
  """
  usmrad: FloatType

  """
  Vibrance
  
  Adjusts the vibrance of an image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/adjustment/vib)
  """
  vib: IntType

  """
  Image Width
  
  Adjusts the width of the output image.
  
  [Open Imgix reference ¬ª](https://docs.imgix.com/apis/url/size/w)
  """
  w: FloatType

  """
  Bypasses any [DatoCMS Automatic Image Optimization](https://www.datocms.com/docs/cdn-settings/advanced-asset-settings) that might be set up for the project.
  
  Exercise caution when using this parameter, as it could significantly increase your bandwidth costs.
  """
  skipDefaultOptimizations: BooleanType
}

enum ImgixParamsAuto {
  enhance
  format
  redeye
  compress
}

enum ImgixParamsBlendAlign {
  top
  bottom
  middle
  left
  right
  center
}

enum ImgixParamsBlendCrop {
  top
  bottom
  left
  right
  faces
}

enum ImgixParamsBlendFit {
  clamp
  clip
  crop
  scale
  max
}

enum ImgixParamsBlendMode {
  color
  burn
  dodge
  darken
  difference
  exclusion
  hardlight
  hue
  lighten
  luminosity
  multiply
  overlay
  saturation
  screen
  softlight
  normal
}

enum ImgixParamsBlendSize {
  inherit
}

enum ImgixParamsCh {
  width
  dpr
  saveData
}

enum ImgixParamsCrop {
  top
  bottom
  left
  right
  faces
  entropy
  edges
  focalpoint
}

enum ImgixParamsCs {
  srgb
  adobergb1998
  tinysrgb
  strip
}

enum ImgixParamsFill {
  solid
  blur
  gen
  generative
  gradient
}

enum ImgixParamsFillGenPos {
  top
  bottom
  middle
  left
  right
  center
}

enum ImgixParamsFillGradientCs {
  linear
  srgb
  oklab
  hsl
  lch
}

enum ImgixParamsFillGradientLinearDirection {
  top
  bottom
  left
  right
}

enum ImgixParamsFillGradientType {
  linear
  radial
}

enum ImgixParamsFit {
  clamp
  clip
  crop
  facearea
  fill
  fillmax
  max
  min
  scale
}

enum ImgixParamsFlip {
  h
  v
  hv
}

enum ImgixParamsFm {
  gif
  jpg
  jp2
  json
  jxr
  pjpg
  mp4
  png
  png8
  png32
  webp
  webm
  blurhash
  avif
}

enum ImgixParamsIptc {
  allow
  block
}

enum ImgixParamsMarkAlign {
  top
  middle
  bottom
  left
  center
  right
}

enum ImgixParamsMarkFit {
  clip
  crop
  fill
  max
  scale
}

enum ImgixParamsMarkTile {
  grid
}

enum ImgixParamsPalette {
  css
  json
}

enum ImgixParamsTransparency {
  grid
}

enum ImgixParamsTrim {
  auto
  color
}

enum ImgixParamsTxtAlign {
  top
  middle
  bottom
  left
  center
  right
}

enum ImgixParamsTxtClip {
  start
  middle
  end
  ellipsis
}

enum ImgixParamsTxtFit {
  max
}

"""Block of type üì¶ Importer Showcase (importer)"""
type ImporterRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  description(
    """Process content as markdown"""
    markdown: Boolean
  ): String!
  header: String!
  id: ItemId!
  learnMoreSlug: String!
  updatedAt: DateTime!
}

input InDepthCtaBlockModelFilter {
  id: ItemIdFilter
  cta: LinkFilter
  OR: [InDepthCtaBlockModelFilter]
  AND: [InDepthCtaBlockModelFilter]
}

"""Block of type üöÄ In-depth CTA block (in_depth_cta_block)"""
type InDepthCtaBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  cta: InDepthCtaRecord!
  id: ItemId!
  updatedAt: DateTime!
}

type InDepthCtaModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input InDepthCtaModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  description: StructuredTextFilter
  title: StringFilter
  ctaLabel: StringFilter
  ctaUrl: StringFilter
  OR: [InDepthCtaModelFilter]
  AND: [InDepthCtaModelFilter]
}

enum InDepthCtaModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
  ctaLabel_ASC
  ctaLabel_DESC
  ctaUrl_ASC
  ctaUrl_DESC
}

"""Record of type üí° Success Story CTA (in_depth_cta)"""
type InDepthCtaRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  ctaLabel: String!
  ctaUrl: String!
  description: InDepthCtaModelDescriptionField!
  id: ItemId!
  title: String!
  updatedAt: DateTime!
}

"""Specifies how to filter by usage"""
input InUseFilter {
  """Search uploads that are currently used by some record or not"""
  eq: BooleanType
}

"""
Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar IntType

"""Specifies how to filter Integer fields"""
input IntegerFilter {
  """
  Filter records with a value that's strictly greater than the one specified
  """
  gt: IntType

  """Filter records with a value that's less than the one specified"""
  lt: IntType

  """
  Filter records with a value that's greater than or equal to the one specified
  """
  gte: IntType

  """
  Filter records with a value that's less or equal than the one specified
  """
  lte: IntType

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType

  """Search for records with an exact match"""
  eq: IntType

  """Exclude records with an exact match"""
  neq: IntType
}

input IntegrationModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  websites: JsonFilter
  logo: FileFilter
  squareLogo: FileFilter
  integrationType: LinkFilter
  name: StringFilter
  projectUrl: StringFilter
  documentationUrl: StringFilter
  landingUrl: StringFilter
  pluginUrl: StringFilter
  slug: SlugFilter
  OR: [IntegrationModelFilter]
  AND: [IntegrationModelFilter]
}

enum IntegrationModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
  projectUrl_ASC
  projectUrl_DESC
  documentationUrl_ASC
  documentationUrl_DESC
  landingUrl_ASC
  landingUrl_DESC
  pluginUrl_ASC
  pluginUrl_DESC
}

"""Record of type üîß Integration (integration)"""
type IntegrationRecord implements RecordInterface {
  _allReferencingLandingPages(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenLandingPageAndIntegration

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: LandingPageModelFilter
    orderBy: [LandingPageModelOrderBy] = [_updatedAt_DESC]
  ): [LandingPageRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingLandingPagesMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenLandingPageAndIntegration

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: LandingPageModelFilter
  ): CollectionMetadata!
  _allReferencingPartners(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenPartnerAndIntegration

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PartnerModelFilter
    orderBy: [PartnerModelOrderBy] = [_updatedAt_DESC]
  ): [PartnerRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingPartnersMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenPartnerAndIntegration

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PartnerModelFilter
  ): CollectionMetadata!
  _allReferencingShowcaseProjects(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenShowcaseProjectAndIntegration

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ShowcaseProjectModelFilter
    orderBy: [ShowcaseProjectModelOrderBy] = [position_ASC]
  ): [ShowcaseProjectRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingShowcaseProjectsMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenShowcaseProjectAndIntegration

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ShowcaseProjectModelFilter
  ): CollectionMetadata!
  _allReferencingTechPartners(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenTechPartnerAndIntegration

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: TechPartnerModelFilter
    orderBy: [TechPartnerModelOrderBy] = [_updatedAt_DESC]
  ): [TechPartnerRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingTechPartnersMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenTechPartnerAndIntegration

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: TechPartnerModelFilter
  ): CollectionMetadata!
  _allReferencingTemplateDemos(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenTemplateDemoAndIntegration

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: TemplateDemoModelFilter
    orderBy: [TemplateDemoModelOrderBy] = [position_ASC]
  ): [TemplateDemoRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingTemplateDemosMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenTemplateDemoAndIntegration

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: TemplateDemoModelFilter
  ): CollectionMetadata!
  _allReferencingWebsites(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenWebsiteAndIntegration

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: WebsiteModelFilter
    orderBy: [WebsiteModelOrderBy] = [position_ASC]
  ): [WebsiteRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingWebsitesMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenWebsiteAndIntegration

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: WebsiteModelFilter
  ): CollectionMetadata!
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  documentationUrl: String
  id: ItemId!
  integrationType: IntegrationTypeRecord!
  landingUrl: String
  logo: FileField!
  name: String!
  pluginUrl: String
  position: IntType
  projectUrl: String
  slug: String
  squareLogo: FileField
  updatedAt: DateTime!
  websites: JsonField
}

input IntegrationTypeModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  slug: SlugFilter
  name: StringFilter
  OR: [IntegrationTypeModelFilter]
  AND: [IntegrationTypeModelFilter]
}

enum IntegrationTypeModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
}

"""Record of type üóú Integration type (integration_type)"""
type IntegrationTypeRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  name: String!
  position: IntType
  slug: String!
  updatedAt: DateTime!
}

"""Record of type üõí Marketplace Home (integrations_page)"""
type IntegrationsPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  demos: [TemplateDemoRecord!]!
  enterpriseApps: [EnterpriseAppRecord!]!
  hostingBuilding: [HostingAppRecord!]!
  id: ItemId!
  plugins: [PluginRecord!]!
  updatedAt: DateTime!
}

input InternalVideoModelFilter {
  id: ItemIdFilter
  video: FileFilter
  thumbTimeSeconds: IntegerFilter
  OR: [InternalVideoModelFilter]
  AND: [InternalVideoModelFilter]
}

"""Block of type üìπ Video (internal_video)"""
type InternalVideoRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  thumbTimeSeconds: IntType
  updatedAt: DateTime!
  video: VideoFileField!
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenAcademyCourseAndAcademyChapter {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [AcademyCourseModelFieldsReferencingAcademyChapterModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [AcademyCourseModelFieldsReferencingAcademyChapterModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenBlogPostAndAuthor {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [BlogPostModelFieldsReferencingAuthorModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [BlogPostModelFieldsReferencingAuthorModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenBlogPostAndShowcaseProject {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [BlogPostModelFieldsReferencingShowcaseProjectModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [BlogPostModelFieldsReferencingShowcaseProjectModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenBlogPostAndUserGuidesEpisode {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [BlogPostModelFieldsReferencingUserGuidesEpisodeModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [BlogPostModelFieldsReferencingUserGuidesEpisodeModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenCustomerStoryAndShowcaseProject {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [CustomerStoryModelFieldsReferencingShowcaseProjectModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [CustomerStoryModelFieldsReferencingShowcaseProjectModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenCustomerStoryAndUserGuidesEpisode {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [CustomerStoryModelFieldsReferencingUserGuidesEpisodeModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [CustomerStoryModelFieldsReferencingUserGuidesEpisodeModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenDocGroupAndDocPage {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [DocGroupModelFieldsReferencingDocPageModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [DocGroupModelFieldsReferencingDocPageModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenDocPageAndUserGuidesEpisode {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [DocPageModelFieldsReferencingUserGuidesEpisodeModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [DocPageModelFieldsReferencingUserGuidesEpisodeModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenFeaturesIndexAndDocPage {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [FeaturesIndexModelFieldsReferencingDocPageModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [FeaturesIndexModelFieldsReferencingDocPageModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenFeaturesIndexAndUserGuidesEpisode {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [FeaturesIndexModelFieldsReferencingUserGuidesEpisodeModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [FeaturesIndexModelFieldsReferencingUserGuidesEpisodeModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenLandingPageAndIntegration {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [LandingPageModelFieldsReferencingIntegrationModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [LandingPageModelFieldsReferencingIntegrationModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenPartnerAndIntegration {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [PartnerModelFieldsReferencingIntegrationModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [PartnerModelFieldsReferencingIntegrationModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenPartnerTestimonialAndPartner {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [PartnerTestimonialModelFieldsReferencingPartnerModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [PartnerTestimonialModelFieldsReferencingPartnerModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenPartnersPageAndPartner {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [PartnersPageModelFieldsReferencingPartnerModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [PartnersPageModelFieldsReferencingPartnerModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenProductOverviewAndDocPage {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [ProductOverviewModelFieldsReferencingDocPageModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [ProductOverviewModelFieldsReferencingDocPageModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenShowcaseProjectAndIntegration {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [ShowcaseProjectModelFieldsReferencingIntegrationModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [ShowcaseProjectModelFieldsReferencingIntegrationModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenShowcaseProjectAndPartner {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [ShowcaseProjectModelFieldsReferencingPartnerModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [ShowcaseProjectModelFieldsReferencingPartnerModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenTechPartnerAndIntegration {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [TechPartnerModelFieldsReferencingIntegrationModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [TechPartnerModelFieldsReferencingIntegrationModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenTemplateDemoAndIntegration {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [TemplateDemoModelFieldsReferencingIntegrationModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [TemplateDemoModelFieldsReferencingIntegrationModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenUseCasePageAndShowcaseProject {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [UseCasePageModelFieldsReferencingShowcaseProjectModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [UseCasePageModelFieldsReferencingShowcaseProjectModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenUserGuidesChapterAndUserGuidesEpisode {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [UserGuidesChapterModelFieldsReferencingUserGuidesEpisodeModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [UserGuidesChapterModelFieldsReferencingUserGuidesEpisodeModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenWebsiteAndIntegration {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [WebsiteModelFieldsReferencingIntegrationModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [WebsiteModelFieldsReferencingIntegrationModel!]
}

"""Specifies how to filter by linking fields"""
input InverseRelationshipFieldFilterBetweenWebsiteAndPartner {
  """
  Filter linking records that reference current record in at least one of the specified fields
  """
  anyIn: [WebsiteModelFieldsReferencingPartnerModel!]

  """
  Filter linking records that do not reference current record in any of the specified fields
  """
  notIn: [WebsiteModelFieldsReferencingPartnerModel!]
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenAcademyCourseAndAcademyChapter {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenAcademyCourseAndAcademyChapter

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenBlogPostAndAuthor {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenBlogPostAndAuthor

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenBlogPostAndShowcaseProject {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenBlogPostAndShowcaseProject

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenBlogPostAndUserGuidesEpisode {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenBlogPostAndUserGuidesEpisode

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenCustomerStoryAndShowcaseProject {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenCustomerStoryAndShowcaseProject

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenCustomerStoryAndUserGuidesEpisode {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenCustomerStoryAndUserGuidesEpisode

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenDocGroupAndDocPage {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenDocGroupAndDocPage

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenDocPageAndUserGuidesEpisode {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenDocPageAndUserGuidesEpisode

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenFeaturesIndexAndDocPage {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenFeaturesIndexAndDocPage

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenFeaturesIndexAndUserGuidesEpisode {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenFeaturesIndexAndUserGuidesEpisode

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenLandingPageAndIntegration {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenLandingPageAndIntegration

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenPartnerAndIntegration {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenPartnerAndIntegration

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenPartnerTestimonialAndPartner {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenPartnerTestimonialAndPartner

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenPartnersPageAndPartner {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenPartnersPageAndPartner

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenProductOverviewAndDocPage {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenProductOverviewAndDocPage

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenShowcaseProjectAndIntegration {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenShowcaseProjectAndIntegration

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenShowcaseProjectAndPartner {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenShowcaseProjectAndPartner

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenTechPartnerAndIntegration {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenTechPartnerAndIntegration

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenTemplateDemoAndIntegration {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenTemplateDemoAndIntegration

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenUseCasePageAndShowcaseProject {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenUseCasePageAndShowcaseProject

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenUserGuidesChapterAndUserGuidesEpisode {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenUserGuidesChapterAndUserGuidesEpisode

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenWebsiteAndIntegration {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenWebsiteAndIntegration

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

"""Specifies how to filter linking records"""
input InverseRelationshipFilterBetweenWebsiteAndPartner {
  """Specifies how to filter by linking fields"""
  fields: InverseRelationshipFieldFilterBetweenWebsiteAndPartner

  """Specifies how to filter by linking locales"""
  locales: LinkingLocalesFilter
}

scalar ItemId

"""Specifies how to filter by ID"""
input ItemIdFilter {
  """Search the record with the specified ID"""
  eq: ItemId

  """Exclude the record with the specified ID"""
  neq: ItemId

  """Search records with the specified IDs"""
  in: [ItemId]

  """Search records that do not have the specified IDs"""
  notIn: [ItemId]
}

enum ItemStatus {
  draft
  updated
  published
}

scalar JsonField

"""Specifies how to filter JSON fields"""
input JsonFilter {
  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

type LandingCdnMapBlockModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input LandingCdnMapBlockModelFilter {
  id: ItemIdFilter
  OR: [LandingCdnMapBlockModelFilter]
  AND: [LandingCdnMapBlockModelFilter]
}

type LandingCdnMapBlockModelTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type üó∫Ô∏è CDN Map (landing_cdn_map_block)"""
type LandingCdnMapBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  description: LandingCdnMapBlockModelDescriptionField
  id: ItemId!
  title: LandingCdnMapBlockModelTitleField!
  updatedAt: DateTime!
}

union LandingPageModelContentField = CodeExcerptBlockRecord | GraphqlDemoBlockRecord | ImageTransformationsBlockRecord | LandingCdnMapBlockRecord | LandingProgressiveImagesBlockRecord | LandingVideoBlockRecord | ModularBlocksBlockRecord | QuoteLinkRecord | ShopifyProductRecord | TryDemoBlockRecord

"""Specify nested blocks fields conditions"""
input LandingPageModelContentFieldBlocksConditions {
  codeExcerptBlock: CodeExcerptBlockModelFilter
  imageTransformationsBlock: ImageTransformationsBlockModelFilter
  quoteLink: QuoteLinkModelFilter
  modularBlocksBlock: ModularBlocksBlockModelFilter
  landingProgressiveImagesBlock: LandingProgressiveImagesBlockModelFilter
  graphqlDemoBlock: GraphqlDemoBlockModelFilter
  landingCdnMapBlock: LandingCdnMapBlockModelFilter
  tryDemoBlock: TryDemoBlockModelFilter
  landingVideoBlock: LandingVideoBlockModelFilter
  shopifyProduct: ShopifyProductModelFilter
}

"""Specify nested blocks types presence"""
input LandingPageModelContentFieldBlocksPresence {
  codeExcerptBlock: BooleanType
  imageTransformationsBlock: BooleanType
  quoteLink: BooleanType
  modularBlocksBlock: BooleanType
  landingProgressiveImagesBlock: BooleanType
  graphqlDemoBlock: BooleanType
  landingCdnMapBlock: BooleanType
  tryDemoBlock: BooleanType
  landingVideoBlock: BooleanType
  shopifyProduct: BooleanType
}

"""Specify how to filter this specific Modular Content field instance"""
input LandingPageModelContentFieldFilter {
  """
  Filter records containing at least one block matching the specified conditions
  """
  any: LandingPageModelContentFieldBlocksConditions

  """Filter records containing at least one block of any kind or not"""
  exists: BooleanType

  """Filter records containing at least one block of specified type or not"""
  containsAny: LandingPageModelContentFieldBlocksPresence
}

"""Linking fields"""
enum LandingPageModelFieldsReferencingIntegrationModel {
  landingPage_integration
}

input LandingPageModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  yoastAnalysis: JsonFilter
  seo: SeoFilter
  content: LandingPageModelContentFieldFilter
  demo: LinkFilter
  integration: LinkFilter
  title: StructuredTextFilter
  name: StringFilter
  seoH1: StringFilter
  subtitle: TextFilter
  docsUrl: StringFilter
  slug: SlugFilter
  OR: [LandingPageModelFilter]
  AND: [LandingPageModelFilter]
}

enum LandingPageModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
  seoH1_ASC
  seoH1_DESC
  docsUrl_ASC
  docsUrl_DESC
}

type LandingPageModelTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Record of type üéØ Frontend technology page (landing_page)"""
type LandingPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: [LandingPageModelContentField!]!
  createdAt: DateTime!
  demo: TemplateDemoRecord
  docsUrl: String
  id: ItemId!
  integration: IntegrationRecord!
  name: String!
  seo: SeoField
  seoH1: String
  slug: String
  subtitle(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  title: LandingPageModelTitleField!
  updatedAt: DateTime!
  yoastAnalysis: JsonField!
}

type LandingProgressiveImagesBlockModelContentField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input LandingProgressiveImagesBlockModelFilter {
  id: ItemIdFilter
  githubPackageName: StringFilter
  githubRepoTitle: StringFilter
  OR: [LandingProgressiveImagesBlockModelFilter]
  AND: [LandingProgressiveImagesBlockModelFilter]
}

type LandingProgressiveImagesBlockModelTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type Progressive images (landing_progressive_images_block)"""
type LandingProgressiveImagesBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: LandingProgressiveImagesBlockModelContentField
  createdAt: DateTime!
  githubPackageName: String
  githubRepoTitle: String
  id: ItemId!
  title: LandingProgressiveImagesBlockModelTitleField!
  updatedAt: DateTime!
}

type LandingVideoBlockModelContentField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input LandingVideoBlockModelFilter {
  id: ItemIdFilter
  video: FileFilter
  OR: [LandingVideoBlockModelFilter]
  AND: [LandingVideoBlockModelFilter]
}

type LandingVideoBlockModelTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type Landing video block (landing_video_block)"""
type LandingVideoBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: LandingVideoBlockModelContentField
  createdAt: DateTime!
  id: ItemId!
  title: LandingVideoBlockModelTitleField!
  updatedAt: DateTime!
  video: VideoFileField!
}

type LatLonField {
  latitude: FloatType!
  longitude: FloatType!
}

"""Specifies how to filter Geolocation fields"""
input LatLonFilter {
  """Filter records within the specified radius in meters"""
  near: LatLonNearFilter

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

input LatLonNearFilter {
  latitude: FloatType!
  longitude: FloatType!
  radius: FloatType!
}

"""Specifies how to filter Single-link fields"""
input LinkFilter {
  """
  Search for records with an exact match. The specified value must be a Record ID
  """
  eq: ItemId

  """
  Exclude records with an exact match. The specified value must be a Record ID
  """
  neq: ItemId

  """Filter records linked to one of the specified records"""
  in: [ItemId]

  """Filter records not linked to one of the specified records"""
  notIn: [ItemId]

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Linking locales"""
enum LinkingLocale {
  en
  _nonLocalized
}

"""Specifies how to filter by linking locales"""
input LinkingLocalesFilter {
  """
  Filter linking records that link to current record in at least one of the specified locales
  """
  anyIn: [LinkingLocale!]

  """
  Filter linking records that do not link to current record in any of the specified locales
  """
  notIn: [LinkingLocale!]
}

"""Specifies how to filter Multiple-links fields"""
input LinksFilter {
  """
  Search for records with an exact match. The specified values must be Record IDs
  """
  eq: [ItemId]

  """
  Filter records linked to all of the specified records. The specified values must be Record IDs
  """
  allIn: [ItemId]

  """
  Filter records linked to at least one of the specified records. The specified values must be Record IDs
  """
  anyIn: [ItemId]

  """
  Filter records not linked to any of the specified records. The specified values must be Record IDs
  """
  notIn: [ItemId]

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

scalar MetaTagAttributes

type ModularBlocksBlockModelContentField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input ModularBlocksBlockModelFilter {
  id: ItemIdFilter
  OR: [ModularBlocksBlockModelFilter]
  AND: [ModularBlocksBlockModelFilter]
}

type ModularBlocksBlockModelTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type Modular blocks block (modular_blocks_block)"""
type ModularBlocksBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: ModularBlocksBlockModelContentField
  createdAt: DateTime!
  id: ItemId!
  title: ModularBlocksBlockModelTitleField!
  updatedAt: DateTime!
}

input MultipleDemosBlockModelFilter {
  id: ItemIdFilter
  demos: LinksFilter
  OR: [MultipleDemosBlockModelFilter]
  AND: [MultipleDemosBlockModelFilter]
}

"""Block of type Multiple demos block (multiple_demos_block)"""
type MultipleDemosBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  demos: [TemplateDemoRecord!]!
  id: ItemId!
  updatedAt: DateTime!
}

enum MuxThumbnailFormatType {
  jpg
  png
  gif
}

"""Specifies how to filter by image orientation"""
input OrientationFilter {
  """Search uploads with the specified orientation"""
  eq: UploadOrientation

  """Exclude uploads with the specified orientation"""
  neq: UploadOrientation
}

"""Block of type Other video resource (other_video_resource)"""
type OtherVideoResourceRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  coverImage: ImageFileField!
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
  url: String!
}

type OverviewFeatureModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

union OverviewFeatureModelLinkField = DocPageRecord | FeatureRecord

"""Block of type üåü Overview feature (overview_feature)"""
type OverviewFeatureRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  description: OverviewFeatureModelDescriptionField!
  featureGroup: String!
  hardcodedLink: String
  highlight: BooleanType!
  icon: FileField!
  id: ItemId!
  image: ImageFileField
  link: OverviewFeatureModelLinkField
  title: String!
  updatedAt: DateTime!
}

type OverviewPillarModelCapability1Field {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type OverviewPillarModelCapability2Field {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type OverviewPillarModelCapability3Field {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type OverviewPillarModelTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type üó£Ô∏è Overview Pillar (overview_pillar)"""
type OverviewPillarRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  capability1: OverviewPillarModelCapability1Field
  capability2: OverviewPillarModelCapability2Field
  capability3: OverviewPillarModelCapability3Field
  createdAt: DateTime!
  id: ItemId!
  image: ImageFileField!
  pillarCallout(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  theme: String!
  title: OverviewPillarModelTitleField
  updatedAt: DateTime!
}

"""Block of type Page link (page_link)"""
type PageLinkRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  title: String!
  updatedAt: DateTime!
  url: String!
}

"""Specifies how to filter by parent (tree-like collections only)"""
input ParentFilter {
  """
  Filter records children of the specified record. Value must be a Record ID
  """
  eq: ItemId

  """Filter records with a parent record or not"""
  exists: BooleanType
}

type PartnerModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Linking fields"""
enum PartnerModelFieldsReferencingIntegrationModel {
  partner_technologies
}

input PartnerModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _stage: AgencyProgramWorkflowStageFilter
  shortDescription: StructuredTextFilter
  areasOfExpertise: LinksFilter
  npmUser: LinkFilter
  logo: FileFilter
  technologies: LinksFilter
  locations: LinksFilter
  description: StructuredTextFilter
  publicContactEmail: StringFilter
  name: StringFilter
  websiteUrl: StringFilter
  slug: SlugFilter
  OR: [PartnerModelFilter]
  AND: [PartnerModelFilter]
}

enum PartnerModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  publicContactEmail_ASC
  publicContactEmail_DESC
  name_ASC
  name_DESC
  websiteUrl_ASC
  websiteUrl_DESC
}

type PartnerModelShortDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Record of type üè¢ Partner (partner)"""
type PartnerRecord implements RecordInterface {
  _allReferencingPartnerTestimonials(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenPartnerTestimonialAndPartner

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PartnerTestimonialModelFilter
    orderBy: [PartnerTestimonialModelOrderBy] = [_updatedAt_DESC]
  ): [PartnerTestimonialRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingPartnerTestimonialsMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenPartnerTestimonialAndPartner

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PartnerTestimonialModelFilter
  ): CollectionMetadata!
  _allReferencingPartnersPages(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenPartnersPageAndPartner

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PartnersPageModelFilter
    orderBy: [PartnersPageModelOrderBy] = [_updatedAt_DESC]
  ): [PartnersPageRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingPartnersPagesMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenPartnersPageAndPartner

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PartnersPageModelFilter
  ): CollectionMetadata!
  _allReferencingShowcaseProjects(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenShowcaseProjectAndPartner

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ShowcaseProjectModelFilter
    orderBy: [ShowcaseProjectModelOrderBy] = [position_ASC]
  ): [ShowcaseProjectRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingShowcaseProjectsMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenShowcaseProjectAndPartner

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ShowcaseProjectModelFilter
  ): CollectionMetadata!
  _allReferencingWebsites(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenWebsiteAndPartner

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: WebsiteModelFilter
    orderBy: [WebsiteModelOrderBy] = [position_ASC]
  ): [WebsiteRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingWebsitesMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenWebsiteAndPartner

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: WebsiteModelFilter
  ): CollectionMetadata!
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _stage: AgencyProgramWorkflowStage!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  areasOfExpertise: [ExpertiseAreaRecord!]!
  createdAt: DateTime!
  description: PartnerModelDescriptionField!
  id: ItemId!
  locations: [CountryRecord!]!
  logo: FileField!
  name: String!
  npmUser: PluginAuthorRecord
  publicContactEmail: String
  shortDescription: PartnerModelShortDescriptionField!
  slug: String!
  technologies: [IntegrationRecord!]!
  updatedAt: DateTime!
  websiteUrl: String!
}

"""Linking fields"""
enum PartnerTestimonialModelFieldsReferencingPartnerModel {
  partnerTestimonial_partner
}

input PartnerTestimonialModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _stage: AgencyProgramWorkflowStageFilter
  quote: StructuredTextFilter
  partner: LinkFilter
  role: StringFilter
  name: StringFilter
  image: FileFilter
  OR: [PartnerTestimonialModelFilter]
  AND: [PartnerTestimonialModelFilter]
}

enum PartnerTestimonialModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  role_ASC
  role_DESC
  name_ASC
  name_DESC
}

type PartnerTestimonialModelQuoteField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Record of type üì£ Partner Testimonial (partner_testimonial)"""
type PartnerTestimonialRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _stage: AgencyProgramWorkflowStage!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  image: ImageFileField!
  name: String!
  partner: PartnerRecord!
  quote: PartnerTestimonialModelQuoteField!
  role: String!
  updatedAt: DateTime!
}

"""Linking fields"""
enum PartnersPageModelFieldsReferencingPartnerModel {
  partnersPage_highlightedPartners
}

input PartnersPageModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  highlightedPartners: LinksFilter
  OR: [PartnersPageModelFilter]
  AND: [PartnersPageModelFilter]
}

enum PartnersPageModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
}

"""Record of type ü§ù Partners Home (partners_page)"""
type PartnersPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  highlightedPartners: [PartnerRecord!]!
  id: ItemId!
  updatedAt: DateTime!
}

input PersonModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  avatar: FileFilter
  company: StringFilter
  title: StringFilter
  name: StringFilter
  slug: SlugFilter
  OR: [PersonModelFilter]
  AND: [PersonModelFilter]
}

enum PersonModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  company_ASC
  company_DESC
  title_ASC
  title_DESC
  name_ASC
  name_DESC
}

"""Record of type üßç Person (person)"""
type PersonRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  avatar: ImageFileField!
  company: String
  createdAt: DateTime!
  id: ItemId!
  name: String!
  slug: String!
  title: String
  updatedAt: DateTime!
}

input PlanFeatureGroupModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  features: LinksFilter
  name: StringFilter
  OR: [PlanFeatureGroupModelFilter]
  AND: [PlanFeatureGroupModelFilter]
}

enum PlanFeatureGroupModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
}

"""Record of type ‚≠êÔ∏è Feature Group (plan_feature_group)"""
type PlanFeatureGroupRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  features: [PlanFeatureRecord!]!
  id: ItemId!
  name: String!
  position: IntType
  updatedAt: DateTime!
}

type PlanFeatureModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input PlanFeatureModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  description: StructuredTextFilter
  availableOnProfessionalPlan: BooleanFilter
  tags: JsonFilter
  name: StringFilter
  moreDetailsUrl: StringFilter
  OR: [PlanFeatureModelFilter]
  AND: [PlanFeatureModelFilter]
}

enum PlanFeatureModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  availableOnProfessionalPlan_ASC
  availableOnProfessionalPlan_DESC
  name_ASC
  name_DESC
  moreDetailsUrl_ASC
  moreDetailsUrl_DESC
}

"""Record of type ‚≠êÔ∏è Plan Feature (plan_feature)"""
type PlanFeatureRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  availableOnProfessionalPlan: BooleanType!
  createdAt: DateTime!
  description: PlanFeatureModelDescriptionField!
  id: ItemId!
  moreDetailsUrl: String
  name: String!
  tags: JsonField
  updatedAt: DateTime!
}

input PluginAuthorModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  name: StringFilter
  email: StringFilter
  OR: [PluginAuthorModelFilter]
  AND: [PluginAuthorModelFilter]
}

enum PluginAuthorModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
}

"""Record of type Plugin Author (plugin_author)"""
type PluginAuthorRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  email: String!
  id: ItemId!
  name: String!
  updatedAt: DateTime!
}

"""Block of type üß© Plugin Collection (plugin_collection)"""
type PluginCollectionRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  plugins: [PluginRecord!]!
  title: String!
  updatedAt: DateTime!
}

input PluginFieldTypeModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  name: StringFilter
  code: StringFilter
  OR: [PluginFieldTypeModelFilter]
  AND: [PluginFieldTypeModelFilter]
}

enum PluginFieldTypeModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
  code_ASC
  code_DESC
}

"""Record of type Plugin field type (plugin_field_type)"""
type PluginFieldTypeRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  code: String!
  createdAt: DateTime!
  id: ItemId!
  name: String!
  updatedAt: DateTime!
}

input PluginModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  legacy: BooleanFilter
  permissions: JsonFilter
  coverImage: FileFilter
  lastUpdate: DateTimeFilter
  releasedAt: DateTimeFilter
  tags: LinksFilter
  pluginType: LinkFilter
  fieldTypes: LinksFilter
  parameters: JsonFilter
  seoSettings: SeoFilter
  readme: TextFilter
  author: LinkFilter
  manuallyDeprecated: BooleanFilter
  previewImage: FileFilter
  certifiedVersion: StringFilter
  entryPoint: StringFilter
  tagsCsv: StringFilter
  packageName: StringFilter
  installs: IntegerFilter
  homepage: StringFilter
  version: StringFilter
  title: StringFilter
  description: TextFilter
  OR: [PluginModelFilter]
  AND: [PluginModelFilter]
}

enum PluginModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  legacy_ASC
  legacy_DESC
  lastUpdate_ASC
  lastUpdate_DESC
  releasedAt_ASC
  releasedAt_DESC
  manuallyDeprecated_ASC
  manuallyDeprecated_DESC
  certifiedVersion_ASC
  certifiedVersion_DESC
  entryPoint_ASC
  entryPoint_DESC
  tagsCsv_ASC
  tagsCsv_DESC
  packageName_ASC
  packageName_DESC
  installs_ASC
  installs_DESC
  homepage_ASC
  homepage_DESC
  version_ASC
  version_DESC
  title_ASC
  title_DESC
}

"""Record of type üß© Plugin (plugin)"""
type PluginRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  author: PluginAuthorRecord!
  certifiedVersion: String
  coverImage: ImageFileField
  createdAt: DateTime!
  description(
    """Process content as markdown"""
    markdown: Boolean
  ): String!
  entryPoint: String!
  fieldTypes: [PluginFieldTypeRecord!]!
  homepage: String
  id: ItemId!
  installs: IntType!
  lastUpdate: DateTime!
  legacy: BooleanType!
  manuallyDeprecated: BooleanType!
  packageName: String!
  parameters: JsonField
  permissions: JsonField!
  pluginType: PluginTypeRecord
  previewImage: FileField
  readme(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  releasedAt: DateTime!
  seoSettings: SeoField
  tags: [PluginTagRecord!]!
  tagsCsv: String
  title: String!
  updatedAt: DateTime!
  version: String!
}

input PluginSdkHookGroupModelFilter {
  id: ItemIdFilter
  groupName: StringFilter
  OR: [PluginSdkHookGroupModelFilter]
  AND: [PluginSdkHookGroupModelFilter]
}

"""Block of type Plugin SDK Hook Group (plugin_sdk_hook_group)"""
type PluginSdkHookGroupRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  groupName: String!
  id: ItemId!
  updatedAt: DateTime!
}

input PluginTagModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  tag: StringFilter
  OR: [PluginTagModelFilter]
  AND: [PluginTagModelFilter]
}

enum PluginTagModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  tag_ASC
  tag_DESC
}

"""Record of type Plugin tag (plugin_tag)"""
type PluginTagRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  tag: String!
  updatedAt: DateTime!
}

input PluginTypeModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  name: StringFilter
  code: StringFilter
  OR: [PluginTypeModelFilter]
  AND: [PluginTypeModelFilter]
}

enum PluginTypeModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
  code_ASC
  code_DESC
}

"""Record of type Plugin type (plugin_type)"""
type PluginTypeRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  code: String!
  createdAt: DateTime!
  id: ItemId!
  name: String!
  updatedAt: DateTime!
}

"""Record of type üß© Plugins page (plugins_page)"""
type PluginsPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  collections: [PluginCollectionRecord!]!
  createdAt: DateTime!
  highlighted: [PluginRecord!]!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
}

"""Specifies how to filter by position (sorted and tree-like collections)"""
input PositionFilter {
  """
  Filter records with a value that's strictly greater than the one specified
  """
  gt: IntType

  """Filter records with a value that's less than the one specified"""
  lt: IntType

  """
  Filter records with a value that's greater than or equal to the one specified
  """
  gte: IntType

  """
  Filter records with a value that's less or equal than the one specified
  """
  lte: IntType

  """Search for records with an exact match"""
  eq: IntType

  """Exclude records with an exact match"""
  neq: IntType
}

input PricingHintModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  documentationUrl: StringFilter
  apiId: StringFilter
  name: StringFilter
  description: StringFilter
  OR: [PricingHintModelFilter]
  AND: [PricingHintModelFilter]
}

enum PricingHintModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  documentationUrl_ASC
  documentationUrl_DESC
  apiId_ASC
  apiId_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
}

"""Record of type ‚öñÔ∏è Plan Limit (pricing_hint)"""
type PricingHintRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  apiId: String
  createdAt: DateTime!
  description: String
  documentationUrl: String
  id: ItemId!
  name: String
  position: IntType
  updatedAt: DateTime!
}

"""Record of type üí∞ Pricing Home (pricing_page)"""
type PricingPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
}

type ProductAnnouncementModelAnnouncementField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input ProductAnnouncementModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  blogPost: LinkFilter
  cover: FileFilter
  area: StringFilter
  announcement: StructuredTextFilter
  title: StringFilter
  slug: SlugFilter
  OR: [ProductAnnouncementModelFilter]
  AND: [ProductAnnouncementModelFilter]
}

enum ProductAnnouncementModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  area_ASC
  area_DESC
  title_ASC
  title_DESC
}

"""Record of type üì£ In-app Announcement (product_announcement)"""
type ProductAnnouncementRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  announcement: ProductAnnouncementModelAnnouncementField!
  area: String!
  blogPost: BlogPostRecord!
  cover: FileField!
  createdAt: DateTime!
  id: ItemId!
  slug: String!
  title: String!
  updatedAt: DateTime!
}

type ProductComparisonModelCompetitorCharacterizationField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type ProductComparisonModelDatocmsCharacterizationField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input ProductComparisonModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  competitorCharacterization: StructuredTextFilter
  testimonials: LinksFilter
  datocmsCharacterization: StructuredTextFilter
  seoSocial: SeoFilter
  product: StringFilter
  slug: SlugFilter
  OR: [ProductComparisonModelFilter]
  AND: [ProductComparisonModelFilter]
}

enum ProductComparisonModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  product_ASC
  product_DESC
}

union ProductComparisonModelTestimonialsField = PartnerTestimonialRecord | ReviewRecord

"""Record of type üìä Product Comparison (product_comparison)"""
type ProductComparisonRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  competitorCharacterization: ProductComparisonModelCompetitorCharacterizationField!
  createdAt: DateTime!
  datocmsCharacterization: ProductComparisonModelDatocmsCharacterizationField!
  id: ItemId!
  importer: ImporterRecord
  product: String!
  reasons: [ReasonToConsiderRecord!]!
  seoSocial: SeoField
  slug: String!
  testimonials: [ProductComparisonModelTestimonialsField!]!
  topics: [DifferencesOnTopicRecord!]!
  updatedAt: DateTime!
}

type ProductDifferenceModelCompetitorTakeField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type ProductDifferenceModelDatocmsTakeField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type ‚öñÔ∏è Product difference (product_difference)"""
type ProductDifferenceRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  competitorTake: ProductDifferenceModelCompetitorTakeField!
  createdAt: DateTime!
  datocmsTake: ProductDifferenceModelDatocmsTakeField!
  id: ItemId!
  updatedAt: DateTime!
}

"""Linking fields"""
enum ProductOverviewModelFieldsReferencingDocPageModel {
  productOverview_features
  productOverview_features__overviewFeature_link
}

input ProductOverviewModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  readability: JsonFilter
  header: StructuredTextFilter
  subheader: StructuredTextFilter
  testimonials: LinksFilter
  seo: SeoFilter
  OR: [ProductOverviewModelFilter]
  AND: [ProductOverviewModelFilter]
}

type ProductOverviewModelHeaderField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

enum ProductOverviewModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
}

type ProductOverviewModelSubheaderField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

union ProductOverviewModelTestimonialsField = PartnerTestimonialRecord | ReviewRecord

"""Record of type üñ≤Ô∏è Product Overview (product_overview)"""
type ProductOverviewRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  features: [OverviewFeatureRecord!]!
  header: ProductOverviewModelHeaderField!
  id: ItemId!
  pillars: [OverviewPillarRecord!]!
  readability: JsonField
  seo: SeoField
  subheader: ProductOverviewModelSubheaderField!
  testimonials: [ProductOverviewModelTestimonialsField!]!
  updatedAt: DateTime!
}

"""Specifies how to filter by publication datetime"""
input PublishedAtFilter {
  """
  Filter records with a value that's strictly greater than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gt: DateTime

  """
  Filter records with a value that's less than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lt: DateTime

  """
  Filter records with a value that's greater than or equal to than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gte: DateTime

  """
  Filter records with a value that's less or equal than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lte: DateTime

  """
  Filter records with a value that's within the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  eq: DateTime

  """
  Filter records with a value that's outside the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  neq: DateTime

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""The query root for this schema"""
type Query {
  """Returns meta information regarding a record collection"""
  _allAcademyChaptersMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: AcademyChapterModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allAcademyCoursesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: AcademyCourseModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allAuthorsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: AuthorModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allBadgesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: BadgeModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allBlogPostsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: BlogPostModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allChangelogCategoriesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ChangelogCategoryModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allChangelogEntriesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ChangelogEntryModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allContinentsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ContinentModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allCountriesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: CountryModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allCustomerStoriesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: CustomerStoryModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allCustomersMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: CustomerModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allDocFeedbacksMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: DocFeedbackModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allDocGroupsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: DocGroupModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allDocPagesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: DocPageModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allEnterpriseAppsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: EnterpriseAppModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allExpertiseAreasMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ExpertiseAreaModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allFaqsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: FaqModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allFeaturesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: FeatureModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allGlossaryEntriesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: GlossaryEntryModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allHostingAppsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: HostingAppModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allInDepthCtasMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: InDepthCtaModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allIntegrationTypesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: IntegrationTypeModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allIntegrationsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: IntegrationModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allLandingPagesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: LandingPageModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPartnerTestimonialsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PartnerTestimonialModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPartnersMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PartnerModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPeopleMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PersonModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPlanFeatureGroupsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PlanFeatureGroupModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPlanFeaturesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PlanFeatureModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPluginAuthorsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PluginAuthorModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPluginFieldTypesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PluginFieldTypeModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPluginTagsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PluginTagModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPluginTypesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PluginTypeModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPluginsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PluginModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allPricingHintsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: PricingHintModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allProductAnnouncementsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ProductAnnouncementModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allProductComparisonsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ProductComparisonModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allReviewsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ReviewModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allSchemaMigrationsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: SchemaMigrationModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allShowcaseProjectsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: ShowcaseProjectModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allSuccessStoriesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: SuccessStoryModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allSuccessStoryTagsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: SuccessStoryTagModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allSupportTopicsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: SupportTopicModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allTeamMembersMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: TeamMemberModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allTeamPagesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: TeamPageModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allTechPartnersMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: TechPartnerModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allTemplateDemosMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: TemplateDemoModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allTryTutorialsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: TryTutorialModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allTutorialsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: TutorialModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding an assets collection"""
  _allUploadsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: UploadFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allUseCasePagesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: UseCasePageModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allUserGuidesChaptersMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: UserGuidesChapterModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allUserGuidesEpisodesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: UserGuidesEpisodeModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allVideoTutorialsMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: VideoTutorialModelFilter
  ): CollectionMetadata!

  """Returns meta information regarding a record collection"""
  _allWebsitesMeta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: WebsiteModelFilter
  ): CollectionMetadata!

  """Returns the single instance record"""
  _site(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): Site!

  """Returns the single instance record"""
  aboutPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): AboutPageRecord

  """Returns a specific record"""
  academyChapter(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: AcademyChapterModelFilter
    orderBy: [AcademyChapterModelOrderBy] = [_updatedAt_DESC]
  ): AcademyChapterRecord

  """Returns a specific record"""
  academyCourse(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: AcademyCourseModelFilter
    orderBy: [AcademyCourseModelOrderBy] = [position_ASC]
  ): AcademyCourseRecord

  """Returns the single instance record"""
  academyPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): AcademyPageRecord

  """Returns a collection of records"""
  allAcademyChapters(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: AcademyChapterModelFilter
    orderBy: [AcademyChapterModelOrderBy] = [_updatedAt_DESC]
  ): [AcademyChapterRecord!]!

  """Returns a collection of records"""
  allAcademyCourses(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: AcademyCourseModelFilter
    orderBy: [AcademyCourseModelOrderBy] = [position_ASC]
  ): [AcademyCourseRecord!]!

  """Returns a collection of records"""
  allAuthors(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: AuthorModelFilter
    orderBy: [AuthorModelOrderBy] = [_updatedAt_DESC]
  ): [AuthorRecord!]!

  """Returns a collection of records"""
  allBadges(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: BadgeModelFilter
    orderBy: [BadgeModelOrderBy] = [_updatedAt_DESC]
  ): [BadgeRecord!]!

  """Returns a collection of records"""
  allBlogPosts(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: BlogPostModelFilter
    orderBy: [BlogPostModelOrderBy] = [_updatedAt_DESC]
  ): [BlogPostRecord!]!

  """Returns a collection of records"""
  allChangelogCategories(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ChangelogCategoryModelFilter
    orderBy: [ChangelogCategoryModelOrderBy] = [position_ASC]
  ): [ChangelogCategoryRecord!]!

  """Returns a collection of records"""
  allChangelogEntries(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ChangelogEntryModelFilter
    orderBy: [ChangelogEntryModelOrderBy] = [_updatedAt_DESC]
  ): [ChangelogEntryRecord!]!

  """Returns a collection of records"""
  allContinents(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ContinentModelFilter
    orderBy: [ContinentModelOrderBy] = [_updatedAt_DESC]
  ): [ContinentRecord!]!

  """Returns a collection of records"""
  allCountries(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: CountryModelFilter
    orderBy: [CountryModelOrderBy] = [_updatedAt_DESC]
  ): [CountryRecord!]!

  """Returns a collection of records"""
  allCustomerStories(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: CustomerStoryModelFilter
    orderBy: [CustomerStoryModelOrderBy] = [_updatedAt_DESC]
  ): [CustomerStoryRecord!]!

  """Returns a collection of records"""
  allCustomers(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: CustomerModelFilter
    orderBy: [CustomerModelOrderBy] = [position_ASC]
  ): [CustomerRecord!]!

  """Returns a collection of records"""
  allDocFeedbacks(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: DocFeedbackModelFilter
    orderBy: [DocFeedbackModelOrderBy] = [_updatedAt_DESC]
  ): [DocFeedbackRecord!]!

  """Returns a collection of records"""
  allDocGroups(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: DocGroupModelFilter
    orderBy: [DocGroupModelOrderBy] = [position_ASC]
  ): [DocGroupRecord!]!

  """Returns a collection of records"""
  allDocPages(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: DocPageModelFilter
    orderBy: [DocPageModelOrderBy] = [_updatedAt_DESC]
  ): [DocPageRecord!]!

  """Returns a collection of records"""
  allEnterpriseApps(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: EnterpriseAppModelFilter
    orderBy: [EnterpriseAppModelOrderBy] = [position_ASC]
  ): [EnterpriseAppRecord!]!

  """Returns a collection of records"""
  allExpertiseAreas(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ExpertiseAreaModelFilter
    orderBy: [ExpertiseAreaModelOrderBy] = [_updatedAt_DESC]
  ): [ExpertiseAreaRecord!]!

  """Returns a collection of records"""
  allFaqs(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: FaqModelFilter
    orderBy: [FaqModelOrderBy] = [position_ASC]
  ): [FaqRecord!]!

  """Returns a collection of records"""
  allFeatures(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: FeatureModelFilter
    orderBy: [FeatureModelOrderBy] = [_updatedAt_DESC]
  ): [FeatureRecord!]!

  """Returns a collection of records"""
  allGlossaryEntries(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: GlossaryEntryModelFilter
    orderBy: [GlossaryEntryModelOrderBy] = [_updatedAt_DESC]
  ): [GlossaryEntryRecord!]!

  """Returns a collection of records"""
  allHostingApps(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: HostingAppModelFilter
    orderBy: [HostingAppModelOrderBy] = [position_ASC]
  ): [HostingAppRecord!]!

  """Returns a collection of records"""
  allInDepthCtas(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: InDepthCtaModelFilter
    orderBy: [InDepthCtaModelOrderBy] = [_updatedAt_DESC]
  ): [InDepthCtaRecord!]!

  """Returns a collection of records"""
  allIntegrationTypes(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: IntegrationTypeModelFilter
    orderBy: [IntegrationTypeModelOrderBy] = [position_ASC]
  ): [IntegrationTypeRecord!]!

  """Returns a collection of records"""
  allIntegrations(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: IntegrationModelFilter
    orderBy: [IntegrationModelOrderBy] = [position_ASC]
  ): [IntegrationRecord!]!

  """Returns a collection of records"""
  allLandingPages(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: LandingPageModelFilter
    orderBy: [LandingPageModelOrderBy] = [_updatedAt_DESC]
  ): [LandingPageRecord!]!

  """Returns a collection of records"""
  allPartnerTestimonials(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PartnerTestimonialModelFilter
    orderBy: [PartnerTestimonialModelOrderBy] = [_updatedAt_DESC]
  ): [PartnerTestimonialRecord!]!

  """Returns a collection of records"""
  allPartners(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PartnerModelFilter
    orderBy: [PartnerModelOrderBy] = [_updatedAt_DESC]
  ): [PartnerRecord!]!

  """Returns a collection of records"""
  allPeople(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PersonModelFilter
    orderBy: [PersonModelOrderBy] = [_updatedAt_DESC]
  ): [PersonRecord!]!

  """Returns a collection of records"""
  allPlanFeatureGroups(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PlanFeatureGroupModelFilter
    orderBy: [PlanFeatureGroupModelOrderBy] = [position_ASC]
  ): [PlanFeatureGroupRecord!]!

  """Returns a collection of records"""
  allPlanFeatures(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PlanFeatureModelFilter
    orderBy: [PlanFeatureModelOrderBy] = [_updatedAt_DESC]
  ): [PlanFeatureRecord!]!

  """Returns a collection of records"""
  allPluginAuthors(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PluginAuthorModelFilter
    orderBy: [PluginAuthorModelOrderBy] = [_updatedAt_DESC]
  ): [PluginAuthorRecord!]!

  """Returns a collection of records"""
  allPluginFieldTypes(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PluginFieldTypeModelFilter
    orderBy: [PluginFieldTypeModelOrderBy] = [_updatedAt_DESC]
  ): [PluginFieldTypeRecord!]!

  """Returns a collection of records"""
  allPluginTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PluginTagModelFilter
    orderBy: [PluginTagModelOrderBy] = [_updatedAt_DESC]
  ): [PluginTagRecord!]!

  """Returns a collection of records"""
  allPluginTypes(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PluginTypeModelFilter
    orderBy: [PluginTypeModelOrderBy] = [_updatedAt_DESC]
  ): [PluginTypeRecord!]!

  """Returns a collection of records"""
  allPlugins(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PluginModelFilter
    orderBy: [PluginModelOrderBy] = [_updatedAt_DESC]
  ): [PluginRecord!]!

  """Returns a collection of records"""
  allPricingHints(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: PricingHintModelFilter
    orderBy: [PricingHintModelOrderBy] = [position_ASC]
  ): [PricingHintRecord!]!

  """Returns a collection of records"""
  allProductAnnouncements(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ProductAnnouncementModelFilter
    orderBy: [ProductAnnouncementModelOrderBy] = [_updatedAt_DESC]
  ): [ProductAnnouncementRecord!]!

  """Returns a collection of records"""
  allProductComparisons(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ProductComparisonModelFilter
    orderBy: [ProductComparisonModelOrderBy] = [_updatedAt_DESC]
  ): [ProductComparisonRecord!]!

  """Returns a collection of records"""
  allReviews(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ReviewModelFilter
    orderBy: [ReviewModelOrderBy] = [position_ASC]
  ): [ReviewRecord!]!

  """Returns a collection of records"""
  allSchemaMigrations(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: SchemaMigrationModelFilter
    orderBy: [SchemaMigrationModelOrderBy] = [_updatedAt_DESC]
  ): [SchemaMigrationRecord!]!

  """Returns a collection of records"""
  allShowcaseProjects(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: ShowcaseProjectModelFilter
    orderBy: [ShowcaseProjectModelOrderBy] = [position_ASC]
  ): [ShowcaseProjectRecord!]!

  """Returns a collection of records"""
  allSuccessStories(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: SuccessStoryModelFilter
    orderBy: [SuccessStoryModelOrderBy] = [_updatedAt_DESC]
  ): [SuccessStoryRecord!]!

  """Returns a collection of records"""
  allSuccessStoryTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: SuccessStoryTagModelFilter
    orderBy: [SuccessStoryTagModelOrderBy] = [_updatedAt_DESC]
  ): [SuccessStoryTagRecord!]!

  """Returns a collection of records"""
  allSupportTopics(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: SupportTopicModelFilter
    orderBy: [SupportTopicModelOrderBy] = [position_ASC]
  ): [SupportTopicRecord!]!

  """Returns a collection of records"""
  allTeamMembers(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: TeamMemberModelFilter
    orderBy: [TeamMemberModelOrderBy] = [position_ASC]
  ): [TeamMemberRecord!]!

  """Returns a collection of records"""
  allTeamPages(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: TeamPageModelFilter
    orderBy: [TeamPageModelOrderBy] = [_updatedAt_DESC]
  ): [TeamPageRecord!]!

  """Returns a collection of records"""
  allTechPartners(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: TechPartnerModelFilter
    orderBy: [TechPartnerModelOrderBy] = [_updatedAt_DESC]
  ): [TechPartnerRecord!]!

  """Returns a collection of records"""
  allTemplateDemos(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: TemplateDemoModelFilter
    orderBy: [TemplateDemoModelOrderBy] = [position_ASC]
  ): [TemplateDemoRecord!]!

  """Returns a collection of records"""
  allTryTutorials(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: TryTutorialModelFilter
    orderBy: [TryTutorialModelOrderBy] = [position_ASC]
  ): [TryTutorialRecord!]!

  """Returns a collection of records"""
  allTutorials(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: TutorialModelFilter
    orderBy: [TutorialModelOrderBy] = [position_ASC]
  ): [TutorialRecord!]!

  """Returns a collection of assets"""
  allUploads(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: UploadFilter
    orderBy: [UploadOrderBy] = [_createdAt_DESC]
  ): [FileField!]!

  """Returns a collection of records"""
  allUseCasePages(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: UseCasePageModelFilter
    orderBy: [UseCasePageModelOrderBy] = [_updatedAt_DESC]
  ): [UseCasePageRecord!]!

  """Returns a collection of records"""
  allUserGuidesChapters(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: UserGuidesChapterModelFilter
    orderBy: [UserGuidesChapterModelOrderBy] = [position_ASC]
  ): [UserGuidesChapterRecord!]!

  """Returns a collection of records"""
  allUserGuidesEpisodes(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: UserGuidesEpisodeModelFilter
    orderBy: [UserGuidesEpisodeModelOrderBy] = [_updatedAt_DESC]
  ): [UserGuidesEpisodeRecord!]!

  """Returns a collection of records"""
  allVideoTutorials(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: VideoTutorialModelFilter
    orderBy: [VideoTutorialModelOrderBy] = [_updatedAt_DESC]
  ): [VideoTutorialRecord!]!

  """Returns a collection of records"""
  allWebsites(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: WebsiteModelFilter
    orderBy: [WebsiteModelOrderBy] = [position_ASC]
  ): [WebsiteRecord!]!

  """Returns a specific record"""
  author(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: AuthorModelFilter
    orderBy: [AuthorModelOrderBy] = [_updatedAt_DESC]
  ): AuthorRecord

  """Returns a specific record"""
  badge(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: BadgeModelFilter
    orderBy: [BadgeModelOrderBy] = [_updatedAt_DESC]
  ): BadgeRecord

  """Returns the single instance record"""
  blog(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): BlogRecord

  """Returns a specific record"""
  blogPost(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: BlogPostModelFilter
    orderBy: [BlogPostModelOrderBy] = [_updatedAt_DESC]
  ): BlogPostRecord

  """Returns the single instance record"""
  changelog(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ChangelogRecord

  """Returns a specific record"""
  changelogCategory(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ChangelogCategoryModelFilter
    orderBy: [ChangelogCategoryModelOrderBy] = [position_ASC]
  ): ChangelogCategoryRecord

  """Returns a specific record"""
  changelogEntry(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ChangelogEntryModelFilter
    orderBy: [ChangelogEntryModelOrderBy] = [_updatedAt_DESC]
  ): ChangelogEntryRecord

  """Returns a specific record"""
  continent(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ContinentModelFilter
    orderBy: [ContinentModelOrderBy] = [_updatedAt_DESC]
  ): ContinentRecord

  """Returns a specific record"""
  country(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: CountryModelFilter
    orderBy: [CountryModelOrderBy] = [_updatedAt_DESC]
  ): CountryRecord

  """Returns a specific record"""
  customer(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: CustomerModelFilter
    orderBy: [CustomerModelOrderBy] = [position_ASC]
  ): CustomerRecord

  """Returns the single instance record"""
  customerStoriesIndex(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomerStoriesIndexRecord

  """Returns a specific record"""
  customerStory(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: CustomerStoryModelFilter
    orderBy: [CustomerStoryModelOrderBy] = [_updatedAt_DESC]
  ): CustomerStoryRecord

  """Returns a specific record"""
  docFeedback(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: DocFeedbackModelFilter
    orderBy: [DocFeedbackModelOrderBy] = [_updatedAt_DESC]
  ): DocFeedbackRecord

  """Returns a specific record"""
  docGroup(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: DocGroupModelFilter
    orderBy: [DocGroupModelOrderBy] = [position_ASC]
  ): DocGroupRecord

  """Returns a specific record"""
  docPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: DocPageModelFilter
    orderBy: [DocPageModelOrderBy] = [_updatedAt_DESC]
  ): DocPageRecord

  """Returns the single instance record"""
  docsPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): DocsPageRecord

  """Returns a specific record"""
  enterpriseApp(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: EnterpriseAppModelFilter
    orderBy: [EnterpriseAppModelOrderBy] = [position_ASC]
  ): EnterpriseAppRecord

  """Returns a specific record"""
  expertiseArea(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ExpertiseAreaModelFilter
    orderBy: [ExpertiseAreaModelOrderBy] = [_updatedAt_DESC]
  ): ExpertiseAreaRecord

  """Returns a specific record"""
  faq(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: FaqModelFilter
    orderBy: [FaqModelOrderBy] = [position_ASC]
  ): FaqRecord

  """Returns a specific record"""
  feature(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: FeatureModelFilter
    orderBy: [FeatureModelOrderBy] = [_updatedAt_DESC]
  ): FeatureRecord

  """Returns the single instance record"""
  featuresIndex(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): FeaturesIndexRecord

  """Returns a specific record"""
  glossaryEntry(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: GlossaryEntryModelFilter
    orderBy: [GlossaryEntryModelOrderBy] = [_updatedAt_DESC]
  ): GlossaryEntryRecord

  """Returns the single instance record"""
  glossaryPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): GlossaryPageRecord

  """Returns the single instance record"""
  homePage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): HomePageRecord

  """Returns a specific record"""
  hostingApp(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: HostingAppModelFilter
    orderBy: [HostingAppModelOrderBy] = [position_ASC]
  ): HostingAppRecord

  """Returns the single instance record"""
  howToDatocmsIndex(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): HowToDatocmsIndexRecord

  """Returns a specific record"""
  inDepthCta(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: InDepthCtaModelFilter
    orderBy: [InDepthCtaModelOrderBy] = [_updatedAt_DESC]
  ): InDepthCtaRecord

  """Returns a specific record"""
  integration(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: IntegrationModelFilter
    orderBy: [IntegrationModelOrderBy] = [position_ASC]
  ): IntegrationRecord

  """Returns a specific record"""
  integrationType(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: IntegrationTypeModelFilter
    orderBy: [IntegrationTypeModelOrderBy] = [position_ASC]
  ): IntegrationTypeRecord

  """Returns the single instance record"""
  integrationsPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): IntegrationsPageRecord

  """Returns a specific record"""
  landingPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: LandingPageModelFilter
    orderBy: [LandingPageModelOrderBy] = [_updatedAt_DESC]
  ): LandingPageRecord

  """Returns a specific record"""
  partner(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PartnerModelFilter
    orderBy: [PartnerModelOrderBy] = [_updatedAt_DESC]
  ): PartnerRecord

  """Returns a specific record"""
  partnerTestimonial(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PartnerTestimonialModelFilter
    orderBy: [PartnerTestimonialModelOrderBy] = [_updatedAt_DESC]
  ): PartnerTestimonialRecord

  """Returns the single instance record"""
  partnersPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): PartnersPageRecord

  """Returns a specific record"""
  person(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PersonModelFilter
    orderBy: [PersonModelOrderBy] = [_updatedAt_DESC]
  ): PersonRecord

  """Returns a specific record"""
  planFeature(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PlanFeatureModelFilter
    orderBy: [PlanFeatureModelOrderBy] = [_updatedAt_DESC]
  ): PlanFeatureRecord

  """Returns a specific record"""
  planFeatureGroup(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PlanFeatureGroupModelFilter
    orderBy: [PlanFeatureGroupModelOrderBy] = [position_ASC]
  ): PlanFeatureGroupRecord

  """Returns a specific record"""
  plugin(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PluginModelFilter
    orderBy: [PluginModelOrderBy] = [_updatedAt_DESC]
  ): PluginRecord

  """Returns a specific record"""
  pluginAuthor(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PluginAuthorModelFilter
    orderBy: [PluginAuthorModelOrderBy] = [_updatedAt_DESC]
  ): PluginAuthorRecord

  """Returns a specific record"""
  pluginFieldType(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PluginFieldTypeModelFilter
    orderBy: [PluginFieldTypeModelOrderBy] = [_updatedAt_DESC]
  ): PluginFieldTypeRecord

  """Returns a specific record"""
  pluginTag(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PluginTagModelFilter
    orderBy: [PluginTagModelOrderBy] = [_updatedAt_DESC]
  ): PluginTagRecord

  """Returns a specific record"""
  pluginType(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PluginTypeModelFilter
    orderBy: [PluginTypeModelOrderBy] = [_updatedAt_DESC]
  ): PluginTypeRecord

  """Returns the single instance record"""
  pluginsPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): PluginsPageRecord

  """Returns a specific record"""
  pricingHint(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: PricingHintModelFilter
    orderBy: [PricingHintModelOrderBy] = [position_ASC]
  ): PricingHintRecord

  """Returns the single instance record"""
  pricingPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): PricingPageRecord

  """Returns a specific record"""
  productAnnouncement(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ProductAnnouncementModelFilter
    orderBy: [ProductAnnouncementModelOrderBy] = [_updatedAt_DESC]
  ): ProductAnnouncementRecord

  """Returns a specific record"""
  productComparison(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ProductComparisonModelFilter
    orderBy: [ProductComparisonModelOrderBy] = [_updatedAt_DESC]
  ): ProductComparisonRecord

  """Returns the single instance record"""
  productOverview(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ProductOverviewRecord

  """Returns a specific record"""
  review(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ReviewModelFilter
    orderBy: [ReviewModelOrderBy] = [position_ASC]
  ): ReviewRecord

  """Returns a specific record"""
  schemaMigration(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: SchemaMigrationModelFilter
    orderBy: [SchemaMigrationModelOrderBy] = [_updatedAt_DESC]
  ): SchemaMigrationRecord

  """Returns a specific record"""
  showcaseProject(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: ShowcaseProjectModelFilter
    orderBy: [ShowcaseProjectModelOrderBy] = [position_ASC]
  ): ShowcaseProjectRecord

  """Returns the single instance record"""
  successStoriesIndex(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): SuccessStoriesIndexRecord

  """Returns a specific record"""
  successStory(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: SuccessStoryModelFilter
    orderBy: [SuccessStoryModelOrderBy] = [_updatedAt_DESC]
  ): SuccessStoryRecord

  """Returns a specific record"""
  successStoryTag(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: SuccessStoryTagModelFilter
    orderBy: [SuccessStoryTagModelOrderBy] = [_updatedAt_DESC]
  ): SuccessStoryTagRecord

  """Returns a specific record"""
  supportTopic(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: SupportTopicModelFilter
    orderBy: [SupportTopicModelOrderBy] = [position_ASC]
  ): SupportTopicRecord

  """Returns a specific record"""
  teamMember(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: TeamMemberModelFilter
    orderBy: [TeamMemberModelOrderBy] = [position_ASC]
  ): TeamMemberRecord

  """Returns a specific record"""
  teamPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: TeamPageModelFilter
    orderBy: [TeamPageModelOrderBy] = [_updatedAt_DESC]
  ): TeamPageRecord

  """Returns a specific record"""
  techPartner(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: TechPartnerModelFilter
    orderBy: [TechPartnerModelOrderBy] = [_updatedAt_DESC]
  ): TechPartnerRecord

  """Returns the single instance record"""
  techPartnersPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): TechPartnersPageRecord

  """Returns a specific record"""
  templateDemo(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: TemplateDemoModelFilter
    orderBy: [TemplateDemoModelOrderBy] = [position_ASC]
  ): TemplateDemoRecord

  """Returns a specific record"""
  tryTutorial(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: TryTutorialModelFilter
    orderBy: [TryTutorialModelOrderBy] = [position_ASC]
  ): TryTutorialRecord

  """Returns a specific record"""
  tutorial(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: TutorialModelFilter
    orderBy: [TutorialModelOrderBy] = [position_ASC]
  ): TutorialRecord

  """Returns a specific asset"""
  upload(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: UploadFilter
    orderBy: [UploadOrderBy] = [_createdAt_DESC]
  ): FileField

  """Returns a specific record"""
  useCasePage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: UseCasePageModelFilter
    orderBy: [UseCasePageModelOrderBy] = [_updatedAt_DESC]
  ): UseCasePageRecord

  """Returns the single instance record"""
  useCasesPage(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): UseCasesPageRecord

  """Returns a specific record"""
  userGuidesChapter(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: UserGuidesChapterModelFilter
    orderBy: [UserGuidesChapterModelOrderBy] = [position_ASC]
  ): UserGuidesChapterRecord

  """Returns a specific record"""
  userGuidesEpisode(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: UserGuidesEpisodeModelFilter
    orderBy: [UserGuidesEpisodeModelOrderBy] = [_updatedAt_DESC]
  ): UserGuidesEpisodeRecord

  """Returns the single instance record"""
  userGuidesHome(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): UserGuidesHomeRecord

  """Returns a specific record"""
  videoTutorial(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: VideoTutorialModelFilter
    orderBy: [VideoTutorialModelOrderBy] = [_updatedAt_DESC]
  ): VideoTutorialRecord

  """Returns a specific record"""
  website(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
    filter: WebsiteModelFilter
    orderBy: [WebsiteModelOrderBy] = [position_ASC]
  ): WebsiteRecord
}

type QuestionAnswerModelAnswerField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input QuestionAnswerModelFilter {
  id: ItemIdFilter
  OR: [QuestionAnswerModelFilter]
  AND: [QuestionAnswerModelFilter]
}

type QuestionAnswerModelQuestionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type Question/answer (question_answer)"""
type QuestionAnswerRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  answer: QuestionAnswerModelAnswerField
  createdAt: DateTime!
  id: ItemId!
  question: QuestionAnswerModelQuestionField
  updatedAt: DateTime!
}

input QuoteLinkModelFilter {
  id: ItemIdFilter
  quote: LinkFilter
  OR: [QuoteLinkModelFilter]
  AND: [QuoteLinkModelFilter]
}

union QuoteLinkModelQuoteField = PartnerTestimonialRecord | ReviewRecord

"""Block of type üí¨ Quote Link (quote_link)"""
type QuoteLinkRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  quote: QuoteLinkModelQuoteField!
  updatedAt: DateTime!
}

input ReactUiLiveExampleModelFilter {
  id: ItemIdFilter
  componentName: StringFilter
  OR: [ReactUiLiveExampleModelFilter]
  AND: [ReactUiLiveExampleModelFilter]
}

"""Block of type React UI Live Example (react_ui_live_example)"""
type ReactUiLiveExampleRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  componentName: String!
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
}

type ReasonToConsiderModelContentField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type üèÜ Reason to consider (reason_to_consider)"""
type ReasonToConsiderRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: ReasonToConsiderModelContentField!
  createdAt: DateTime!
  id: ItemId!
  title: String!
  updatedAt: DateTime!
}

interface RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  id: ItemId!
}

"""Specifies how to filter by upload type"""
input ResolutionFilter {
  """Search uploads with the specified resolution"""
  eq: ResolutionType

  """Exclude uploads with the specified resolution"""
  neq: ResolutionType

  """Search uploads with the specified resolutions"""
  in: [ResolutionType]

  """Search uploads without the specified resolutions"""
  notIn: [ResolutionType]
}

enum ResolutionType {
  icon
  small
  medium
  large
}

type ResponsiveImage {
  alt: String
  aspectRatio: FloatType!
  base64: String
  bgColor: String
  height: IntType!
  sizes: String!
  src: String!
  srcSet: String!
  title: String
  webpSrcSet: String!
  width: IntType!
}

input ReviewModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  quote: StructuredTextFilter
  useInDashboard: BooleanFilter
  image: FileFilter
  role: StringFilter
  website: StringFilter
  name: StringFilter
  OR: [ReviewModelFilter]
  AND: [ReviewModelFilter]
}

enum ReviewModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  useInDashboard_ASC
  useInDashboard_DESC
  role_ASC
  role_DESC
  website_ASC
  website_DESC
  name_ASC
  name_DESC
}

type ReviewModelQuoteField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Record of type üí¨ Review (review)"""
type ReviewRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  image: ImageFileField!
  name: String
  position: IntType
  quote: ReviewModelQuoteField!
  role: String!
  updatedAt: DateTime!
  useInDashboard: BooleanType!
  website: String
}

input SchemaMigrationModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  name: StringFilter
  OR: [SchemaMigrationModelFilter]
  AND: [SchemaMigrationModelFilter]
}

enum SchemaMigrationModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
}

"""Record of type üîÑ Schema migration (schema_migration)"""
type SchemaMigrationRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  name: String!
  updatedAt: DateTime!
}

type SeoField {
  description: String
  image: FileField
  noIndex: BooleanType
  title: String
  twitterCard: String
}

"""Specifies how to filter SEO meta tags fields"""
input SeoFilter {
  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

input ShopifyProductModelFilter {
  id: ItemIdFilter
  shopifyProductId: StringFilter
  OR: [ShopifyProductModelFilter]
  AND: [ShopifyProductModelFilter]
}

"""Block of type üõçÔ∏è Shopify Product (shopify_product)"""
type ShopifyProductRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  shopifyProductId: String
  updatedAt: DateTime!
}

input ShowcaseProjectBlockModelFilter {
  id: ItemIdFilter
  showcaseProjects: LinksFilter
  OR: [ShowcaseProjectBlockModelFilter]
  AND: [ShowcaseProjectBlockModelFilter]
}

"""Block of type Showcase Projects (showcase_project_block)"""
type ShowcaseProjectBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  showcaseProjects: [ShowcaseProjectRecord!]!
  updatedAt: DateTime!
}

"""Linking fields"""
enum ShowcaseProjectModelFieldsReferencingIntegrationModel {
  showcaseProject_technologies
}

"""Linking fields"""
enum ShowcaseProjectModelFieldsReferencingPartnerModel {
  showcaseProject_partner
}

input ShowcaseProjectModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  _stage: AgencyProgramWorkflowStageFilter
  partner: LinkFilter
  headline: StructuredTextFilter
  video: FileFilter
  projectScreenshots: GalleryFilter
  inDepthExplanation: StructuredTextFilter
  technologies: LinksFilter
  areasOfExpertise: LinksFilter
  name: StringFilter
  projectUrl: StringFilter
  slug: SlugFilter
  mainImage: FileFilter
  datocmsScreenshots: GalleryFilter
  OR: [ShowcaseProjectModelFilter]
  AND: [ShowcaseProjectModelFilter]
}

type ShowcaseProjectModelHeadlineField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type ShowcaseProjectModelInDepthExplanationField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

enum ShowcaseProjectModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
  projectUrl_ASC
  projectUrl_DESC
}

"""Record of type üíª Partner Project (showcase_project)"""
type ShowcaseProjectRecord implements RecordInterface {
  _allReferencingBlogPosts(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenBlogPostAndShowcaseProject

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: BlogPostModelFilter
    orderBy: [BlogPostModelOrderBy] = [_updatedAt_DESC]
  ): [BlogPostRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingBlogPostsMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenBlogPostAndShowcaseProject

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: BlogPostModelFilter
  ): CollectionMetadata!
  _allReferencingCustomerStories(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenCustomerStoryAndShowcaseProject

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: CustomerStoryModelFilter
    orderBy: [CustomerStoryModelOrderBy] = [_updatedAt_DESC]
  ): [CustomerStoryRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingCustomerStoriesMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenCustomerStoryAndShowcaseProject

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: CustomerStoryModelFilter
  ): CollectionMetadata!
  _allReferencingUseCasePages(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenUseCasePageAndShowcaseProject

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: UseCasePageModelFilter
    orderBy: [UseCasePageModelOrderBy] = [_updatedAt_DESC]
  ): [UseCasePageRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingUseCasePagesMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenUseCasePageAndShowcaseProject

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: UseCasePageModelFilter
  ): CollectionMetadata!
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _stage: AgencyProgramWorkflowStage!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  areasOfExpertise: [ExpertiseAreaRecord!]!
  createdAt: DateTime!
  datocmsScreenshots: [ImageTitleFileField!]!
  headline: ShowcaseProjectModelHeadlineField!
  id: ItemId!
  inDepthExplanation: ShowcaseProjectModelInDepthExplanationField!
  mainImage: ImageFileField!
  name: String!
  partner: PartnerRecord!
  position: IntType
  projectScreenshots: [ImageTitleFileField!]!
  projectUrl: String
  slug: String!
  technologies: [IntegrationRecord!]!
  updatedAt: DateTime!
  video: VideoFileField
}

type Site {
  favicon: FileField
  faviconMetaTags(
    """The variants to build"""
    variants: [FaviconType] = [icon]
  ): [Tag!]!
  globalSeo(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): GlobalSeoField
  locales: [SiteLocale!]!
  noIndex: BooleanType
}

enum SiteLocale {
  en
}

"""Specifies how to filter Slug fields"""
input SlugFilter {
  """Search for records with an exact match"""
  eq: String

  """Exclude records with an exact match"""
  neq: String

  """Filter records that have one of the specified slugs"""
  in: [String]

  """Filter records that do have one of the specified slugs"""
  notIn: [String]
}

"""Specifies how to filter by status"""
input StatusFilter {
  """Search the record with the specified status"""
  eq: ItemStatus

  """Exclude the record with the specified status"""
  neq: ItemStatus

  """Search records with the specified statuses"""
  in: [ItemStatus]

  """Search records without the specified statuses"""
  notIn: [ItemStatus]
}

"""Specifies how to filter Single-line string fields"""
input StringFilter {
  """Filter records based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude records based on a regular expression"""
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field set as blank (null or empty string)
  """
  isBlank: BooleanType

  """
  Filter records with the specified field present (neither null, nor empty string)
  """
  isPresent: BooleanType

  """Search for records with an exact match"""
  eq: String

  """Exclude records with an exact match"""
  neq: String

  """Filter records that equal one of the specified values"""
  in: [String]

  """Filter records that do not equal one of the specified values"""
  notIn: [String]

  """
  Filter records with the specified field defined (i.e. with any value) or not [DEPRECATED]
  """
  exists: BooleanType
}

input StringMatchesFilter {
  pattern: String!
  caseSensitive: BooleanType = false
  regexp: BooleanType = true
}

"""Specifies how to filter Structured Text fields values"""
input StructuredTextFilter {
  """Filter records based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude records based on a regular expression"""
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field set as blank (null or single empty paragraph)
  """
  isBlank: BooleanType

  """
  Filter records with the specified field present (neither null, nor empty string)
  """
  isPresent: BooleanType

  """
  Filter records with the specified field defined (i.e. with any value) or not [DEPRECATED]
  """
  exists: BooleanType
}

"""Record of type üåü Success Stories Index (success_stories_index)"""
type SuccessStoriesIndexRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
}

type SuccessStoryModelChallengeField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

union SuccessStoryModelContentBlocksField = ImageRecord | InDepthCtaBlockRecord | InternalVideoRecord | VideoRecord

type SuccessStoryModelContentField {
  blocks: [SuccessStoryModelContentBlocksField!]!
  links: [String!]!
  value: JsonField!
}

"""Specify nested blocks fields conditions"""
input SuccessStoryModelContentFieldBlocksConditions {
  image: ImageModelFilter
  internalVideo: InternalVideoModelFilter
  video: VideoModelFilter
  inDepthCtaBlock: InDepthCtaBlockModelFilter
}

"""Specify how to filter based on this field's blocks"""
input SuccessStoryModelContentFieldBlocksFilter {
  """
  Filter records containing at least one block matching the specified conditions
  """
  any: SuccessStoryModelContentFieldBlocksConditions

  """Filter records containing at least one block of any kind or not"""
  exists: BooleanType

  """Filter records containing at least one block of specified type or not"""
  containsAny: SuccessStoryModelContentFieldBlocksPresence
}

"""Specify nested blocks types presence"""
input SuccessStoryModelContentFieldBlocksPresence {
  image: BooleanType
  internalVideo: BooleanType
  video: BooleanType
  inDepthCtaBlock: BooleanType
}

"""Specify how to filter this specific Structured Text field instance"""
input SuccessStoryModelContentFieldFilter {
  """Filter records based on this field value"""
  value: StructuredTextFilter

  """Filter records based on this field blocks"""
  blocks: SuccessStoryModelContentFieldBlocksFilter
}

input SuccessStoryModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  title: StructuredTextFilter
  challenge: StructuredTextFilter
  duotoneColor1: ColorFilter
  result: StructuredTextFilter
  accentColor: ColorFilter
  duotoneColor2: ColorFilter
  logo: FileFilter
  tags: LinksFilter
  name: StringFilter
  slug: SlugFilter
  mainResultsImage: FileFilter
  coverImage: FileFilter
  content: SuccessStoryModelContentFieldFilter
  OR: [SuccessStoryModelFilter]
  AND: [SuccessStoryModelFilter]
}

enum SuccessStoryModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
}

type SuccessStoryModelResultField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type SuccessStoryModelTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type Number (success_story_number)"""
type SuccessStoryNumberRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  label: String
  number: String!
  updatedAt: DateTime!
}

"""Record of type üåü Success Story (success_story)"""
type SuccessStoryRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  accentColor: ColorField!
  challenge: SuccessStoryModelChallengeField
  content: SuccessStoryModelContentField!
  coverImage: ImageFileField!
  createdAt: DateTime!
  duotoneColor1: ColorField!
  duotoneColor2: ColorField!
  id: ItemId!
  logo: FileField!
  mainResults: [SuccessStoryResultRecord!]!
  mainResultsImage: ImageFileField!
  name: String!
  numbers: [SuccessStoryNumberRecord!]!
  result: SuccessStoryModelResultField
  slug: String!
  tags: [SuccessStoryTagRecord!]!
  title: SuccessStoryModelTitleField
  updatedAt: DateTime!
}

type SuccessStoryResultModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type Result (success_story_result)"""
type SuccessStoryResultRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  description: SuccessStoryResultModelDescriptionField
  id: ItemId!
  title: String
  updatedAt: DateTime!
}

input SuccessStoryTagModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  name: StringFilter
  slug: SlugFilter
  OR: [SuccessStoryTagModelFilter]
  AND: [SuccessStoryTagModelFilter]
}

enum SuccessStoryTagModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
}

"""Record of type üîñ Success Story Tag (success_story_tag)"""
type SuccessStoryTagRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  name: String!
  slug: String!
  updatedAt: DateTime!
}

type SupportTopicModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input SupportTopicModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  parent: ParentFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  description: StructuredTextFilter
  disableContactForm: BooleanFilter
  subtopicQuestion: StringFilter
  autoResponderType: StringFilter
  contactFormType: StringFilter
  title: StringFilter
  slug: SlugFilter
  OR: [SupportTopicModelFilter]
  AND: [SupportTopicModelFilter]
}

enum SupportTopicModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  disableContactForm_ASC
  disableContactForm_DESC
  subtopicQuestion_ASC
  subtopicQuestion_DESC
  autoResponderType_ASC
  autoResponderType_DESC
  contactFormType_ASC
  contactFormType_DESC
  title_ASC
  title_DESC
}

"""Record of type üÜò Support topic (support_topic)"""
type SupportTopicRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  autoResponderType: String!
  children: [SupportTopicRecord!]!
  commonQuestions: [PageLinkRecord!]!
  contactFormType: String!
  createdAt: DateTime!
  description: SupportTopicModelDescriptionField
  disableContactForm: BooleanType!
  id: ItemId!
  parent: SupportTopicRecord
  position: IntType
  slug: String!
  subtopicQuestion: String
  title: String
  updatedAt: DateTime!
}

input TableModelFilter {
  id: ItemIdFilter
  table: JsonFilter
  OR: [TableModelFilter]
  AND: [TableModelFilter]
}

"""Block of type üìä Table (table)"""
type TableRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  table: JsonField
  updatedAt: DateTime!
}

type Tag {
  attributes: MetaTagAttributes
  content: String
  tag: String!
}

input TeamMemberModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  name: StringFilter
  role: StringFilter
  avatar: FileFilter
  OR: [TeamMemberModelFilter]
  AND: [TeamMemberModelFilter]
}

enum TeamMemberModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  name_ASC
  name_DESC
  role_ASC
  role_DESC
}

"""Record of type üë• Team member (team_member)"""
type TeamMemberRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  avatar: ImageFileField!
  createdAt: DateTime!
  id: ItemId!
  name: String!
  position: IntType
  role: String!
  updatedAt: DateTime!
}

input TeamPageModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  yoastAnalysis: JsonFilter
  seo: SeoFilter
  seoH1: StringFilter
  slug: SlugFilter
  OR: [TeamPageModelFilter]
  AND: [TeamPageModelFilter]
}

enum TeamPageModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  seoH1_ASC
  seoH1_DESC
}

"""Record of type üë• Persona page (team_page)"""
type TeamPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  seoH1: String
  slug: String
  updatedAt: DateTime!
  yoastAnalysis: JsonField!
}

type TechPartnerModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Linking fields"""
enum TechPartnerModelFieldsReferencingIntegrationModel {
  techPartner_technologies
}

input TechPartnerModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  description: StructuredTextFilter
  npmUser: LinkFilter
  areasOfExpertise: LinksFilter
  technologies: LinksFilter
  shortDescription: StructuredTextFilter
  logo: FileFilter
  locations: LinksFilter
  publicContactEmail: StringFilter
  websiteUrl: StringFilter
  name: StringFilter
  slug: SlugFilter
  OR: [TechPartnerModelFilter]
  AND: [TechPartnerModelFilter]
}

enum TechPartnerModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  publicContactEmail_ASC
  publicContactEmail_DESC
  websiteUrl_ASC
  websiteUrl_DESC
  name_ASC
  name_DESC
}

type TechPartnerModelShortDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Record of type üè¢ Tech Partner (tech_partner)"""
type TechPartnerRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  areasOfExpertise: [ExpertiseAreaRecord!]!
  createdAt: DateTime!
  description: TechPartnerModelDescriptionField!
  id: ItemId!
  locations: [CountryRecord!]!
  logo: FileField!
  name: String!
  npmUser: PluginAuthorRecord
  publicContactEmail: String
  shortDescription: TechPartnerModelShortDescriptionField!
  slug: String!
  technologies: [IntegrationRecord!]!
  updatedAt: DateTime!
  websiteUrl: String!
}

"""Record of type ü§ù Tech Partner Home (tech_partners_page)"""
type TechPartnersPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  highlightedPartners: [TechPartnerRecord!]!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
}

"""Linking fields"""
enum TemplateDemoModelFieldsReferencingIntegrationModel {
  templateDemo_technology
}

input TemplateDemoModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  seo: SeoFilter
  yoastAnalysis: JsonFilter
  readme: TextFilter
  badge: LinkFilter
  starterType: StringFilter
  name: StringFilter
  technology: LinkFilter
  backendScreenshot: FileFilter
  screenshot: FileFilter
  seoH1: StringFilter
  cmsDescription: TextFilter
  label: StringFilter
  githubRepo: StringFilter
  code: SlugFilter
  OR: [TemplateDemoModelFilter]
  AND: [TemplateDemoModelFilter]
}

enum TemplateDemoModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  starterType_ASC
  starterType_DESC
  name_ASC
  name_DESC
  seoH1_ASC
  seoH1_DESC
  label_ASC
  label_DESC
  githubRepo_ASC
  githubRepo_DESC
}

"""Record of type üéâ Starter Project (template_demo)"""
type TemplateDemoRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  backendScreenshot: ImageFileField!
  badge: BadgeRecord
  cmsDescription(
    """Process content as markdown"""
    markdown: Boolean
  ): String!
  code: String!
  createdAt: DateTime!
  githubRepo: String!
  id: ItemId!
  label: String
  name: String!
  position: IntType
  readme(
    """Process content as markdown"""
    markdown: Boolean
  ): String
  screenshot: ImageFileField!
  seo: SeoField
  seoH1: String
  starterType: String!
  technology: IntegrationRecord!
  updatedAt: DateTime!
  yoastAnalysis: JsonField
}

union TestimonialCardModelTestimonialField = PartnerTestimonialRecord | ReviewRecord

"""Block of type üé§ Testimonial card (testimonial_card)"""
type TestimonialCardRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  relatedFeature: String!
  testimonial: TestimonialCardModelTestimonialField!
  updatedAt: DateTime!
}

"""Specifies how to filter text fields"""
input TextFilter {
  """Filter records based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude records based on a regular expression"""
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field set as blank (null or empty string)
  """
  isBlank: BooleanType

  """
  Filter records with the specified field present (neither null, nor empty string)
  """
  isPresent: BooleanType

  """
  Filter records with the specified field defined (i.e. with any value) or not [DEPRECATED]
  """
  exists: BooleanType
}

type TryDemoBlockModelContentField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input TryDemoBlockModelFilter {
  id: ItemIdFilter
  OR: [TryDemoBlockModelFilter]
  AND: [TryDemoBlockModelFilter]
}

type TryDemoBlockModelTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type Try demo block (try_demo_block)"""
type TryDemoBlockRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: TryDemoBlockModelContentField
  createdAt: DateTime!
  id: ItemId!
  title: TryDemoBlockModelTitleField!
  updatedAt: DateTime!
}

input TryTutorialModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  video: FileFilter
  title: StringFilter
  description: TextFilter
  OR: [TryTutorialModelFilter]
  AND: [TryTutorialModelFilter]
}

enum TryTutorialModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type üé¨ Try Tutorial (try_tutorial)"""
type TryTutorialRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  description(
    """Process content as markdown"""
    markdown: Boolean
  ): String!
  id: ItemId!
  position: IntType
  title: String!
  updatedAt: DateTime!
  video: VideoFileField!
}

type TutorialModelExcerptField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

input TutorialModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  excerpt: StructuredTextFilter
  url: StringFilter
  title: StringFilter
  OR: [TutorialModelFilter]
  AND: [TutorialModelFilter]
}

enum TutorialModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  url_ASC
  url_DESC
  title_ASC
  title_DESC
}

"""Record of type üîß Tutorial (tutorial)"""
type TutorialRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  excerpt: TutorialModelExcerptField
  id: ItemId!
  position: IntType
  title: String!
  updatedAt: DateTime!
  url: String!
}

input TutorialVideoModelFilter {
  id: ItemIdFilter
  tutorials: LinksFilter
  OR: [TutorialVideoModelFilter]
  AND: [TutorialVideoModelFilter]
}

union TutorialVideoModelTutorialsField = UserGuidesEpisodeRecord | VideoTutorialRecord

"""Block of type üìπ Video Tutorials (tutorial_video)"""
type TutorialVideoRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  tutorials: [TutorialVideoModelTutorialsField!]!
  updatedAt: DateTime!
}

"""Specifies how to filter by upload type"""
input TypeFilter {
  """Search uploads with the specified type"""
  eq: UploadType

  """Exclude uploads with the specified type"""
  neq: UploadType

  """Search uploads with the specified types"""
  in: [UploadType]

  """Search uploads without the specified types"""
  notIn: [UploadType]
}

"""Specifies how to filter by update datetime"""
input UpdatedAtFilter {
  """
  Filter records with a value that's strictly greater than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gt: DateTime

  """
  Filter records with a value that's less than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lt: DateTime

  """
  Filter records with a value that's greater than or equal to than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  gte: DateTime

  """
  Filter records with a value that's less or equal than the one specified. Seconds and milliseconds are truncated from the argument.
  """
  lte: DateTime

  """
  Filter records with a value that's within the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  eq: DateTime

  """
  Filter records with a value that's outside the specified minute range. Seconds and milliseconds are truncated from the argument.
  """
  neq: DateTime

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Specifies how to filter by default alt"""
input UploadAltFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter

  """Search the uploads with the specified alt"""
  eq: String

  """Exclude the uploads with the specified alt"""
  neq: String

  """Search uploads with the specified values as default alt"""
  in: [String]

  """Search uploads that do not have the specified values as default alt"""
  notIn: [String]

  """
  Filter uploads with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Specifies how to filter by auhtor"""
input UploadAuthorFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter

  """
  Filter uploads with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Specifies how to filter by basename"""
input UploadBasenameFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter
}

"""Specifies how to filter by colors"""
input UploadColorsFilter {
  """Filter uploads that have the specified colors"""
  contains: ColorBucketType

  """Filter uploads that have all of the specified colors"""
  allIn: [ColorBucketType]

  """Filter uploads that have at least one of the specified colors"""
  anyIn: [ColorBucketType]

  """Filter uploads that do not have any of the specified colors"""
  notIn: [ColorBucketType]

  """Search for uploads with an exact match"""
  eq: [ColorBucketType]
}

"""Specifies how to filter by copyright"""
input UploadCopyrightFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

"""Specifies how to filter by creation datetime"""
input UploadCreatedAtFilter {
  """Search for uploads with an exact match"""
  eq: DateTime

  """Exclude uploads with an exact match"""
  neq: DateTime

  """Filter uploads with a value that's less than the one specified"""
  lt: DateTime

  """
  Filter uploads with a value that's less or equal than the one specified
  """
  lte: DateTime

  """
  Filter uploads with a value that's strictly greater than the one specified
  """
  gt: DateTime

  """
  Filter uploads with a value that's greater than or equal to the one specified
  """
  gte: DateTime
}

"""Specifies how to filter by filename"""
input UploadFilenameFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter
}

input UploadFilter {
  type: TypeFilter
  inUse: InUseFilter
  resolution: ResolutionFilter
  size: UploadSizeFilter
  tags: UploadTagsFilter
  smartTags: UploadTagsFilter
  colors: UploadColorsFilter
  orientation: OrientationFilter
  id: UploadIdFilter
  mimeType: UploadMimeTypeFilter
  format: UploadFormatFilter
  height: UploadHeightFilter
  width: UploadWidthFilter
  alt: UploadAltFilter
  title: UploadTitleFilter
  notes: UploadNotesFilter
  md5: UploadMd5Filter
  author: UploadAuthorFilter
  copyright: UploadCopyrightFilter
  basename: UploadBasenameFilter
  filename: UploadFilenameFilter
  _createdAt: UploadCreatedAtFilter
  _updatedAt: UploadUpdatedAtFilter
  OR: [UploadFilter]
  AND: [UploadFilter]
}

"""Specifies how to filter by format"""
input UploadFormatFilter {
  """Search the asset with the specified format"""
  eq: String

  """Exclude the asset with the specified format"""
  neq: String

  """Search assets with the specified formats"""
  in: [String]

  """Search assets that do not have the specified formats"""
  notIn: [String]
}

"""Specifies how to filter by height"""
input UploadHeightFilter {
  """Search all assets larger than the specified height"""
  gt: IntType

  """Search all assets smaller than the specified height"""
  lt: IntType

  """Search all assets larger or equal to the specified height"""
  gte: IntType

  """Search all assets larger or equal to the specified height"""
  lte: IntType

  """Search assets with the specified height"""
  eq: IntType

  """Search assets that do not have the specified height"""
  neq: IntType
}

scalar UploadId

"""Specifies how to filter by ID"""
input UploadIdFilter {
  """Search the asset with the specified ID"""
  eq: UploadId

  """Exclude the asset with the specified ID"""
  neq: UploadId

  """Search assets with the specified IDs"""
  in: [UploadId]

  """Search assets that do not have the specified IDs"""
  notIn: [UploadId]
}

"""Specifies how to filter by MD5"""
input UploadMd5Filter {
  """Search the asset with the specified MD5"""
  eq: String

  """Exclude the asset with the specified MD5"""
  neq: String

  """Search assets with the specified MD5s"""
  in: [String]

  """Search assets that do not have the specified MD5s"""
  notIn: [String]
}

"""Specifies how to filter by mime type"""
input UploadMimeTypeFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter

  """Search the asset with the specified mime type"""
  eq: String

  """Exclude the asset with the specified mime type"""
  neq: String

  """Search assets with the specified mime types"""
  in: [String]

  """Search assets that do not have the specified mime types"""
  notIn: [String]
}

"""Specifies how to filter by notes"""
input UploadNotesFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter

  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

enum UploadOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  size_ASC
  size_DESC
  resolution_ASC
  resolution_DESC
  filename_ASC
  filename_DESC
  basename_ASC
  basename_DESC
  mimeType_ASC
  mimeType_DESC
  format_ASC
  format_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  id_ASC
  id_DESC
}

enum UploadOrientation {
  landscape
  portrait
  square
}

"""Specifies how to filter by size"""
input UploadSizeFilter {
  """Search all assets larger than the specified size (in bytes)"""
  gt: IntType

  """Search all assets smaller than the specified size (in bytes)"""
  lt: IntType

  """Search all assets larger or equal to the specified size (in bytes)"""
  gte: IntType

  """Search all assets larger or equal to the specified size (in bytes)"""
  lte: IntType

  """Search assets with the specified size (in bytes)"""
  eq: IntType

  """Search assets that do not have the specified size (in bytes)"""
  neq: IntType
}

"""Specifies how to filter by tags"""
input UploadTagsFilter {
  """Filter uploads linked to the specified tag"""
  contains: String

  """Filter uploads linked to all of the specified tags"""
  allIn: [String!]

  """Filter uploads linked to at least one of the specified tags"""
  anyIn: [String!]

  """Filter uploads not linked to any of the specified tags"""
  notIn: [String!]

  """Search for uploads with an exact match"""
  eq: [String!]
}

"""Specifies how to filter by default title"""
input UploadTitleFilter {
  """Filter uploads based on a regular expression"""
  matches: StringMatchesFilter

  """Exclude uploads based on a regular expression"""
  notMatches: StringMatchesFilter

  """Search the asset with the specified title"""
  eq: String

  """Exclude the asset with the specified title"""
  neq: String

  """Search assets with the specified as default title"""
  in: [String]

  """Search assets that do not have the specified as default title"""
  notIn: [String]

  """
  Filter assets with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

enum UploadType {
  image
  audio
  video
  richtext
  presentation
  spreadsheet
  pdfdocument
  archive
}

"""Specifies how to filter by update datetime"""
input UploadUpdatedAtFilter {
  """Search for uploads with an exact match"""
  eq: DateTime

  """Exclude uploads with an exact match"""
  neq: DateTime

  """Filter uploads with a value that's less than the one specified"""
  lt: DateTime

  """
  Filter uploads with a value that's less or equal than the one specified
  """
  lte: DateTime

  """
  Filter uploads with a value that's strictly greater than the one specified
  """
  gt: DateTime

  """
  Filter uploads with a value that's greater than or equal to the one specified
  """
  gte: DateTime
}

type UploadVideoField {
  alt(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """Maximum image dimension (defaults to 24px)"""
    size: Int! = 24

    """Image quality (defaults to 70%)"""
    quality: Int! = 70

    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String
  blurhash: String
  duration: Int
  framerate: Int
  height: IntType!
  mp4Url(
    """Pick highest resolution available up to the specified argument"""
    res: VideoMp4Res

    """Pick the exact resolution quality specified in the argument"""
    exactRes: VideoMp4Res
  ): String
  muxAssetId: String!
  muxPlaybackId: String!
  streamingUrl: String!
  thumbhash: String
  thumbnailUrl(
    """
    The file extension of the requested image format. Either png, jpg or gif
    """
    format: MuxThumbnailFormatType = jpg
  ): String!
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  width: IntType!
}

"""Specifies how to filter by width"""
input UploadWidthFilter {
  """Search all assets larger than the specified width"""
  gt: IntType

  """Search all assets smaller than the specified width"""
  lt: IntType

  """Search all assets larger or equal to the specified width"""
  gte: IntType

  """Search all assets larger or equal to the specified width"""
  lte: IntType

  """Search assets with the specified width"""
  eq: IntType

  """Search assets that do not have the specified width"""
  neq: IntType
}

type UseCaseCalloutModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type ü§ô Use Case Callout (use_case_callout)"""
type UseCaseCalloutRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  description: UseCaseCalloutModelDescriptionField!
  features: [UseCaseFeatureRecord!]!
  id: ItemId!
  image: FileField
  title: String!
  updatedAt: DateTime!
}

type UseCaseFeatureModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Block of type üåü Use Case Feature (use_case_feature)"""
type UseCaseFeatureRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  description: UseCaseFeatureModelDescriptionField!
  icon: FileField
  id: ItemId!
  title: String!
  updatedAt: DateTime!
}

union UseCasePageModelCaseStudyField = CustomerStoryRecord | ShowcaseProjectRecord | SuccessStoryRecord

type UseCasePageModelDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Linking fields"""
enum UseCasePageModelFieldsReferencingShowcaseProjectModel {
  useCasePage_caseStudy
}

input UseCasePageModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  featuresHeader: StringFilter
  heading: StringFilter
  successStoryHeader: StructuredTextFilter
  title: StructuredTextFilter
  starterImage: FileFilter
  heroCustomer: FileFilter
  heroProduct: FileFilter
  heroImage: FileFilter
  subtitle: StructuredTextFilter
  description: StructuredTextFilter
  headline: StructuredTextFilter
  seo: SeoFilter
  readability: JsonFilter
  identifierInternal: StringFilter
  slug: SlugFilter
  quotesHeader: StructuredTextFilter
  header: StructuredTextFilter
  quotes: LinksFilter
  caseStudy: LinkFilter
  summary: StructuredTextFilter
  image: FileFilter
  starterTitle: StructuredTextFilter
  starterDescription: StructuredTextFilter
  link: StringFilter
  OR: [UseCasePageModelFilter]
  AND: [UseCasePageModelFilter]
}

type UseCasePageModelHeaderField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type UseCasePageModelHeadlineField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

enum UseCasePageModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  featuresHeader_ASC
  featuresHeader_DESC
  heading_ASC
  heading_DESC
  identifierInternal_ASC
  identifierInternal_DESC
  link_ASC
  link_DESC
}

type UseCasePageModelQuotesHeaderField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type UseCasePageModelStarterDescriptionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type UseCasePageModelStarterTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type UseCasePageModelSubtitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type UseCasePageModelSuccessStoryHeaderField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type UseCasePageModelSummaryField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

type UseCasePageModelTitleField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

"""Record of type üêÅ Use Case Page (use_case_page)"""
type UseCasePageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  callout: [UseCaseCalloutRecord!]!
  caseStudy: UseCasePageModelCaseStudyField!
  createdAt: DateTime!
  description: UseCasePageModelDescriptionField
  featuresHeader: String
  header: UseCasePageModelHeaderField!
  heading: String
  headline: UseCasePageModelHeadlineField
  heroCustomer: ImageFileField!
  heroImage: ImageFileField!
  heroProduct: ImageFileField!
  id: ItemId!
  identifierInternal: String
  image: ImageFileField!
  link: String!
  quotes: [PartnerTestimonialRecord!]!
  quotesHeader: UseCasePageModelQuotesHeaderField!
  readability: JsonField
  seo: SeoField
  slug: String
  starterDescription: UseCasePageModelStarterDescriptionField!
  starterImage: ImageFileField!
  starterTitle: UseCasePageModelStarterTitleField!
  subtitle: UseCasePageModelSubtitleField
  successStoryHeader: UseCasePageModelSuccessStoryHeaderField!
  summary: UseCasePageModelSummaryField!
  title: UseCasePageModelTitleField!
  updatedAt: DateTime!
}

"""Record of type üåü Success Stories Page (use_cases_page)"""
type UseCasesPageRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  title: String
  updatedAt: DateTime!
}

"""Linking fields"""
enum UserGuidesChapterModelFieldsReferencingUserGuidesEpisodeModel {
  userGuidesChapter_videos
}

input UserGuidesChapterModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  videos: LinksFilter
  introduction: StructuredTextFilter
  title: StringFilter
  slug: SlugFilter
  OR: [UserGuidesChapterModelFilter]
  AND: [UserGuidesChapterModelFilter]
}

type UserGuidesChapterModelIntroductionField {
  blocks: [String!]!
  links: [String!]!
  value: JsonField!
}

enum UserGuidesChapterModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  title_ASC
  title_DESC
}

"""Record of type üè´ User Guides Chapter (user_guides_chapter)"""
type UserGuidesChapterRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  introduction: UserGuidesChapterModelIntroductionField!
  position: IntType
  slug: String!
  title: String!
  updatedAt: DateTime!
  videos: [UserGuidesEpisodeRecord!]!
}

type UserGuidesEpisodeModelContentField {
  blocks: [InternalVideoRecord!]!
  links: [String!]!
  value: JsonField!
}

input UserGuidesEpisodeModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  thumbTimeSeconds: IntegerFilter
  content: StructuredTextFilter
  video: FileFilter
  seo: SeoFilter
  title: StringFilter
  slug: SlugFilter
  OR: [UserGuidesEpisodeModelFilter]
  AND: [UserGuidesEpisodeModelFilter]
}

enum UserGuidesEpisodeModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  thumbTimeSeconds_ASC
  thumbTimeSeconds_DESC
  title_ASC
  title_DESC
}

"""Record of type üìù User Guides Episode (user_guides_episode)"""
type UserGuidesEpisodeRecord implements RecordInterface {
  _allReferencingBlogPosts(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenBlogPostAndUserGuidesEpisode

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: BlogPostModelFilter
    orderBy: [BlogPostModelOrderBy] = [_updatedAt_DESC]
  ): [BlogPostRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingBlogPostsMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenBlogPostAndUserGuidesEpisode

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: BlogPostModelFilter
  ): CollectionMetadata!
  _allReferencingCustomerStories(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenCustomerStoryAndUserGuidesEpisode

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: CustomerStoryModelFilter
    orderBy: [CustomerStoryModelOrderBy] = [_updatedAt_DESC]
  ): [CustomerStoryRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingCustomerStoriesMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenCustomerStoryAndUserGuidesEpisode

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: CustomerStoryModelFilter
  ): CollectionMetadata!
  _allReferencingDocPages(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenDocPageAndUserGuidesEpisode

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: DocPageModelFilter
    orderBy: [DocPageModelOrderBy] = [_updatedAt_DESC]
  ): [DocPageRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingDocPagesMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenDocPageAndUserGuidesEpisode

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: DocPageModelFilter
  ): CollectionMetadata!
  _allReferencingFeaturesIndices(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenFeaturesIndexAndUserGuidesEpisode

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: FeaturesIndexModelFilter
    orderBy: [FeaturesIndexModelOrderBy] = [_updatedAt_DESC]
  ): [FeaturesIndexRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingFeaturesIndicesMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenFeaturesIndexAndUserGuidesEpisode

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: FeaturesIndexModelFilter
  ): CollectionMetadata!
  _allReferencingUserGuidesChapters(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenUserGuidesChapterAndUserGuidesEpisode

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]

    """Skip the first results"""
    skip: IntType

    """Limit the number of results"""
    first: IntType = 20
    filter: UserGuidesChapterModelFilter
    orderBy: [UserGuidesChapterModelOrderBy] = [position_ASC]
  ): [UserGuidesChapterRecord!]!

  """Returns meta information regarding a record collection"""
  _allReferencingUserGuidesChaptersMeta(
    """Specifies how to filter linking records"""
    through: InverseRelationshipFilterBetweenUserGuidesChapterAndUserGuidesEpisode

    """The locale to use to fetch the field's content"""
    locale: SiteLocale
    filter: UserGuidesChapterModelFilter
  ): CollectionMetadata!
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  content: UserGuidesEpisodeModelContentField!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  slug: String!
  thumbTimeSeconds: IntType!
  title: String!
  updatedAt: DateTime!
  video: VideoFileField!
}

"""Record of type üéì User Guides Home (user_guides_home)"""
type UserGuidesHomeRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  seo: SeoField
  updatedAt: DateTime!
}

type VideoField {
  height: IntType!
  provider: String!
  providerUid: String!
  thumbnailUrl: String!
  title: String!
  url: String!
  width: IntType!
}

type VideoFileField implements FileFieldInterface {
  _createdAt: DateTime!

  """
  The DatoCMS URL where you can edit this entity. To use this field, you need to set a X-Base-Editing-Url header in the request
  """
  _editingUrl: String
  _updatedAt: DateTime!
  alt(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  author: String
  basename: String!
  blurUpThumb(
    """
    Controls the "punch" value (~contrast) of the blurhash decoding algorithm (defaults to 1.0)
    """
    punch: Float! = 1

    """Maximum image dimension (defaults to 24px)"""
    size: Int! = 24

    """Image quality (defaults to 70%)"""
    quality: Int! = 70

    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String
  blurhash: String
  colors: [ColorField!]!
  copyright: String
  customData(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): CustomData!
  exifInfo: CustomData!
  filename: String!
  focalPoint(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): focalPoint
  format: String!
  height: IntType!
  id: UploadId!
  md5: String!
  mimeType: String!
  notes: String
  responsiveImage(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams

    """Specify a custom `sizes` attribute for the image"""
    sizes: String

    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): ResponsiveImage
  size: IntType!
  smartTags: [String!]!
  tags: [String!]!
  thumbhash: String
  title(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale

    """
    If you want to fallback to a default translation when a translation has not been found
    """
    fallbackLocales: [SiteLocale!]
  ): String
  url(
    """Imgix transformations to apply to the image"""
    imgixParams: ImgixParams
  ): String!
  video: UploadVideoField!
  width: IntType!
}

"""Specifies how to filter Video fields"""
input VideoFilter {
  """
  Filter records with the specified field defined (i.e. with any value) or not
  """
  exists: BooleanType
}

input VideoModelFilter {
  id: ItemIdFilter
  video: VideoFilter
  OR: [VideoModelFilter]
  AND: [VideoModelFilter]
}

enum VideoMp4Res {
  low
  medium
  high
}

"""Block of type üìπ YouTube/Vimeo embed (video)"""
type VideoRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
  video: VideoField!
}

input VideoTutorialModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  showInDocsHomepage: BooleanFilter
  title: StringFilter
  OR: [VideoTutorialModelFilter]
  AND: [VideoTutorialModelFilter]
}

enum VideoTutorialModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  showInDocsHomepage_ASC
  showInDocsHomepage_DESC
  title_ASC
  title_DESC
}

union VideoTutorialModelVideoTutorialResourceField = OtherVideoResourceRecord | YoutubeVideoResourceRecord

"""Record of type üìπ Video Tutorial (video_tutorial)"""
type VideoTutorialRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  showInDocsHomepage: BooleanType!
  title: String!
  updatedAt: DateTime!
  videoTutorialResource: VideoTutorialModelVideoTutorialResourceField!
}

"""Linking fields"""
enum WebsiteModelFieldsReferencingIntegrationModel {
  website_technologies
}

"""Linking fields"""
enum WebsiteModelFieldsReferencingPartnerModel {
  website_madeBy
}

input WebsiteModelFilter {
  _createdAt: CreatedAtFilter
  createdAt: CreatedAtFilter
  id: ItemIdFilter
  _firstPublishedAt: PublishedAtFilter
  position: PositionFilter
  _publicationScheduledAt: PublishedAtFilter
  _unpublishingScheduledAt: PublishedAtFilter
  _publishedAt: PublishedAtFilter
  _status: StatusFilter
  _updatedAt: UpdatedAtFilter
  updatedAt: UpdatedAtFilter
  _isValid: BooleanFilter
  image: FileFilter
  technologies: LinksFilter
  madeBy: LinkFilter
  url: StringFilter
  title: StringFilter
  OR: [WebsiteModelFilter]
  AND: [WebsiteModelFilter]
}

enum WebsiteModelOrderBy {
  _createdAt_ASC
  _createdAt_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  _firstPublishedAt_ASC
  _firstPublishedAt_DESC
  position_ASC
  position_DESC
  _publicationScheduledAt_ASC
  _publicationScheduledAt_DESC
  _unpublishingScheduledAt_ASC
  _unpublishingScheduledAt_DESC
  _publishedAt_ASC
  _publishedAt_DESC
  _status_ASC
  _status_DESC
  _updatedAt_ASC
  _updatedAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  _isValid_ASC
  _isValid_DESC
  url_ASC
  url_DESC
  title_ASC
  title_DESC
}

"""Record of type üîó Website (website)"""
type WebsiteRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  image: ImageFileField!
  madeBy: PartnerRecord
  position: IntType
  technologies: [IntegrationRecord!]!
  title: String!
  updatedAt: DateTime!
  url: String!
}

"""Block of type YouTube video resource (youtube_video_resource)"""
type YoutubeVideoResourceRecord implements RecordInterface {
  _createdAt: DateTime!

  """Editing URL"""
  _editingUrl: String
  _firstPublishedAt: DateTime
  _isValid: BooleanType!
  _modelApiKey: String!
  _publicationScheduledAt: DateTime
  _publishedAt: DateTime

  """Generates SEO and Social card meta tags to be used in your frontend"""
  _seoMetaTags(
    """The locale to use to fetch the field's content"""
    locale: SiteLocale
  ): [Tag!]!
  _status: ItemStatus!
  _unpublishingScheduledAt: DateTime
  _updatedAt: DateTime!
  createdAt: DateTime!
  id: ItemId!
  updatedAt: DateTime!
  video: VideoField!
}

type focalPoint {
  x: FloatType!
  y: FloatType!
}